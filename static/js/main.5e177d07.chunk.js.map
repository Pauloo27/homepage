{"version":3,"sources":["utils/ProviderManager.ts","components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","provider/LocalStorageProvider.ts","components/BookmarkBar.tsx","components/ToDoEntry.tsx","components/ToDoBox.tsx","components/TrelloSettings.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloIntegration.tsx","components/GCalendarSettings.tsx","components/Clock.tsx","components/Weather.tsx","components/GCalendarIntegration.tsx","components/GeneralSettings.tsx","components/ThemeSelector.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","components/WelcomeModal.tsx","components/UpdateModal.tsx","App.tsx","serviceWorker.js","index.js"],"names":["currentProvider","SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","expand","autoFocus","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","$","tooltip","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","BookmarkEntry","entry","onUpdate","onDelete","data-toggle","data-boundary","title","href","data-target","faPen","defaultProvider","key","localStorage","getItem","removeItem","setItem","getProvider","undefined","BookmarkBar","editable","entries","Array","saveBookmarks","setValue","JSON","stringify","handleEditToggle","prevState","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","setupTooltip","getEntries","map","bookmarks","getValue","parse","faCheck","faPlus","ToDoEntry","done","edit","newText","handleDone","finishEdit","onDoneToggle","toggleEditMode","handleEditSave","preventDefault","handleFormEscape","keyCode","text","onEdit","getTextComponent","onDoubleClick","onSubmit","onKeyUp","onFocus","select","getIcon","faSave","faCheckCircle","faCircle","faTrash","ToDoBox","loaded","saveToDoList","handleInputKey","handleDoneToggle","newValue","handleEdit","height","width","config","animationData","checked","loop","autoplay","todo","TrelloSettings","apiKey","loadedApiKey","loginState","handleKeyChange","componentDidMount","handleLogin","onReady","Trello","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","console","log","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","rel","withLeadingZeroes","number","size","str","formatDate","date","year","getFullYear","month","getMonth","day","getDate","formatTime","showSeconds","hours","getHours","minutes","getMinutes","seconds","getSeconds","TrelloLabelColors","green","yellow","orange","red","purple","blue","sky","lime","pink","black","TrelloCard","parseDate","dateString","Date","getDueDate","card","due","getChecklists","checklists","list","items","checkItems","completedItems","item","faCheckSquare","getLabels","labels","label","style","color","backgroundColor","shortUrl","data-placement","faShareSquare","TrelloIntegration","logged","trello","status","selectedList","selectedBoard","cards","boards","lists","saveHistory","loadBoards","get","res","loadLists","err","boardId","history","json","find","board","loadCards","listId","cardsPromise","idChecklists","checklistPromise","checklist","Promise","resolve","checklistRes","all","handleListChange","changeBy","index","indexOf","maxIndex","newIndex","handleListSelect","handleBoardSelect","getNavigator","aria-haspopup","aria-expanded","faAngleLeft","faAngleRight","showTrelloInfo","loader","handleReady","faCog","gapiconfig","clientId","GCalendarSettings","isSignedIn","isClientReady","showWeather","initClient","gapi","window","client","init","discoveryDocs","scope","catch","auth2","getAuthInstance","updateSigninStatus","then","listen","onLoginStatusChange","getActionButton","signOut","signIn","handleShowWeather","require","script","document","createElement","onload","load","body","appendChild","defaultChecked","Clock","timerId","setInterval","clearInterval","pad","Weather","useState","weather","setWeather","useEffect","weatherCache","now","getTime","data","fetch","weekDays","GCalendarIntegration","events","cache","colors","loadEvents","cachedInfo","event","end","dateTime","old","loadEventsFromGoogle","timeMin","timeMax","calendar","result","calendarList","calendarsRes","promises","calendarId","toISOString","showDeleted","singleEvents","maxResults","orderBy","displayTime","start","eventStart","eventEnd","summary","colorId","getStatus","handleLoginStatusChange","forceUpdate","prev","listEvents","eventsByDay","Map","forEach","when","has","set","sorted","from","sort","content","display","faSync","weekDay","getUTCDay","b","background","foreground","GeneralSettings","showToDo","showCalendar","showTrello","expandBookmarks","saveEngine","saveLayout","handleChange","handleUrlChange","handleCheckboxChange","keyName","newState","layoutConfig","searchEngineConfig","cardsCount","disabled","themes","author","authorUrl","dayUrl","nightUrl","ThemeOption","selected","setId","theme","ThemeSelector","selectedTheme","setTheme","handleThemeChange","useCallback","t","dayBackground","nightBackground","updateBackgrounds","BackgroundSettings","night","aria-controls","data-parent","ProjectInfo","version","BackgroundInfo","toggleBackground","faAdjust","backgroundAuthorUrl","backgroundAuthor","WelcomeModal","modal","UpdateModal","changelog","setChangelog","githubUrl","currentVersion","encodeURIComponent","response","ok","contents","lastVersion","App","currentBackground","backgroundToggled","firstStartup","loadBackgrounds","backgrounds","saveBackgrounds","checkVersion","packageInfo","setBackground","getElementsByTagName","newBackground","updateBackground","checkBackground","handleTrelloReady","handleGeneralSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","handleBackgroundChange","bookmarksExpanded","as","faInfo","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"ikmCAIIA,E,+ICiDWC,G,6KA1CX,GAAqC,IAAjCC,KAAKC,MAAMC,WAAWC,OAAc,OAAO,KAE/C,IAAIC,EAAO,GACPC,EAAS,GAYb,GAV8B,eAA1BL,KAAKC,MAAMC,aACbE,EAAO,aACPC,EAAS,0BAGmB,WAA1BL,KAAKC,MAAMC,aACbE,EAAO,SACPC,EAAS,6BAGmB,WAA1BL,KAAKC,MAAMC,WAAyB,CAAC,IAAD,EAC7BF,KAAKC,MAAMK,UAAWC,MAAM,MAAM,GAAGA,MAAM,KAAnDH,EADqC,oBAEtCC,EAASL,KAAKC,MAAMK,UAGtB,IAAME,EAAI,sDACRH,EAAOE,MAAM,OAAO,GAAGA,MAAM,KAAK,GAD1B,QAIV,OACE,0BAAMF,OAAQA,EAAQI,GAAG,uBAAuBC,UAAS,wBAAmBV,KAAKC,MAAMU,OAAS,WAAa,KAC3G,2BAEEC,WAAS,EACTF,UAAU,aACVN,KAAK,IACLS,YAAW,oBAAeT,GAC1BU,aAAa,QAEf,4BAAQC,KAAK,UACX,yBAAKC,IAAKR,EAAME,UAAU,OAAOO,IAAG,UAAKb,EAAL,iB,GArCtBc,cCuITC,G,kNAhHbC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAElB,KAAOiB,EAAEE,OAAeC,S,EAG1CC,gBAAkB,SAACJ,GACjB,EAAKC,SAAS,CAAEI,IAAML,EAAEE,OAAeC,S,EAGzCG,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CAAEd,KAAOa,EAAEE,OAAeC,S,EAG1CI,aAAe,WACZC,IAAE,2BAAmCC,QAAQ,WAC9C,EAAK7B,MAAM8B,QAAQ,CAAE3B,KAAM,EAAK4B,MAAM5B,KAAMI,KAAM,EAAKwB,MAAMxB,Q,EAG/DyB,WAAa,WACX,GACoC,IAAlC,EAAKD,MAAM5B,KAAK8B,OAAO/B,QACU,IAAjC,EAAK6B,MAAMN,IAAIQ,OAAO/B,OAFxB,CADiB,IAQXuB,EAAQ,EAAKM,MAAbN,IACDA,EAAIS,WAAW,UAClBT,EAAG,kBAAcA,IAGnB,EAAKzB,MAAMmC,OAAO,CAAEV,MAAKtB,KAAM,EAAK4B,MAAM5B,KAAMI,KAAM,EAAKwB,MAAMxB,S,kEArCjER,KAAKsB,SAAS,CACZlB,KAAMJ,KAAKC,MAAMG,KACjBsB,IAAK1B,KAAKC,MAAMyB,IAChBlB,KAAMR,KAAKC,MAAMO,S,+BAsCnB,OACE,yBACEE,UAAU,aACVD,GAAIT,KAAKC,MAAMQ,GACf4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,8BAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,+BAA/B,mBAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,SAI7B,yBAAKjC,UAAU,cACb,yBAAKA,UAAU,2BACb,2BACEK,KAAK,OACLF,YAAY,gBACZH,UAAU,sBACVkC,SAAU5C,KAAKoB,iBACfyB,aAAc7C,KAAKC,MAAMG,OAE3B,2BACEW,KAAK,OACLF,YAAY,eACZH,UAAU,qBACVkC,SAAU5C,KAAKyB,gBACfoB,aAAc7C,KAAKC,MAAMyB,MAE3B,2BACEX,KAAK,OACLF,YAAY,sDACZH,UAAU,sBACVkC,SAAU5C,KAAK2B,iBACfkB,aAAc7C,KAAKC,MAAMO,SAI/B,yBAAKE,UAAU,gBACO,KAAnBV,KAAKC,MAAMyB,IAAa,KACvB,4BACEX,KAAK,SACLL,UAAU,oBACV+B,eAAa,QACbK,QAAS9C,KAAK4B,cAJhB,UASF,4BACEb,KAAK,SACLL,UAAU,kBACVoC,QAAS9C,KAAKiC,WACdQ,eAAa,SAEO,KAAnBzC,KAAKC,MAAMyB,IAAa,SAAW,gB,GAlHvBR,cC6Cd6B,E,4MAlDbd,WAAa,SAACe,GACZA,EAAMvC,GAAK,EAAKR,MAAMQ,GACtB,EAAKR,MAAMgD,SAASD,I,EAGtBpB,aAAe,SAACoB,GACdA,EAAMvC,GAAK,EAAKR,MAAMQ,GACtB,EAAKR,MAAMiD,SAASF,I,uDAGb,MAEchD,KAAKC,MAApBO,EAFC,EAEDA,KAAMJ,EAFL,EAEKA,KAQZ,MANa,KAATI,IACFA,EAAI,sDACFR,KAAKC,MAAMyB,IAAInB,MAAM,OAAO,GAAGA,MAAM,KAAK,GADxC,SAMJ,yBACEG,UAAU,iBACVyC,cAAY,UACZC,gBAAc,SACdC,MAAOjD,GAEP,uBAAGkD,KAAMtD,KAAKC,MAAMyB,KAClB,yBAAKV,IAAKR,EAAMS,IAAG,UAAKjB,KAAKC,MAAMG,KAAhB,YAErB,yBACEM,UAAU,gBACVyC,cAAY,QACZI,cAAA,+BAAqCvD,KAAKC,MAAMQ,KAEhD,kBAAC,IAAD,CAAiBD,KAAMgD,OAEzB,kBAAC,EAAD,CACE/C,GAAE,8BAAyBT,KAAKC,MAAMQ,IACtCL,KAAMJ,KAAKC,MAAMG,KACjBsB,IAAK1B,KAAKC,MAAMyB,IAChBlB,KAAMR,KAAKC,MAAMO,KACjB4B,OAAQpC,KAAKiC,WACbF,QAAS/B,KAAK4B,oB,GA5CIV,aHXtBuC,EAAkB,I,uKIAbC,GACP,OAAqC,OAA9BC,aAAaC,QAAQF,K,iCAGnBA,GACTC,aAAaE,WAAWH,K,+BAGjBA,GACP,OAAOC,aAAaC,QAAQF,K,+BAGrBA,EAAalC,GACpBmC,aAAaG,QAAQJ,EAAKlC,O,yCJNvB,SAASuC,IAEd,YADwBC,IAApBlE,IAJJA,EAI+C2D,GACxC3D,E,IKmIMmE,E,4MA5HbjC,MAAQ,CAAEkC,UAAU,EAAOC,QAAS,IAAIC,O,EAYxCC,cAAgB,WACdN,IAAcO,SAAS,YAAaC,KAAKC,UAAU,EAAKxC,MAAMmC,W,EAGhEM,iBAAmB,WACjB,EAAKnD,UAAS,SAAAoD,GAAS,MAAK,CAAER,UAAWQ,EAAUR,c,EAGrDS,qB,uCAAuB,WAAOC,GAAP,eAAAC,EAAA,sDAErBV,GADMA,EAAY,EAAKnC,MAAjBmC,SACYW,QAAO,SAAC9B,GAAD,OAAWA,EAAMvC,KAAOmE,EAASnE,MAC1D,EAAKa,SAAS,CAAE6C,WAAW,EAAKE,eAHX,2C,wDAMvBU,qB,uCAAuB,WAAOH,GAAP,eAAAC,EAAA,uDAErBV,GADMA,EAAY,EAAKnC,MAAjBmC,SACYW,QAAO,SAAC9B,GAAD,OAAWA,EAAMvC,KAAOmE,EAASnE,OAClDuE,KAAKJ,GACb,EAAKtD,SAAS,CAAE6C,WAAW,EAAKE,eAJX,2C,wDAOvBY,kBAAoB,SAACjC,GACnB,IAAIvC,EAAK,GACT,GACEA,EACEyE,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,UAGuB,IAAjE,EAAKrD,MAAMmC,QAAQW,QAAO,SAAC9B,GAAD,OAAWA,EAAMvC,KAAOA,KAAIN,QAExD6C,EAAMvC,GAAKA,EAZuB,IAc1B0D,EAAY,EAAKnC,MAAjBmC,QACRA,EAAQa,KAAKhC,GACb,EAAK1B,SAAS,CAAE6C,YAAW,WACzB,EAAKE,gBACL,EAAKpE,MAAMqF,mB,EAIfC,WAAa,WAGX,OAFoB,EAAKvD,MAAjBmC,QAEOqB,KAAI,SAACZ,GAAD,OACjB,kBAAC,EAAD,CACElB,IAAKkB,EAASnE,GACdA,GAAImE,EAASnE,GACbL,KAAMwE,EAASxE,KACfsB,IAAKkD,EAASlD,IACdlB,KAAMoE,EAASpE,KACfyC,SAAU,EAAK8B,qBACf7B,SAAU,EAAKyB,2B,kEA/DnB,IAAMc,EAAY1B,IAAc2B,SAAS,aACzC,GAAkB,OAAdD,EAAoB,CACtB,IAAMtB,EAAUI,KAAKoB,MAAMF,GAC3BzF,KAAKsB,SAAS,CAAE6C,iBAEhBnE,KAAKqE,kB,+BAgEP,OACE,yBAAK5D,GAAG,eAAeC,UAAS,wBAAmBV,KAAKC,MAAMU,OAAS,SAAW,KAChF,yBAAKD,UAAU,wBACb,yBACED,GAAG,uBACHC,UAAU,gCACVoC,QAAS9C,KAAKyE,iBACdtB,cAAY,UACZE,MAAM,6BAEN,kBAAC,IAAD,CACE7C,KAAMR,KAAKgC,MAAMkC,SAAW0B,IAAUpC,IACtC9C,UAAU,4BAGbV,KAAKC,MAAMU,OAAS,0CAAsB,KAC3C,yBACEwC,cAAY,UACZE,MAAM,mBACN3C,UAAU,iCAEV,yBACEA,UAAU,gCACVyC,cAAY,QACZI,cAAY,uBAEZ,kBAAC,IAAD,CACE/C,KAAMqF,IACNnF,UAAU,8BAKlB,yBACEA,UAAS,wBAAmBV,KAAKgC,MAAMkC,SAAW,WAAa,KAE9DlE,KAAKuF,cAER,kBAAC,EAAD,CACE9E,GAAG,qBACHL,KAAK,GACLsB,IAAI,GACJlB,KAAK,GACL4B,OAAQpC,KAAKiF,kBAEblD,QAAS,oB,GAtHOb,a,yCCyHX4E,E,4MAlHb9D,MAAQ,CAAE+D,MAAM,EAAOC,MAAM,EAAOC,QAAS,I,EAM7CC,W,sBAAa,sBAAArB,EAAA,0DACP,EAAK7C,MAAMgE,KADJ,uBAET,EAAKG,aAFI,0BAKX,EAAK7E,UACH,SAACoD,GAAD,MAAgB,CAAEqB,MAAOrB,EAAUqB,SACnC,kBAAM,EAAK9F,MAAMmG,aAAa,EAAKnG,MAAMQ,GAAI,EAAKuB,MAAM+D,SAP/C,2C,EAYbnE,aAAe,WACb,EAAK3B,MAAMiD,SAAS,EAAKjD,MAAMQ,K,EAGjC4F,eAAiB,WACf,EAAK/E,UAAS,SAAAoD,GAAS,MAAK,CAAEsB,MAAOtB,EAAUsB,U,EAGjDM,eAAiB,SAACjF,GAChBA,EAAEkF,iBACF,EAAKJ,c,EAGPK,iBAAmB,SAACnF,GACA,KAAdA,EAAEoF,SAAgB,EAAKJ,kB,EAG7BF,WAAa,WACX,EAAKE,iBACL,IAAIK,EAAO,EAAK1E,MAAMiE,QACF,KAAhBS,EAAKxE,SAAewE,EAAO,EAAKzG,MAAMyG,MAC1C,EAAKzG,MAAM0G,OAAO,EAAK1G,MAAMQ,GAAIiG,I,EAGnCE,iBAAmB,WACjB,OAAI,EAAK5E,MAAMgE,KAEX,yBACEtF,UACE,EAAKsB,MAAMgE,KAAO,uBAAyB,kBAE7Ca,cAAe,EAAKR,gBAEpB,0BAAMS,SAAU,EAAKR,eAAgBS,QAAS,EAAKP,kBACjD,2BAEE5F,WAAS,EACTgC,SAAU,SAACvB,GAAD,OAAO,EAAKC,SAAS,CAAE2E,QAAS5E,EAAEE,OAAOC,SACnDwF,QAAS,SAAC3F,GAAD,OAAOA,EAAEE,OAAO0F,UACzBpE,aAAc,EAAK5C,MAAMyG,SAOjC,yBACEhG,UACE,EAAKsB,MAAM+D,KAAO,0BAA4B,kBAEhDc,cAAe,EAAKR,gBAEnB,EAAKpG,MAAMyG,O,EAKlBQ,QAAU,WACR,OAAI,EAAKlF,MAAMgE,KAAamB,IACrB,EAAKnF,MAAM+D,KAAOqB,IAAgBC,K,kEA1EzCrH,KAAKsB,SAAS,CAAEyE,KAAM/F,KAAKC,MAAM8F,S,+BA8EjC,OACE,yBAAKrF,UAAU,cACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,gBACVyC,cAAY,UACZE,MAAM,oBACNP,QAAS9C,KAAKkG,YAEd,kBAAC,IAAD,CACExF,UACEV,KAAKgC,MAAM+D,OAAS/F,KAAKgC,MAAMgE,KAAO,eAAiB,GAEzDxF,KAAMR,KAAKkH,aAGdlH,KAAK4G,oBAER,yBAAKlG,UAAU,sBACb,yBACEA,UAAU,oBACVyC,cAAY,UACZE,MAAM,eACNP,QAAS9C,KAAK4B,cAEd,kBAAC,IAAD,CAAiBpB,KAAM8G,a,GA3GXpG,aC+HTqG,G,kNA9HbvF,MAAQ,CAAEmC,QAAS,IAAIC,MAAyBoD,QAAQ,G,EAYxDC,aAAe,WACb1D,IAAcO,SAAS,YAAaC,KAAKC,UAAU,EAAKxC,MAAMmC,UAC9D,EAAKlE,MAAMqF,gB,EAGboC,eAAiB,SAACrG,GAChB,GAAkB,KAAdA,EAAEoF,QAAgB,CAAC,IAAD,aACpB,IAAMjF,EAASH,EAAEE,OAAeC,MAEhC,GAA4B,IAAxBA,EAAMU,OAAO/B,OACf,MAAM,CAAN,UAGF,IAAIM,EAAK,GAET,GACEA,EACEyE,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,UAGuB,IAAjE,EAAKrD,MAAMmC,QAAQW,QAAO,SAAC9B,GAAD,OAAWA,EAAMvC,KAAOA,KAAIN,QAjBpC,IAoBZgE,EAAY,EAAKnC,MAAjBmC,QACRA,EAAQa,KAAK,CAAE0B,KAAMlF,EAAOuE,MAAM,EAAOtF,OACzC,EAAKa,SAAS,CAAE6C,WAAW,EAAKsD,cAC/BpG,EAAEE,OAAeC,MAAQ,GAvBN,uC,EA2BxBI,aAAe,SAACnB,GACboB,IAAE,2BAAmCC,QAAQ,WADjB,IAEvBqC,EAAY,EAAKnC,MAAjBmC,QACNA,EAAUA,EAAQW,QAAO,SAACtD,GAAD,OAAWA,EAAMf,KAAOA,KACjD,EAAKa,SAAS,CAAE6C,WAAW,EAAKsD,e,EAGlCE,iB,uCAAmB,WAAOlH,EAAYsF,GAAnB,eAAAlB,EAAA,sDAEjBV,GADMA,EAAY,EAAKnC,MAAjBmC,SACYqB,KAAI,SAAChE,GACrB,IAAMoG,EAAWpG,EAGjB,OAFIA,EAAMf,KAAOA,IAAImH,EAAS7B,KAAOA,GAE9B6B,KAET,EAAKtG,SAAS,CAAE6C,WAAW,EAAKsD,cARf,2C,0DAWnBI,W,uCAAa,WAAOpH,EAAYwF,GAAnB,eAAApB,EAAA,sDAEXV,GADMA,EAAY,EAAKnC,MAAjBmC,SACYqB,KAAI,SAAChE,GACrB,IAAMoG,EAAWpG,EAGjB,OAFIA,EAAMf,KAAOA,IAAImH,EAASlB,KAAOT,GAE9B2B,KAET,EAAKtG,SAAS,CAAE6C,WAAW,EAAKsD,cARrB,2C,0DAWblC,WAAa,WACX,OAAK,EAAKvD,MAAMwF,OACkB,IAA9B,EAAKxF,MAAMmC,QAAQhE,OAEnB,yBAAKO,UAAU,0CACb,kBAAC,IAAD,CAAQA,UAAU,2BAChB,kBAAC,IAAD,CACEoH,OAAO,QACPC,MAAM,QACNC,OAAQ,CACNC,cAAeC,EACfC,MAAM,EACNC,UAAU,KAGd,wBAAI1H,UAAU,sBAAd,iBAMD,EAAKsB,MAAMmC,QAAQqB,KAAI,SAACxC,GAAD,OAC5B,kBAAC,EAAD,CACEE,SAAU,EAAKtB,aACfwE,aAAc,EAAKuB,iBACnBhB,OAAQ,EAAKkB,WACbnB,KAAM1D,EAAM0D,KACZX,KAAM/C,EAAM+C,KACZtF,GAAIuC,EAAMvC,GACViD,IAAKV,EAAMvC,QA5BgB,M,kEAxE/B,IAAM4H,EAAOtE,IAAc2B,SAAS,aACpC,GAAa,OAAT2C,EAAe,CACjB,IAAMlE,EAAUI,KAAKoB,MAAM0C,GAC3BrI,KAAKsB,SAAS,CAAE6C,UAASqD,QAAQ,SAEjCxH,KAAKsB,SAAS,CAAEkG,QAAQ,GAAQxH,KAAKyH,gB,+BAqGvC,OACE,yBAAKhH,GAAG,WAAWC,UAAU,iBAC3B,sCACA,2BACED,GAAG,iBACHC,UAAU,aACVK,KAAK,OACLF,YAAY,+BACZC,aAAa,MACbiG,QAAS/G,KAAK0H,iBAEhB,6BAAM1H,KAAKuF,mB,GAzHGrE,c,yBCwJPoH,E,4MAnJbtG,MAAQ,CACNuG,OAAQ,GACRC,aAAc,GACdC,WAAY,G,EAGdxG,WAAa,WACX,IAAIwG,EAAa,EAGfA,EADsC,IAApC,EAAKzG,MAAMuG,OAAOrG,OAAO/B,QACb,EACoC,OAAzCwD,aAAaC,QAAQ,iBAChB,EAED,EAGf,EAAKtC,UAAS,SAACoD,GAAD,MAAgB,CAC5B8D,aAAc9D,EAAU6D,OACxBE,iBAEF,EAAKxI,MAAMmC,OAAO,EAAKJ,MAAMuG,S,EAG/BG,gBAAkB,SAACrH,GACjB,EAAKC,SAAS,CAAEiH,OAASlH,EAAEE,OAAeC,S,EAG5CmH,kB,sBAAoB,4BAAA9D,EAAA,6DACd4D,EAAa,EAGfA,EADsC,IAApC,EAAKxI,MAAMsI,OAAOrG,OAAO/B,QACb,EACoC,OAAzCwD,aAAaC,QAAQ,iBAChB,EAED,EARG,SAWZ,EAAKtC,SAAS,CAClBmH,aACAF,OAAQ,EAAKtI,MAAMsI,OACnBC,aAAc,EAAKvI,MAAMsI,SAdT,2C,EAkBpBK,YAAc,WACZ,EAAK3I,MAAM4I,QAAQC,W,EAGrBC,gBAAkB,WAChB,OAA+B,IAA3B,EAAK/G,MAAMyG,YAA+C,IAA1B,EAAKzG,MAAMyG,WACtC,KAEP,kBAAC,IAAD,CACEF,OAAQ,EAAKvG,MAAMwG,aACnBQ,cAAe,EACfC,YAAY,yBACZC,aAAa,qBACbC,eAAe,qBACfC,cAAc,WACdC,cAAc,QACdC,kBAAgB,EAChBC,sBAAoB,EACpBC,oBAAkB,EAClBC,qBAAmB,EACnBC,uBAAqB,EACrBC,oBAAoB,QACpBC,mBAAoB,EAAKhB,YACzBiB,iBAAkB,kBAAMC,QAAQC,IAAI,iBACpCC,eAAa,EACbC,iBAAe,EACfC,YAAY,YACZC,YAAY,QACZC,WAAW,uB,uDAMf,OACE,yBACE1J,UAAU,aACVD,GAAG,wBACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,6BAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,+BAA/B,mBAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,SAI7B,yBAAKjC,UAAU,cACb,kFACuD,IACrD,uBACEa,OAAO,SACP8I,IAAI,sBACJ/G,KAAK,8BAHP,8BAFF,uDAWA,2BACET,aAAc7C,KAAKgC,MAAMuG,OACzB3F,SAAU5C,KAAK0I,gBACf7H,YAAY,mDAEd,yBACEJ,GAAG,yBACHC,WAAsC,IAA3BV,KAAKgC,MAAMyG,WAAoB,SAAW,IAEpDzI,KAAK+I,oBAGV,yBAAKrI,UAAU,gBACb,4BACEoC,QAAS9C,KAAKiC,WACdlB,KAAK,SACL0B,eAAa,QACb/B,UAAU,mBAJZ,gB,GAvIeQ,aCzBtB,SAASoJ,EAAkBC,EAAgBC,GAEhD,IADA,IAAIC,EAAMF,EAAOnF,WACVqF,EAAItK,OAASqK,GAAMC,EAAG,WAAOA,GACpC,OAAOA,EAGF,SAASC,EAAWC,GACzB,IAAMC,EAAOD,EAAKE,cACZC,EAAQR,EAAkBK,EAAKI,WAAa,EAAG,GAC/CC,EAAMV,EAAkBK,EAAKM,UAAW,GAC9C,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA2BE,GAGtB,SAASE,EAAWP,GAA0C,IAA9BQ,EAA6B,wDAC5DC,EAAQd,EAAkBK,EAAKU,WAAY,GAC3CC,EAAUhB,EAAkBK,EAAKY,aAAc,GACrD,GAAIJ,EAAa,CACf,IAAMK,EAAUlB,EAAkBK,EAAKc,aAAc,GACrD,MAAM,GAAN,OAAUL,EAAV,YAAmBE,EAAnB,YAA8BE,GAE9B,MAAM,GAAN,OAAUJ,EAAV,YAAmBE,GCZvB,IAAMI,EAAoB,CACxBC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,KAAM,UACNC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,MAAO,WAiGMC,E,4MAzFbC,UAAY,SAACC,GAEX,OAAO7B,EADM,IAAI8B,KAAKA,KAAK7G,MAAM4G,M,EAInCE,WAAa,SAACC,GACZ,OAAiB,OAAbA,EAAKC,IAAqB,KAEvB,yBAAKjM,UAAU,mBAAmB,EAAK4L,UAAUI,EAAKC,O,EAG/DC,cAAgB,SAACF,GACf,YAAwB1I,IAApB0I,EAAKG,WAAiC,KAGxC,yBAAKnM,UAAU,0BACZgM,EAAKG,WAAWrH,KAAI,SAACsH,GACpB,IAAMC,EAAQD,EAAKE,WACbC,EAAiBF,EAAMjI,QAC3B,SAACoI,GAAD,MAA8B,aAAfA,EAAKlL,SAEtB,OACE,yBACE0B,IAAKoJ,EAAKrM,GACVC,UAAS,gCACPqM,EAAM5M,SAAW8M,EAAe9M,OAAS,YAAc,KAGzD,kBAAC,IAAD,CAAiBO,UAAU,OAAOF,KAAM2M,MAN1C,UAOMF,EAAe9M,OAPrB,YAO+B4M,EAAM5M,c,EAQ/CiN,UAAY,SAACV,GACX,IAAMW,EAASX,EAAKW,OACpB,OAAsB,IAAlBA,EAAOlN,OAAqB,KAG9B,yBAAKO,UAAU,sBACZ2M,EAAO7H,KAAI,SAAC8H,GAAD,OACV,yBACE5J,IAAK4J,EAAM7M,GACXC,UAAU,oBACV6M,MAAO,CACLC,MAAO,QACPC,gBAAkB/B,EAA0B4B,EAAME,SAGnDF,EAAMlN,W,uDAOP,IACAsM,EAAS1M,KAAKC,MAAdyM,KACR,OACE,yBAAKhM,UAAU,eACZV,KAAKoN,UAAUV,GAChB,yBAAKhM,UAAU,uBACb,yBAAKA,UAAU,oBAAoBgM,EAAKtM,MACxC,yBAAKM,UAAU,uBACb,uBACEa,OAAO,SACP8I,IAAI,sBACJ/G,KAAMoJ,EAAKgB,SACXhN,UAAU,4BACVyC,cAAY,UACZwK,iBAAe,OACftK,MAAM,uBAEN,yBAAK3C,UAAU,sBACb,kBAAC,IAAD,CAAiBF,KAAMoN,UAK9B5N,KAAKyM,WAAWC,GAChB1M,KAAK4M,cAAcF,Q,GApFHxL,a,QC4WV2M,G,kNA5Vb7L,MAAQ,CACN8L,QAAQ,EACRC,OAAQ,GACRC,OAAQ,EACRC,aAAc,GACdC,cAAe,GACfC,MAAO,IAAI/J,MACXgK,OAAQ,IAAIhK,MACZiK,MAAO,IAAIjK,O,EAGbkK,YAAc,WACZ3K,aAAaG,QACX,iBACAS,KAAKC,UAAU,CACbyJ,aAAc,EAAKjM,MAAMiM,aAAaxN,GACtCyN,cAAe,EAAKlM,MAAMkM,cAAczN,O,EAK9C8N,W,uCAAa,WAAOR,GAAP,SAAAlJ,EAAA,sDACXkJ,EAAOS,IACL,oBADF,uCAEE,WAAOC,GAAP,SAAA5J,EAAA,6DACEiF,QAAQC,IAAI,cADd,SAEQ,EAAKzI,SAAS,CAAE8M,OAAQK,IAFhC,OAGE,EAAKC,UAAUX,GAHjB,2CAFF,uDAOE,SAACY,GACC7E,QAAQC,IAAI4E,MATL,2C,wDAcbD,UAAY,SAACX,GACX,IAAIa,EAAU,EAAK5M,MAAMkM,cAAczN,GACvC,QAAgBuD,IAAZ4K,EAAuB,CACzB,IAAMC,EAAUlL,aAAaC,QAAQ,kBACrC,GAA0B,IAAtB,EAAK5B,MAAMgM,QAA4B,OAAZa,EAAkB,CAC/C,IAAMC,EAAOvK,KAAKoB,MAAMkJ,QACG7K,IAAvB8K,EAAKZ,eACPU,EAAU,EAAK5M,MAAMoM,OAAO,GAAG3N,GAC/B,EAAKa,UAAS,SAACoD,GAAD,MAAgB,CAC5BwJ,cAAexJ,EAAU0J,OAAO,SAGlCQ,EAAUE,EAAKZ,cACf,EAAK5M,UAAS,SAACoD,GAAD,MAAgB,CAC5BwJ,cAAexJ,EAAU0J,OAAOW,MAC9B,SAACC,GAAD,OAAWA,EAAMvO,KAAOqO,EAAKZ,2BAKnCU,EAAU,EAAK5M,MAAMoM,OAAO,GAAG3N,GAC/B,EAAKa,UAAS,SAACoD,GAAD,MAAgB,CAAEwJ,cAAexJ,EAAU0J,OAAO,OAGpEL,EAAOS,IAAP,iBACYI,EADZ,iDAEE,WAAOH,GAAP,SAAA5J,EAAA,6DACEiF,QAAQC,IAAI,aADd,SAEQ,EAAKzI,SAAS,CAAE+M,MAAOI,IAF/B,OAGE,EAAKQ,UAAUlB,GAHjB,2CAFF,uDAOE,SAACY,GACC7E,QAAQC,IAAI4E,O,EAKlBM,UAAY,SAAClB,GACX,IAAImB,EAAS,EAAKlN,MAAMiM,aAAaxN,GACrC,QAAeuD,IAAXkL,EAAsB,CACxB,IAAML,EAAUlL,aAAaC,QAAQ,kBACrC,GAA0B,IAAtB,EAAK5B,MAAMgM,QAA4B,OAAZa,EAAkB,CAC/C,IAAMC,EAAOvK,KAAKoB,MAAMkJ,QACE7K,IAAtB8K,EAAKb,cACPiB,EAAS,EAAKlN,MAAMqM,MAAM,GAAG5N,GAC7B,EAAKa,UAAS,SAACoD,GAAD,MAAgB,CAAEuJ,aAAcvJ,EAAU2J,MAAM,SAE9Da,EAASJ,EAAKb,aACd,EAAK3M,UAAS,SAACoD,GAAD,MAAgB,CAC5BuJ,aAAcvJ,EAAU2J,MAAMU,MAC5B,SAACjC,GAAD,OAAUA,EAAKrM,KAAOqO,EAAKb,0BAKjCiB,EAAS,EAAKlN,MAAMqM,MAAM,GAAG5N,GAC7B,EAAKa,UAAS,SAAAoD,GAAS,MAAK,CAAEuJ,aAAcvJ,EAAU2J,MAAM,OAGhEN,EAAOS,IAAP,gBACWU,EADX,iDAEE,WAAOT,GAAP,iBAAA5J,EAAA,6DACEiF,QAAQC,IAAI,aACNoF,EAAeV,EAAIjJ,IAAJ,uCAAQ,WAAOkH,GAAP,iBAAA7H,EAAA,yDACM,IAA7B6H,EAAK0C,aAAajP,OADK,yCACgBuM,GADhB,cAG3B5C,QAAQC,IAAI,kBACNsF,EAAmB3C,EAAK0C,aAAa5J,IAAlB,uCACvB,WAAO8J,GAAP,SAAAzK,EAAA,+EACE,IAAI0K,SAAQ,SAACC,GACXzB,EAAOS,IAAP,qBACgBc,IACd,SAACG,GAAD,OAAuBD,EAAQC,MAC/B,WACED,OAAQxL,UANhB,2CADuB,uDAJE,SAiBFuL,QAAQG,IAAIL,GAjBV,cAiBrBxC,EAjBqB,OAkB3BH,EAAKG,WAAaA,EAlBS,kBAmBpBH,GAnBoB,2CAAR,uDAFvB,SAuBsB6C,QAAQG,IAAIP,GAvBlC,OAuBQhB,EAvBR,OAwBE,EAAK7M,SAAS,CAAE6M,QAAOH,OAAQ,IAC/B,EAAK/N,MAAM4I,UAzBb,2CAFF,uDA6BE,SAAC8F,GACC7E,QAAQC,IAAI,SAAU4E,GACtB,EAAKrN,SAAS,CAAE6M,WAAOnK,EAAWgK,OAAQ,IAC1C,EAAK/N,MAAM4I,c,EAKjB8G,iB,uCAAmB,WAAOC,GAAP,mBAAA/K,EAAA,6DACXgL,EAAQ,EAAK7N,MAAMqM,MAAMyB,QAAQ,EAAK9N,MAAMiM,cAC5C8B,EAAW,EAAK/N,MAAMqM,MAAMlO,OAAS,GACvC6P,EAAWH,EAAQD,KACN,IAAGI,EAAWD,GAC3BC,EAAWD,IAAUC,EAAW,GALnB,SAOX,EAAK1O,UAAS,SAAAoD,GAAS,MAAK,CAChCuJ,aAAcvJ,EAAU2J,MAAM2B,GAC9BhC,OAAQ,MATO,OAWjB,EAAKiB,UAAU,EAAKjN,MAAM+L,QAC1B,EAAKO,cAZY,2C,wDAenB2B,iB,uCAAmB,WAAOxP,GAAP,SAAAoE,EAAA,sEACX,EAAKvD,UAAS,SAAAoD,GAAS,MAAK,CAChCuJ,aAAcvJ,EAAU2J,MAAMU,MAAK,SAACjC,GAAD,OAAUA,EAAKrM,KAAOA,KACzDuN,QAAS,MAHM,OAKjB,EAAKiB,UAAU,EAAKjN,MAAM+L,QAC1B,EAAKO,cANY,2C,wDASnB4B,kB,uCAAoB,WAAOzP,GAAP,SAAAoE,EAAA,sEACZ,EAAKvD,UAAS,SAAAoD,GAAS,MAAK,CAChCwJ,cAAexJ,EAAU0J,OAAOW,MAAK,SAACC,GAAD,OAAWA,EAAMvO,KAAOA,KAC7DwN,aAAc,GACdD,QAAS,MAJO,OAMlB,EAAKO,WAAW,EAAKvM,MAAM+L,QAC3B,EAAKO,cAPa,2C,wDAUpB6B,aAAe,kBACb,oCACE,yBAAKzP,UAAU,2CACb,yBAAKA,UAAU,YACb,4BACEA,UAAU,yBACVK,KAAK,SACLN,GAAG,yBACH0C,cAAY,WACZiN,gBAAc,OACdC,gBAAc,SAEd,wBAAI3P,UAAU,eAAe,EAAKsB,MAAMkM,cAAc9N,OAExD,yBACEM,UAAU,gBACV6B,kBAAgB,0BAEf,EAAKP,MAAMoM,OAAO5I,KAAI,SAACwJ,GAAD,OACrB,yBACElM,QAAS,kBAAM,EAAKoN,kBAAkBlB,EAAMvO,KAC5CiD,IAAKsL,EAAMvO,GACXC,UAAU,iBAETsO,EAAM5O,YAMjB,yBAAKM,UAAU,0CACb,yBAAKoC,QAAS,kBAAM,EAAK6M,kBAAkB,IAAIjP,UAAU,QACvD,kBAAC,IAAD,CAAiBF,KAAM8P,OAEzB,yBAAK5P,UAAU,YACb,4BACEA,UAAU,yBACVK,KAAK,SACLN,GAAG,wBACH0C,cAAY,WACZiN,gBAAc,OACdC,gBAAc,SAEd,wBAAI3P,UAAU,eAAe,EAAKsB,MAAMiM,aAAa7N,OAEvD,yBACEM,UAAU,gBACV6B,kBAAgB,yBAEf,EAAKP,MAAMqM,MAAM7I,KAAI,SAACsH,GAAD,OACpB,yBACEhK,QAAS,kBAAM,EAAKmN,iBAAiBnD,EAAKrM,KAC1CiD,IAAKoJ,EAAKrM,GACVC,UAAU,iBAEToM,EAAK1M,WAMd,yBAAK0C,QAAS,kBAAM,EAAK6M,iBAAiB,IAAKjP,UAAU,QACvD,kBAAC,IAAD,CAAiBF,KAAM+P,U,EAM/BC,eAAiB,WACf,OAAwC,IAApC,EAAKvQ,MAAMsI,OAAOrG,OAAO/B,OACpB,mEAEL,EAAK6B,MAAM8L,QAAgC,IAAtB,EAAK9L,MAAMgM,YACThK,IAArB,EAAKhC,MAAMmM,MAEX,yBAAKzN,UAAU,yCACb,kBAAC,IAAD,CAAQA,UAAU,2BAChB,kBAAC,IAAD,CAAiBF,KAAMmC,IAASjC,UAAU,wBAC1C,wBAAIA,UAAU,sBAAd,qBAEE,6BAFF,sBAUwB,IAA5B,EAAKsB,MAAMmM,MAAMhO,OAEjB,oCACG,EAAKgQ,eACN,yBAAKzP,UAAU,0CACb,kBAAC,IAAD,CAAQA,UAAU,2BAChB,kBAAC,IAAD,CACEoH,OAAO,QACPC,MAAM,QACNC,OAAQ,CACNC,cAAeC,EACfC,MAAM,EACNC,UAAU,KAGd,wBAAI1H,UAAU,sBAAd,kBAQR,oCACG,EAAKyP,eACN,yBAAK1P,GAAG,0BACL,EAAKuB,MAAMmM,MAAM3I,KAAI,SAACkH,GAAD,OACpB,kBAAC,IAAD,CAAQhJ,IAAKgJ,EAAKjM,IAChB,kBAAC,EAAD,CAAYiM,KAAMA,UAQ5B,kBAAC,IAAD,KACE,yBAAKhM,UAAU,0CACb,kBAAC,IAAD,CACEoH,OAAO,QACPC,MAAM,QACNC,OAAQ,CAAEC,cAAewI,EAAQtI,MAAM,EAAMC,UAAU,KAEzD,wBAAI1H,UAAU,sBAAd,yB,EAMRuB,WAAa,SAACsG,GACZ5E,aAAaG,QACX,gBACAS,KAAKC,UAAU,CAAE+D,OAAQA,EAAOrG,W,EAIpCwO,YAAc,SAAC3C,GACT,EAAK/L,MAAM8L,SACf,EAAKS,WAAWR,GAChB,EAAKzM,SAAS,CAAEwM,QAAQ,EAAMC,a,uDAI9B,OACE,yBAAKtN,GAAG,kBAAkBC,UAAU,iBAClC,yBAAKA,UAAU,wBACb,uCACA,yBACEyC,cAAY,UACZE,MAAM,eACN3C,UAAU,iCAEV,yBACEA,UAAU,gCACVyC,cAAY,QACZI,cAAY,0BAEZ,kBAAC,IAAD,CACE/C,KAAMmQ,IACNjQ,UAAU,8BAKlB,kBAAC,EAAD,CACE6H,OAAQvI,KAAKC,MAAMsI,OACnBnG,OAAQpC,KAAKiC,WACb4G,QAAS7I,KAAK0Q,cAEf1Q,KAAKwQ,sB,GA1VkBtP,c,QCjC1B0P,EAAa,CAAErI,OAAQ,GAAIsI,SAAU,IAoL5BC,E,4MAlKb9O,MAAQ,CACN+O,gBAAY/M,EACZgN,eAAe,EACfC,aAAa,G,EA2BfC,WAAa,WAAO,IACVC,EAASC,OAATD,KAERA,EAAKE,OACFC,KAAK,CACJ/I,OAAQqI,EAAWrI,OACnBsI,SAAUD,EAAWC,SACrBU,cAAe,CACb,iEAEFC,MAAO,sDAERC,OAAM,WACL3H,QAAQC,IAAI,oCACyB,OAAjCoH,EAAKO,MAAMC,oBACb7H,QAAQC,IAAI,6CACZ,EAAK6H,oBAAmB,OAG3BC,MAAK,WAEJ,GADA/H,QAAQC,IAAI,0BACyB,OAAjCoH,EAAKO,MAAMC,kBAGb,OAFA7H,QAAQC,IAAI,kDACZ,EAAK6H,oBAAmB,GAI1B,EAAKtQ,SAAS,CAAE0P,eAAe,IAE/BG,EAAKO,MAAMC,kBAAkBZ,WAAWe,OAAO,EAAKF,oBAEpD,EAAKA,mBAAmBT,EAAKO,MAAMC,kBAAkBZ,WAAWvC,W,EAItEoD,mBAAqB,SAACb,GACpBjH,QAAQC,IAAI,kCAAmCgH,GAC/C,EAAKzP,SAAS,CAAEyP,eAChB,EAAK9Q,MAAM8R,oBAAoBhB,I,EAGjCiB,gBAAkB,SAACb,GACjB,MAA4B,KAAxBP,EAAWC,UAAyC,KAAtBD,EAAWrI,OACpC,mDACJ,EAAKvG,MAAMgP,cACZ,EAAKhP,MAAM+O,WAEX,4BACEhQ,KAAK,SACL+B,QAAS,kBAAMqO,EAAKO,MAAMC,kBAAkBM,WAC5CvR,UAAU,qBAHZ,YAUF,4BACEK,KAAK,SACL+B,QAAS,kBAAMqO,EAAKO,MAAMC,kBAAkBO,UAC5CxR,UAAU,mBAHZ,+BAboC,M,EAuBxCuB,WAAa,WACX0B,aAAaG,QAAQ,eAAgBS,KAAKC,UAAU,CAACyM,YAAa,EAAKjP,MAAMiP,eAC7E,EAAKhR,MAAMmC,OAAO,CAAC6O,YAAa,EAAKjP,MAAMiP,e,EAG7CkB,kBAAoB,SAAC9Q,GACnB,EAAKC,SAAS,CAAC2P,YAAa5P,EAAEE,OAAO2G,W,2LAhGrClI,KAAKsB,SAAS,CAAC2P,YAAajR,KAAKC,MAAMgR,cACvC,SAGiBjN,KADTgE,EAASoK,EAAQ,OAErBxB,EAAWC,SAAW7I,EAAO6I,SAC7BD,EAAWrI,OAASP,EAAOO,QAE7B,MAAOlH,GACPyI,QAAQC,IAAI,yDAGRsI,EAASC,SAASC,cAAc,WAC/BvR,IAAM,oCAEbqR,EAAOG,OAAS,WACGpB,OAATD,KACHsB,KAAK,eAAgB,EAAKvB,aAGjCoB,SAASI,KAAKC,YAAYN,G,qIAgF1B,QAA8BrO,IAA1BhE,KAAKgC,MAAM+O,WAA0B,OAAO,KADzC,IAGCI,EAASC,OAATD,KAER,OACE,yBACEzQ,UAAU,aACVD,GAAG,2BACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,iCAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,kCAA/B,4BAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,OACjB,MAGZ,yBAAKjC,UAAU,cACZV,KAAKgS,gBAAgBb,GACtB,6BACA,yBAAKzQ,UAAU,kBACb,2BAAOK,KAAK,WAAW6R,eAAgB5S,KAAKC,MAAMgR,YAAarO,SAAU5C,KAAKmS,oBAC9E,gDAGJ,yBAAKzR,UAAU,gBACb,4BACEK,KAAK,SACLL,UAAU,kBACVoC,QAAS9C,KAAKiC,WACdQ,eAAa,SAJf,gB,GAtJkBvB,aCgBjB2R,E,4MA1Bb7Q,MAAQ,CAAE2I,KAAM,IAAI6B,M,EAEpBsG,a,oEAEqB,IAAD,OAClB9S,KAAK8S,QAAUC,aAAY,kBAAM,EAAKzR,SAAS,CAAEqJ,KAAM,IAAI6B,SAAW,O,6CAItEwG,cAAchT,KAAK8S,W,+BAGX,IACAnI,EAAS3K,KAAKgC,MAAd2I,KACFS,EAAQ6H,EAAItI,EAAKU,WAAY,GAC7BC,EAAU2H,EAAItI,EAAKY,aAAc,GACjCC,EAAUyH,EAAItI,EAAKc,aAAc,GACvC,OACE,oCACE,wBAAIhL,GAAG,kBAAkBiK,EAAWC,IACpC,wBAAIlK,GAAG,kBAAP,UAA4B2K,EAA5B,YAAqCE,EAArC,YAAgDE,S,GArBpCtK,aCLL,SAASgS,IAAW,IAAD,EACFC,wBAASnP,GADP,mBACzBoP,EADyB,KAChBC,EADgB,KAyBhC,OAvBAC,qBAAU,WACR,IAAMC,EAAe5P,aAAaC,QAAQ,iBACpC4P,GAAM,IAAIhH,MAAOiH,UAAY,IAEnC,GAAoB,OAAjBF,EAAuB,CACxBzJ,QAAQC,IAAI,0BADY,MAEHxF,KAAKoB,MAAM4N,GAAzB5I,EAFiB,EAEjBA,KAAM+I,EAFW,EAEXA,KACb,GAAGF,EAAM7I,EAAQ,KAEf,YADA0I,EAAWK,GAGb5J,QAAQC,IAAI,6BAGdD,QAAQC,IAAI,uBACZ4J,MAAM,2BACH9B,MAAK,SAAApD,GAAG,OAAIA,EAAI/H,UAChBmL,MAAK,SAAAnL,GACJ/C,aAAaG,QAAQ,gBAAiBS,KAAKC,UAAU,CAACmG,KAAM6I,EAAKE,KAAMhN,KACvE2M,EAAW3M,QAEd,CAAC2M,IAEI,wBAAI5S,GAAG,WAAW2S,GAAW,oB,UCHjCQ,EAAW,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YA6PaC,E,4MAzPb7R,MAAQ,CAAEyG,WAAY,EAAGqL,OAAQ,IAAI1P,MAAc6M,aAAa,EAAM8C,WAAO/P,G,EAE7EgQ,OAAc,G,EAUdC,W,uCAAa,WAAOT,GAAP,yBAAA3O,EAAA,yDAEO,QADZqP,EAAavQ,aAAaC,QAAQ,qBAD7B,uBAGTkG,QAAQC,IAAI,2BAHH,4BAQkBxF,KAAKoB,MAAMuO,GAAnCvJ,EARM,EAQNA,KAAMmJ,EARA,EAQAA,OAAQE,EARR,EAQQA,OAEnBF,EAASA,EAAOhP,QAAO,SAACqP,GAAgB,IAC/BC,EAAOD,EAAPC,IAQP,YALiBpQ,IAAboQ,EAAIzJ,KACI,IAAI6B,KAAJ,UAAY4H,EAAIzJ,KAAhB,cAEA,IAAI6B,KAAK4H,EAAIC,WAEVZ,UAAYD,EAAIC,aAG7Ba,GAAM,EAEPd,EAAIC,UAAY9I,GAAQ,MACzBb,QAAQC,IAAI,6BACZuK,GAAM,GAGR,EAAKN,OAASA,EACd,EAAK1S,SAAS,CAAEwS,SAAQC,MAAO,CAACpJ,OAAM2J,SA9B3B,4C,wDAiCbC,qB,uCAAuB,WAAOC,GAAP,yBAAA3P,EAAA,+DACJuM,OAATD,EADa,EACbA,KAEFsD,EAAU,IAAIjI,KAAKgI,EAAQf,UAAY,QAEvCK,EAAS,IAAI1P,MALE,SAQA+M,EAAKE,OAAOqD,SAASV,OAAOxF,MAR5B,cAQrB,EAAKwF,OARgB,OAQmCW,OAAOD,SAR1C,SAWMvD,EAAKE,OAAOqD,SAASE,aAAa9H,OAXxC,cAWf+H,EAXe,OAafC,EAAYD,EAAaF,OAAO5H,MAAqBvH,IAA1C,uCACf,WAAOkP,GAAP,eAAA7P,EAAA,sEACoBsM,EAAKE,OAAOqD,SAASZ,OAAOhH,KAAK,CACjDiI,WAAYL,EAASjU,GACrB+T,QAASA,EAAQQ,cACjBP,QAASA,EAAQO,cACjBC,aAAa,EACbC,cAAc,EACdC,WAAY,GACZC,QAAS,cARb,OACQ3G,EADR,OAUEqF,EAAO9O,KAAP,MAAA8O,EAAM,YACDrF,EAAIkG,OAAO5H,MAAMvH,KAAI,SAAC2O,GACvB,IAAIkB,EAAc,UAClB,QAAyBrR,IAArBmQ,EAAMmB,MAAM3K,KAAoB,CAClC,IAAM4K,EAAapB,EAAMmB,MAAMjB,SAC5B9T,MAAM,KAAK,GACX8E,UAAU,EAAG,GACVmQ,EAAWrB,EAAMC,IAAIC,SAAS9T,MAAM,KAAK,GAAG8E,UAAU,EAAG,GAC/DgQ,EAAW,UAAME,EAAN,cAAuBC,GAGpC,MAAO,CAAC/U,GAD0B0T,EAA3B1T,GACK4U,cAAaC,MADSnB,EAAvBmB,MACqBlB,IADED,EAAhBC,IACmBqB,QADHtB,EAAXsB,QACuBC,QAAShB,EAASgB,cArBtE,2CADe,uDAbI,UAyCfnG,QAAQG,IAAIoF,GAzCG,QA2CrBnR,aAAaG,QAAQ,mBAAoBS,KAAKC,UAAU,CAACmG,MAAM,IAAI6B,MAAOiH,UAAWK,SAAQE,OAAQ,EAAKA,UAC1G,EAAK1S,SAAS,CAAEwS,SAAQC,WAAO/P,IA5CV,4C,wDA+CvB2R,UAAY,WACV,OAA+B,IAA3B,EAAK3T,MAAMyG,WACN,8EACF,M,EAGTmN,wB,uCAA0B,WAAO7E,GAAP,eAAAlM,EAAA,yDAClBkP,EAAQ,EAAK/R,MAAM+R,OACrBhD,QAAyB/M,IAAV+P,IAAuBA,EAAMO,IAFxB,gCAGhB,EAAKC,qBAAqB,IAAI/H,MAHd,OAKxB,EAAKlL,SAAS,CAAEmH,WAAYsI,EAAa,GAAK,IALtB,2C,wDAQ1B8E,YAAc,WACkB,IAA1B,EAAK7T,MAAMyG,YACb,EAAKnH,UAAS,SAACwU,GAAD,MAAW,CAAC/B,MAAO,CAACpJ,KAAMmL,EAAK/B,MAAMpJ,KAAM2J,KAAK,OAAU,WACtE,EAAKC,qBAAqB,IAAI/H,U,EAKpCuJ,WAAa,WACX,IAA+B,IAA3B,EAAK/T,MAAMyG,WAAmB,OAAO,KACzC,GAA8B,IAA1B,EAAKzG,MAAMyG,aAAqB,EAAKzG,MAAM+R,MAC7C,OACE,kBAAC,IAAD,KACE,yBAAKrT,UAAU,0CACb,kBAAC,IAAD,CACEoH,OAAO,QACPC,MAAM,QACNC,OAAQ,CAAEC,cAAewI,EAAQtI,MAAM,EAAMC,UAAU,KAEzD,wBAAI1H,UAAU,sBAAd,iCAMR,IAAMsV,EAAc,IAAIC,IAExB,EAAKjU,MAAM8R,OAAOoC,SAAQ,SAAC/B,GACzB,IAAIgC,EAAOhC,EAAMmB,MAAM3K,UAEV3G,IAATmS,IAAoBA,EAAOhC,EAAMmB,MAAMjB,SAAS9T,MAAM,KAAK,IAE/D,IAAIuT,EAAS,IAAI1P,MACb4R,EAAYI,IAAID,KAClBrC,EAASkC,EAAYxH,IAAI2H,IAE3BrC,EAAO9O,KAAKmP,GACZ6B,EAAYK,IAAIF,EAAMrC,MAIxB,IAAMwC,EAASlS,MAAMmS,KAAKP,EAAY7R,WAAWqS,OAE3CC,EAAU,IAAIrS,MAGpB,GAFAqS,EAAQzR,KAAK,wBAAItB,IAAI,UAAR,wBAEYM,IAArB,EAAKhC,MAAM+R,MAAqB,CAClC,IAAMA,EAAQ,EAAK/R,MAAM+R,MACnB2C,EAAUxL,EAAW,IAAIsB,KAAKuH,EAAMpJ,OAE1C8L,EAAQzR,KACN,yBAAKvE,GAAG,yBAAyBiD,IAAI,gBACnC,0CAAgBgT,EAAhB,KAA2B3C,EAAMO,IAAM,cAAgB,IACtDP,EAAMO,KAAiC,IAA1B,EAAKtS,MAAMyG,WAAmB,KAC1C,yBAAKpF,MAAM,aAAa5C,GAAG,uBAAuBqC,QAAS,EAAK+S,aAC9D,kBAAC,IAAD,CAAiBrV,KAAMmW,SA6CjC,OAtCAL,EAAOJ,SAAQ,SAAClT,GACd,IAAMmT,EAAOnT,EAAM,GACb4T,EAAUhD,EAAS,IAAIpH,KAAK2J,GAAMU,aACpC/C,EAAS9Q,EAAM,GAGnB8Q,EAASA,EAAO0C,MAAK,SAAC3R,EAAGiS,GACvB,MAAsB,YAAlBjS,EAAEwQ,aAAmC,EACnB,YAAlByB,EAAEzB,YAAkC,EAEpCxQ,EAAEwQ,YAAcyB,EAAEzB,aAAqB,EACvCxQ,EAAEwQ,YAAcyB,EAAEzB,YAAoB,EACnC,KAGToB,EAAQzR,KACN,kBAAC,IAAD,CAAQtB,IAAKyS,GACX,yBAAKzV,UAAU,oBACb,sCAAQyV,EAAR,cAAkBS,IACjB9C,EAAOtO,KAAI,SAAC2O,GACX,IAAM3G,EAAQ,EAAKwG,OAAOG,EAAMuB,SAChC,OACE,yBACEhS,IAAKyQ,EAAM1T,GACX8M,MAAO,CACLE,gBAAiBD,EAAMuJ,WACvBvJ,MAAOA,EAAMwJ,aAJjB,UAOM7C,EAAMkB,YAPZ,aAO4BlB,EAAMsB,mBASvCgB,G,EAGTxU,WAAa,SAAC+F,GACZ,EAAK1G,SAAS0G,I,kEA7Md,IAAMiJ,EAActN,aAAaC,QAAQ,gBACrB,OAAhBqN,GACFjR,KAAKsB,SAASiD,KAAKoB,MAAMsL,IAE3BjR,KAAKiU,WAAW,IAAIzH,Q,+BA6MpB,OACE,yBAAK/L,GAAG,qBAAqBC,UAAU,iBACrC,yBAAKA,UAAU,wBACb,yCACA,yBACEyC,cAAY,UACZE,MAAM,wBACN3C,UAAU,iCAEV,yBACEA,UAAU,gCACVyC,cAAY,QACZI,cAAY,6BAEZ,kBAAC,IAAD,CACE/C,KAAMmQ,IACNjQ,UAAU,8BAKjBV,KAAKgC,MAAMiP,YAAc,kBAACiC,EAAD,MAAc,KACxC,kBAAC,EAAD,MACClT,KAAK2V,YACL3V,KAAK+V,aACN,kBAAC,EAAD,CACE9E,YAAajR,KAAKgC,MAAMiP,YACxB7O,OAAQpC,KAAKiC,WACb8P,oBAAqB/R,KAAK4V,+B,GAnPD1U,aC6IpB+V,G,kNAzJbjV,MAAQ,CAAE9B,WAAY,GAAII,UAAW,GAAI4W,UAAU,EAAMC,cAAc,EAAMC,YAAY,EAAMC,iBAAiB,G,EA0BhHC,WAAa,WACX3T,aAAaG,QAAQ,gBAAiBS,KAAKC,UAAU,EAAKxC,S,EAG5DuV,WAAa,WACX5T,aAAaG,QAAQ,SAAUS,KAAKC,UAClC,CAAC0S,SAAU,EAAKlV,MAAMkV,SAAUC,aAAc,EAAKnV,MAAMmV,aAAcC,WAAY,EAAKpV,MAAMoV,WAAYC,gBAAiB,EAAKrV,MAAMqV,oB,EAI1IG,aAAe,SAACnW,GACd,EAAKC,SAAS,CAAEpB,WAAamB,EAAEE,OAAeC,S,EAGhDiW,gBAAkB,SAACpW,GACjB,EAAKC,SAAS,CAAEhB,UAAYe,EAAEE,OAAeC,S,EAG/CkW,qBAAuB,SAACrW,EAA2BsW,GACjD,IAAMC,EAAW,GACjBA,EAASD,GAAWtW,EAAEE,OAAO2G,QAC7B,EAAK5G,SAASsW,I,EAGhB3V,W,sBAAa,sBAAA4C,EAAA,yDAER,EAAK7C,MAAM1B,UAAU6B,WAAW,aAChC,EAAKH,MAAM1B,UAAU6B,WAAW,WAHxB,gCAKH,EAAKb,UAAS,SAACoD,GAAD,MAAgB,CAClCpE,UAAU,WAAD,OAAaoE,EAAUpE,eANzB,OASX,EAAKgX,aACL,EAAKC,aACL,EAAKtX,MAAMmC,OAAO,EAAKJ,OAXZ,2C,uMA9CU,QADf6V,EAAelU,aAAaC,QAAQ,aACd,EACqCW,KAAKoB,MAAMkS,GAAlEX,EADiB,EACjBA,SAAUC,EADO,EACPA,aAAcC,EADP,EACOA,WAAYC,EADnB,EACmBA,gBAC5CrX,KAAKsB,SAAS,CAAC4V,WAAUC,eAAcC,aAAYC,qBAI1B,QADrBS,EAAqBnU,aAAaC,QAAQ,kBAE9C5D,KAAKsB,SAAS,CAAEpB,WAAY,eAAgB,WAC1C,EAAKoX,aACL,EAAKrX,MAAMmC,OAAO,EAAKJ,WAGnB8M,EAAOvK,KAAKoB,MAAMmS,GACxB9X,KAAKsB,SAAS,CACZpB,WAAY4O,EAAK5O,WACjBI,UAAWwO,EAAKxO,YACf,WACD,EAAKL,MAAMmC,OAAO,EAAKJ,W,qIA2CnB,IAAD,OACP,GAAqC,IAAjChC,KAAKgC,MAAM9B,WAAWC,OAAc,OAAO,KAE/C,IAAM4X,EAAa,CAAC/X,KAAKgC,MAAMkV,SAAUlX,KAAKgC,MAAMmV,aAAcnX,KAAKgC,MAAMoV,YAC1EtS,QAAO,SAAAgS,GAAC,OAAIA,KACZ3W,OAEH,OACE,yBACEO,UAAU,aACVD,GAAG,yBACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,+BAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,gCAA/B,oBAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,SAI7B,yBAAKjC,UAAU,cACb,6BACE,+CACA,4BACED,GAAG,gBACHmC,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM9B,YAEzB,4BAAQsB,MAAM,cAAd,cACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,WAEF,2BACEX,YAAY,kCACZgC,aAAc7C,KAAKgC,MAAM1B,UACzBsC,SAAU5C,KAAKyX,gBACf/W,UAAS,UACmB,WAA1BV,KAAKgC,MAAM9B,WAA0B,GAAK,aAIhD,6BACA,yBAAKQ,UAAU,kBACb,2BAAOkS,eAAgB5S,KAAKgC,MAAMkV,SAAUnW,KAAK,WAAW6B,SAAU,SAACvB,GAAD,OAAO,EAAKqW,qBAAqBrW,EAAG,eAC1G,kDAEF,yBAAKX,UAAU,kBACb,2BAAOkS,eAAgB5S,KAAKgC,MAAMoV,WAAYrW,KAAK,WAAW6B,SAAU,SAACvB,GAAD,OAAO,EAAKqW,qBAAqBrW,EAAG,iBAC5G,mDAEF,yBAAKX,UAAU,kBACb,2BAAOkS,eAAgB5S,KAAKgC,MAAMmV,aAAcpW,KAAK,WAAW6B,SAAU,SAACvB,GAAD,OAAO,EAAKqW,qBAAqBrW,EAAG,mBAC9G,qDAEF,yBAAKX,UAAU,kBACb,2BAAOkS,eAAgB5S,KAAKgC,MAAMqV,gBAAiBtW,KAAK,WAAW6B,SAAU,SAACvB,GAAD,OAAO,EAAKqW,qBAAqBrW,EAAG,oBAAoB2W,SAAyB,IAAfD,IAC/I,+EAGJ,yBAAKrX,UAAU,gBACb,4BACE+B,eAAa,QACb1B,KAAK,SACLL,UAAU,kBACVoC,QAAS9C,KAAKiC,YAJhB,gB,GA7IgBf,c,QCPxB+W,G,MAAS,CACb,CACE7X,KAAM,gBACN8X,OAAQ,UACRC,UAAW,8BACXC,OAAQ,kCACRC,SAAU,mCAEZ,CACEjY,KAAM,SACN8X,OAAQ,iBACRC,UAAW,iDACXC,OAAQ,kCACRC,SAAU,mCAEZ,CACEjY,KAAM,aACN8X,OAAQ,WACRC,UAAW,2CACXC,OAAQ,kCACRC,SAAU,qCAUd,SAASC,EAAYrY,GACnB,OACE,yBACES,UAAS,uBAAkBT,EAAMsY,WAAatY,EAAMQ,GAAK,wBAA0B,IACnFqC,QAAS,kBAAM7C,EAAMuY,MAAMvY,EAAMQ,MAEjC,yBAAKO,IAAKf,EAAMwY,MAAML,OAAQnX,IAAKhB,EAAMwY,MAAMrY,QAUtC,SAASsY,GAAczY,GAA4B,IAAD,EACrCkT,mBAASlT,EAAM0Y,eADsB,mBACxDF,EADwD,KACjDG,EADiD,KAGzDC,EAAoBC,uBAAY,SAACjJ,GACrC+I,EAAS/I,GACT,IAAMkJ,EAAId,EAAOpI,GACjBlM,aAAaG,QAAQ,cAAeS,KAAKC,UAAU,CACjDwU,cAAe,CACXtX,IAAKqX,EAAEX,OACPF,OAAQa,EAAEb,OACVC,UAAWY,EAAEZ,WAEfc,gBAAiB,CACfvX,IAAKqX,EAAEV,SACPH,OAAQa,EAAEb,OACVC,UAAWY,EAAEZ,cAGnBlY,EAAMiZ,sBACL,CAACN,EAAU3Y,IAEd,OACE,yBAAKQ,GAAG,kBACN,wEAGA,yBAAKA,GAAG,0BACN,kBAAC6X,EAAD,CACE7X,GAAI,EACJ8X,SAAUE,EACVD,MAAOK,EACPJ,MAAOR,EAAO,KAEhB,kBAACK,EAAD,CACE7X,GAAI,EACJ8X,SAAUE,EACVD,MAAOK,EACPJ,MAAOR,EAAO,KAEhB,kBAACK,EAAD,CACE7X,GAAI,EACJ8X,SAAUE,EACVD,MAAOK,EACPJ,MAAOR,EAAO,O,IC6ETkB,G,4MApKbnX,MAAQ,CACN,UAAW,GACX,aAAc,GACd,gBAAiB,GACjB,YAAa,GACb,eAAgB,GAChB,kBAAmB,I,EAcrBwV,aAAe,SAACnW,GAAuC,IAC7CjB,EAASiB,EAAEE,OAAXnB,KACAoB,EAAUH,EAAEE,OAAZC,MAER,EAAKF,SAAL,eAAiBlB,EAAOoB,K,EAG1BS,WAAa,WACX,EAAKhC,MAAMmC,OACT,CACEV,IAAK,EAAKM,MAAM,WAChBkW,OAAQ,EAAKlW,MAAM,cACnBmW,UAAW,EAAKnW,MAAM,kBAExB,CACEN,IAAK,EAAKM,MAAM,aAChBkW,OAAQ,EAAKlW,MAAM,gBACnBmW,UAAW,EAAKnW,MAAM,sB,kEA3B1BhC,KAAKsB,SAAS,CACZ,UAAWtB,KAAKC,MAAM+K,IAAItJ,IAC1B,aAAc1B,KAAKC,MAAM+K,IAAIkN,OAC7B,gBAAiBlY,KAAKC,MAAM+K,IAAImN,UAChC,YAAanY,KAAKC,MAAMmZ,MAAM1X,IAC9B,eAAgB1B,KAAKC,MAAMmZ,MAAMlB,OACjC,kBAAmBlY,KAAKC,MAAMmZ,MAAMjB,c,+BA2BtC,OACE,yBACEzX,UAAU,aACVD,GAAG,4BACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,kCAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,mCAA/B,uBAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,SAI7B,yBAAKjC,UAAU,cACb,yBAAKD,GAAG,kBAAkBC,UAAU,aAClC,4BACEK,KAAK,SACLN,GAAG,uBACHC,UAAU,mBACVyC,cAAY,WACZI,cAAY,gBACZ8M,gBAAc,OACdgJ,gBAAc,gBAPhB,qBAWA,yBACE5Y,GAAG,eACHC,UAAU,gBACV6B,kBAAgB,uBAChB+W,cAAY,oBAEZ,kBAAC,GAAD,CAAeX,eAAgB,EAAGO,kBAAmBlZ,KAAKC,MAAMiZ,qBAElE,6BACA,4BACEnY,KAAK,SACLN,GAAG,uBACHC,UAAU,mBACVyC,cAAY,WACZI,cAAY,gBACZ8M,gBAAc,QACdgJ,gBAAc,gBAPhB,qBAWA,yBACE5Y,GAAG,eACHC,UAAU,WACV6B,kBAAgB,uBAChB+W,cAAY,oBAEZ,6CACA,2BACE7Y,GAAG,UACHL,KAAK,UACLS,YAAY,YACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,aAE3B,2BACE5B,KAAK,aACLS,YAAY,cACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,gBAE3B,2BACE5B,KAAK,gBACLS,YAAY,kBACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,mBAE3B,+CACA,2BACE5B,KAAK,YACLS,YAAY,YACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,eAE3B,2BACE5B,KAAK,eACLS,YAAY,cACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,kBAE3B,2BACE5B,KAAK,kBACLS,YAAY,kBACZ+B,SAAU5C,KAAKwX,aACf3U,aAAc7C,KAAKgC,MAAM,qBAE3B,4BACEjB,KAAK,SACLL,UAAU,kBACVoC,QAAS9C,KAAKiC,YAHhB,0B,GApJef,aC6BlBqY,G,uKA/BX,OACE,yBAAK7Y,UAAU,eACb,yBAAKyC,cAAY,UAAUE,MAAM,yBAC/B,yBACE3C,UAAU,gCACVyC,cAAY,QACZI,cAAY,2BAEZ,kBAAC,IAAD,CAAiB/C,KAAMmQ,IAAOjQ,UAAU,6BAG5C,uBACE4C,KAAK,uCACL/B,OAAO,SACP8I,IAAI,uBAHN,aAKarK,KAAKC,MAAMuZ,SACnB,IAhBP,QAkBE,uBACElW,KAAK,2DACL/B,OAAO,SACP8I,IAAI,uBAHN,sB,GArBkBnJ,aCsCXuY,G,uKAnCH,IAAD,OACP,OACE,yBAAKhZ,GAAG,kBAAkBC,UAAU,eAClC,yBACEyC,cAAY,UACZE,MAAM,oBACNP,QAAS,kBAAM,EAAK7C,MAAMyZ,oBAC1BhZ,UAAU,8BAEV,6BACE,kBAAC,IAAD,CAAiBF,KAAMmZ,QAR7B,WAWW,IACT,uBACErW,KAAMtD,KAAKC,MAAM2Z,oBACjBrY,OAAO,SACP8I,IAAI,uBAEHrK,KAAKC,MAAM4Z,kBAEd,yBAAK1W,cAAY,UAAUE,MAAM,4BAC/B,yBACE3C,UAAU,gCACVyC,cAAY,QACZI,cAAY,8BAEZ,kBAAC,IAAD,CAAiB/C,KAAMmQ,IAAOjQ,UAAU,kC,GA5BvBQ,aCAd,SAAS4Y,GAAa7Z,GACnC,IAAMgC,EAAa6W,uBAAY,WAC5BjX,IAAE,kBAA0BkY,MAAM,QAClClY,IAAE,2BAAmCkY,MAAM,UAC3C,IAMH,OAJAzG,qBAAU,WACPzR,IAAE,kBAA0BkY,MAAM,UAClC,IAGD,yBACErZ,UAAU,aACVD,GAAG,gBACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,sBAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,uBAA/B,WAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,OACjB,MAGZ,yBAAKjC,UAAU,cACb,sCACA,4KAIA,6BACA,kBAAC,GAAD,CAAeiY,cAAe,EAAGO,kBAAmBjZ,EAAMiZ,oBAC1D,6BACA,yBAAKzY,GAAG,iBACN,yJAIA,kNAKA,uBAAGc,OAAO,SAAS8I,IAAI,sBAAsB/G,KAAK,4DAAlD,sCAGJ,yBAAK5C,UAAU,gBACb,4BACEK,KAAK,SACLL,UAAU,kBACVoC,QAASb,GAHX,Y,MC1DG,SAAS+X,GAAY/Z,GAA0B,IAAD,EACzBkT,mBAAS,wBADgB,mBACpD8G,EADoD,KACzCC,EADyC,KAmB3D,OAhBA5G,qBAAU,WACPzR,IAAE,iBAAyBkY,MAAM,QAElC,IAAMI,EAAS,wEAAoEla,EAAMma,gBAEzFzG,MAAM,sCAAD,OAAuC0G,mBAAmBF,KAE5DtI,MAAK,SAAAyI,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASxL,OACjCoL,EAAa,6BAEdrI,MAAK,SAAA6B,GACJwG,EAAa3V,KAAKoB,MAAM+N,EAAK8G,UAAU9H,WAE1C,CAACwH,EAAcja,EAAMma,iBAGtB,yBACE1Z,UAAU,aACVD,GAAG,eACH4B,UAAW,EACXC,KAAK,SACLC,kBAAgB,qBAChBC,cAAY,QAEZ,yBAAK9B,UAAU,eAAe4B,KAAK,YACjC,yBAAK5B,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcD,GAAG,sBAA/B,WAGA,4BACEM,KAAK,SACLL,UAAU,QACV+B,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAChB,kBAAC,IAAD,CAAiBhC,KAAMmC,OACjB,MAGZ,yBAAKjC,UAAU,cACb,8CAAgBT,EAAMma,eAAtB,gBACA,mEACoCna,EAAMwa,YAD1C,eAC4Dxa,EAAMma,eADlE,MAGA,yBAAK3Z,GAAG,uBACN,yBAAKA,GAAG,aACLwZ,Q,UCyNFS,G,4MAhPb1Y,MAAQ,CACNgX,cAAe,CAAEtX,IAAK,GAAIwW,OAAQ,GAAIC,UAAW,IACjDc,gBAAiB,CAAEvX,IAAK,GAAIwW,OAAQ,GAAIC,UAAW,IACnDwC,kBAAmB,CAAEjZ,IAAK,GAAIwW,OAAQ,GAAIC,UAAW,IACrDyC,mBAAmB,EACnB1a,WAAY,GACZI,eAAW0D,EACXkT,UAAU,EACVE,YAAY,EACZD,cAAc,EACdE,iBAAiB,EACjBwD,cAAc,EACdT,eAAgB,GAChBK,YAAa,I,EAGf3H,a,IAgBAgI,gB,sBAAkB,4BAAAjW,EAAA,sDAEI,QADdkW,EAAcpX,aAAaC,QAAQ,gBAEvC,EAAKtC,SAAS,CACZ0X,cAAe,CACbtX,IAAK,kCACLwW,OAAQ,iBACRC,UAAW,uDAEbc,gBAAiB,CACfvX,IAAK,kCACLwW,OAAQ,iBACRC,UAAW,yDAEZ,kBAAM,EAAK6C,qBAEd,EAAK1Z,SAASiD,KAAKoB,MAAMoV,IAhBX,2C,EAoBlBE,aAAe,WAEb,IAAMC,EAAc9I,EAAQ,IACxBoH,EAAU7V,aAAaC,QAAQ,WAEnB,OAAZ4V,GAAkB,EAAKlY,SAAS,CAACuZ,cAAc,IAEnDlX,aAAaG,QAAQ,UAAWoX,EAAY1B,SAC5B,OAAZA,IAAkBA,EAAU0B,EAAY1B,SAC5C,EAAKlY,SAAS,CAAC8Y,eAAgBc,EAAY1B,QAASiB,YAAajB,K,EAGnE2B,cAAgB,SAACpE,GACX,EAAK/U,MAAM2Y,oBAAsB5D,IAErC,EAAKzV,SAAS,CAAEqZ,kBAAmB5D,IACnCzE,SAAS8I,qBAAqB,QAAQ,GAAGrE,WAAaA,EAAWrV,M,EAGnEgY,iBAAmB,WACjB,IAAI2B,EAGFA,EADE,EAAKrZ,MAAM2Y,oBAAsB,EAAK3Y,MAAMgX,cAC9B,EAAKhX,MAAMiX,gBAEX,EAAKjX,MAAMgX,cAG7B,EAAK1X,SAAS,CAAEsZ,mBAAmB,IACnC,EAAKO,cAAcE,I,EAIrBC,iBAAmB,WACjB,IACID,EADE7H,EAAM,IAAIhH,KAId6O,EADE7H,EAAInI,YAAc,GAAKmI,EAAInI,WAAa,GAC1B,EAAKrJ,MAAMgX,cAEX,EAAKhX,MAAMiX,gBAE7B,EAAKkC,cAAcE,I,EAIrBE,gBAAkB,WACZ,EAAKvZ,MAAM4Y,mBAEf,EAAKU,oB,EAGPN,gBAAkB,WAChBrX,aAAaG,QACX,cACAS,KAAKC,UAAU,CACbwU,cAAe,EAAKhX,MAAMgX,cAC1BC,gBAAiB,EAAKjX,MAAMiX,oB,EAKlC3T,aAAe,WACZzD,IAAE,2BAAmCC,W,EAGxC0Z,kBAAoB,WAClB,EAAKlW,gB,EAGPmW,kBAAoB,SAACzT,GACnB,EAAK1G,SAAS0G,I,EAGhB0T,qB,uCAAuB,WACrB1C,EACAC,GAFqB,SAAApU,EAAA,sDAIrB,EAAKvD,SAAS,CAAE0X,gBAAeC,kBAAiB2B,mBAAmB,IAAS,WAC1E,EAAKI,kBACL,EAAKO,qBANc,2C,0DAUvBI,sBAAwB,WACtB,IAAMC,EAAgBjY,aAAaC,QAAQ,iBAC3C,GAAsB,OAAlBgY,EACF,OAAO,kBAAC,EAAD,CAAmBrT,OAAO,GAAGM,QAAS,EAAK2S,oBAEpD,IAAMxT,EAASzD,KAAKoB,MAAMiW,GAC1B,OACE,kBAAC,EAAD,CACErT,OAAQP,EAAOO,OACfM,QAAS,EAAK2S,qB,EAKpBK,uBAAyB,WACvB,EAAKf,kBAAkBjJ,KAAK,EAAKyJ,mB,uMApI3Btb,KAAK8a,kB,OAEX9a,KAAKub,kBAELvb,KAAKib,eAELjb,KAAK8S,QAAUC,aAAY,kBAAM,EAAKwI,oBAAmB,K,mJAIzDvI,cAAchT,KAAK8S,W,+BA8HnB,GAAyC,KAArC9S,KAAKgC,MAAM2Y,kBAAkBjZ,IAAY,OAAO,KAEpD,IAAIqW,EAAa,CAAC/X,KAAKgC,MAAMkV,SAAUlX,KAAKgC,MAAMmV,aAAcnX,KAAKgC,MAAMoV,YACxEtS,QAAO,SAAAgS,GAAC,OAAIA,KAAG3W,OAEZ2b,EAAmC,IAAf/D,GAAoB/X,KAAKgC,MAAMqV,gBAQzD,OANIyE,IACF/D,GAAY,GAGd/X,KAAKsF,eAGH,oCACE,0BAAM+E,IAAI,UAAU/G,KAAMtD,KAAKgC,MAAMgX,cAActX,IAAKqa,GAAG,UAC3D,0BAAM1R,IAAI,UAAU/G,KAAMtD,KAAKgC,MAAMiX,gBAAgBvX,IAAKqa,GAAG,UAC5D/b,KAAKgC,MAAM6Y,aAAe,kBAACf,GAAD,CAAcZ,kBAAmBlZ,KAAK6b,yBAA6B,KAC7F7b,KAAKgC,MAAMoY,iBAAmBpa,KAAKgC,MAAMyY,YACxC,kBAAC,GAAD,CAAaL,eAAgBpa,KAAKgC,MAAMoY,eAAgBK,YAAaza,KAAKgC,MAAMyY,cAChF,KACF,yBAAKha,GAAG,oBACN,kBAAC,EAAD,CACEP,WAAYF,KAAKgC,MAAM9B,WACvBI,UAAWN,KAAKgC,MAAM1B,UACtBK,OAAQmb,IAETA,EAAoB,KAAO,kBAAC,EAAD,CAAaxW,aAActF,KAAKsF,aAAc3E,QAAQ,KAEpF,yBAAKF,GAAG,mBAAmBC,UAAS,qBAAgBqX,IACjD/X,KAAKgC,MAAMkV,SAAW,kBAAC,EAAD,CAAS5R,aAActF,KAAKsF,eAAmB,KACrEtF,KAAKgC,MAAMmV,aAAe,kBAAC,EAAD,MAA2B,KACrDnX,KAAKgC,MAAMoV,WAAapX,KAAK2b,wBAA0B,KACvDG,EAAoB,kBAAC,EAAD,CAAaxW,aAActF,KAAKsF,aAAc3E,QAAM,IAAM,MAEjF,yBAAKF,GAAG,oBACN,kBAAC,GAAD,CAAa+Y,QAASxZ,KAAKgC,MAAMoY,iBACjC,kBAAC,GAAD,CACEV,iBAAkB1Z,KAAK0Z,iBACvBG,iBAAkB7Z,KAAKgC,MAAM2Y,kBAAkBzC,OAC/C0B,oBAAqB5Z,KAAKgC,MAAM2Y,kBAAkBxC,aAGtD,yBAAK1X,GAAG,mBACN,yBAAKC,UAAU,YACb,4BACEA,UAAU,yBACVK,KAAK,SACLN,GAAG,qBACH0C,cAAY,WACZiN,gBAAc,OACdC,gBAAc,SAEd,kBAAC,IAAD,CAAiB7P,KAAMwb,OAEzB,yBACEtb,UAAU,oCACV6B,kBAAgB,sBAEhB,yBAAK7B,UAAU,sCACb,kBAAC,GAAD,CAAa8Y,QAASxZ,KAAKgC,MAAMoY,kBAEnC,yBAAK1Z,UAAU,sCACb,kBAAC,GAAD,CACEgZ,iBAAkB1Z,KAAK0Z,iBACvBG,iBAAkB7Z,KAAKgC,MAAM2Y,kBAAkBzC,OAC/C0B,oBAAqB5Z,KAAKgC,MAAM2Y,kBAAkBxC,YAEnD,QAKT,kBAAC,EAAD,CAAiB/V,OAAQpC,KAAKyb,oBAC9B,kBAAC,GAAD,CACEvC,kBAAmBlZ,KAAK6b,uBACxB7Q,IAAKhL,KAAKgC,MAAMgX,cAChBI,MAAOpZ,KAAKgC,MAAMiX,gBAClB7W,OAAQpC,KAAK0b,4B,GA1OLxa,aCzBZ+a,GAAcC,QACW,cAA7B9K,OAAO+K,SAASC,UAEe,UAA7BhL,OAAO+K,SAASC,UAEhBhL,OAAO+K,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOvU,GAC9BwU,UAAUC,cACPC,SAASH,GACT1K,MAAK,SAAC8K,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7a,QACfwa,UAAUC,cAAcO,YAI1BlT,QAAQC,IACN,iHAKE/B,GAAUA,EAAO/E,UACnB+E,EAAO/E,SAAS0Z,KAMlB7S,QAAQC,IAAI,sCAGR/B,GAAUA,EAAOiV,WACnBjV,EAAOiV,UAAUN,WAO5BlL,OAAM,SAACyL,GACNpT,QAAQoT,MAAM,4CAA6CA,MCzFjEC,IAASC,OAAO,kBAAC,GAAD,MAAS9K,SAAS+K,eAAe,SDe1C,SAAkBrV,GACvB,GAA6C,kBAAmBwU,UAAW,CAGzE,GADkB,IAAIc,IAAIC,YAAwBnM,OAAO+K,SAAS7Y,MACpDka,SAAWpM,OAAO+K,SAASqB,OAIvC,OAGFpM,OAAOqM,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMgB,YAAN,sBAEPtB,KAgEV,SAAiCM,EAAOvU,GAEtC2L,MAAM4I,EAAO,CACXmB,QAAS,CAAE,iBAAkB,YAE5B7L,MAAK,SAACyI,GAEL,IAAMqD,EAAcrD,EAASoD,QAAQlP,IAAI,gBAEnB,MAApB8L,EAAStM,QACO,MAAf2P,IAA8D,IAAvCA,EAAY7N,QAAQ,cAG5C0M,UAAUC,cAAcmB,MAAM/L,MAAK,SAAC8K,GAClCA,EAAakB,aAAahM,MAAK,WAC7BT,OAAO+K,SAAS2B,eAKpBxB,GAAgBC,EAAOvU,MAG1ByJ,OAAM,WACL3H,QAAQC,IACN,oEAvFAgU,CAAwBxB,EAAOvU,GAI/BwU,UAAUC,cAAcmB,MAAM/L,MAAK,WACjC/H,QAAQC,IACN,iHAMJuS,GAAgBC,EAAOvU,OCtC/ByU,K","file":"static/js/main.5e177d07.chunk.js","sourcesContent":["import LocalStorageProvider from \"../provider/LocalStorageProvider\";\nimport AbstractProvider from \"../provider/AbstractProvider\";\n\nconst defaultProvider = new LocalStorageProvider();\nlet currentProvider: AbstractProvider;\n\nexport function setProvider(provider: AbstractProvider) {\n  currentProvider = provider;\n}\n\nexport function getProvider(): AbstractProvider {\n  if (currentProvider === undefined) setProvider(defaultProvider);\n  return currentProvider;\n}\n","import React, { Component } from \"react\";\nimport \"../styles/SearchBar.scss\";\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n  expand: boolean;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = \"\";\n    let action = \"\";\n\n    if (this.props.engineType === \"duckduckgo\") {\n      name = \"DuckDuckGO\";\n      action = \"https://duckduckgo.com\";\n    }\n\n    if (this.props.engineType === \"google\") {\n      name = \"Google\";\n      action = \"https://google.com/search\";\n    }\n\n    if (this.props.engineType === \"custom\") {\n      [name] = this.props.engineUrl!.split(\"//\")[1].split(\"/\");\n      action = this.props.engineUrl!;\n    }\n\n    const icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split(\"://\")[1].split(\"/\")[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className={`homepage-card ${this.props.expand ? \"expanded\" : \"\"}`}>\n        <input\n          // eslint-disable-next-line\n          autoFocus\n          className=\"text-input\"\n          name=\"q\"\n          placeholder={`Search at ${name}`}\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon,\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    ($('[data-toggle=\"tooltip\"]') as any).tooltip(\"dispose\");\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0 ||\n      this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let { url } = this.state;\n    if (!url.startsWith(\"http\")) {\n      url = `https://${url}`;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              {this.props.url === \"\" ? null : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={this.handleDelete}\n                >\n                  Delete\n                </button>\n            )}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n                data-dismiss=\"modal\"\n              >\n                {this.props.url === \"\" ? \"Create\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    // eslint-disable-next-line\n    let { icon, name } = this.props;\n\n    if (icon === \"\") {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split(\"://\")[1].split(\"/\")[0]\n      }.ico`;\n    }\n\n    return (\n      <div\n        className=\"bookmark-entry\"\n        data-toggle=\"tooltip\"\n        data-boundary=\"window\"\n        title={name}\n      >\n        <a href={this.props.url}>\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import AbstractProvider from \"./AbstractProvider\";\n\nexport default class LocalStorageProvider extends AbstractProvider {\n  hasValue(key: string): boolean {\n    return localStorage.getItem(key) !== null;\n  }\n\n  unsetValue(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getValue(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setValue(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/BookmarkBar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEntry from \"./BookmarkEntry\";\nimport BookmarkEditor from \"./BookmarkEditor\";\nimport { getProvider } from \"../utils/ProviderManager\";\n\ninterface BookmarkBarProps {\n  expand: boolean;\n  setupTooltip: Function;\n}\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<BookmarkBarProps, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  componentDidMount() {\n    const bookmarks = getProvider().getValue(\"bookmarks\");\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  saveBookmarks = () => {\n    getProvider().setValue(\"bookmarks\", JSON.stringify(this.state.entries));\n  };\n\n  handleEditToggle = () => {\n    this.setState(prevState => ({ editable: !prevState.editable }));\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    this.setState({ entries }, this.saveBookmarks);\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    this.setState({ entries }, this.saveBookmarks);\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = \"\";\n    do {\n      id =\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter((entry) => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const { entries } = this.state;\n    entries.push(entry);\n    this.setState({ entries }, () => {\n      this.saveBookmarks();\n      this.props.setupTooltip();\n    });\n  };\n\n  getEntries = () => {\n    const { entries } = this.state;\n\n    return entries.map((bookmark) => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className={`homepage-card ${this.props.expand ? \"expand\" : \"\"}`}>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n            data-toggle=\"tooltip\"\n            title=\"Toggle bookmark edit mode\"\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          {this.props.expand ? <h4>Bookmarks:</h4> : null}\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Add new bookmark\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#bookmark-add-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          className={`bookmark-list ${this.state.editable ? \"editable\" : \"\"}`}\n        >\n          {this.getEntries()}\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          onSave={this.handleNewBookmark}\n          // eslint-disable-next-line\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faCircle,\n  faSave,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ToDoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n  onEdit: Function;\n}\n\ninterface ToDoEntryState {\n  done: boolean;\n  edit: boolean;\n  newText: string;\n}\n\nclass ToDoEntry extends Component<ToDoEntryProps, ToDoEntryState> {\n  state = { done: false, edit: false, newText: \"\" };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    if (this.state.edit) {\n      this.finishEdit();\n      return;\n    }\n    this.setState(\n      (prevState) => ({ done: !prevState.done }),\n      () => this.props.onDoneToggle(this.props.id, this.state.done)\n    );\n\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  toggleEditMode = () => {\n    this.setState(prevState => ({ edit: !prevState.edit }));\n  };\n\n  handleEditSave = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.finishEdit();\n  };\n\n  handleFormEscape = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 27) this.toggleEditMode();\n  };\n\n  finishEdit = () => {\n    this.toggleEditMode();\n    let text = this.state.newText;\n    if (text.trim() === \"\") text = this.props.text;\n    this.props.onEdit(this.props.id, text);\n  };\n\n  getTextComponent = () => {\n    if (this.state.edit) {\n      return (\n        <div\n          className={\n            this.state.edit ? \"todo-entry-text edit\" : \"todo-entry-text\"\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          <form onSubmit={this.handleEditSave} onKeyUp={this.handleFormEscape}>\n            <input\n              // eslint-disable-next-line\n              autoFocus\n              onChange={(e) => this.setState({ newText: e.target.value })}\n              onFocus={(e) => e.target.select()}\n              defaultValue={this.props.text}\n            />\n          </form>\n        </div>\n      );\n    }\n    return (\n      <div\n        className={\n          this.state.done ? \"todo-entry-text checked\" : \"todo-entry-text\"\n        }\n        onDoubleClick={this.toggleEditMode}\n      >\n        {this.props.text}\n      </div>\n    );\n  };\n\n  getIcon = () => {\n    if (this.state.edit) return faSave;\n    return this.state.done ? faCheckCircle : faCircle;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div\n            className=\"todo-checkbox\"\n            data-toggle=\"tooltip\"\n            title=\"Toggle done state\"\n            onClick={this.handleDone}\n          >\n            <FontAwesomeIcon\n              className={\n                this.state.done && !this.state.edit ? \"icon-checked\" : \"\"\n              }\n              icon={this.getIcon()}\n            />\n          </div>\n          {this.getTextComponent()}\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div\n            className=\"todo-entry-action\"\n            data-toggle=\"tooltip\"\n            title=\"Delete entry\"\n            onClick={this.handleDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoEntry;\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport { getProvider } from \"../utils/ProviderManager\";\nimport checked from \"../assets/checked.json\";\nimport ToDoEntry from \"./ToDoEntry\";\nimport \"../styles/ToDoBox.scss\";\n\ninterface ToDoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface ToDoBoxProps {\n  setupTooltip: Function;\n}\n\ninterface ToDoBoxState {\n  entries: Array<ToDoEntryState>;\n  loaded: boolean;\n}\n\nclass ToDoBox extends Component<ToDoBoxProps, ToDoBoxState> {\n  state = { entries: new Array<ToDoEntryState>(), loaded: false };\n\n  componentDidMount() {\n    const todo = getProvider().getValue(\"todo-list\");\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries, loaded: true });\n    } else {\n      this.setState({ loaded: true }, this.saveToDoList);\n    }\n  }\n\n  saveToDoList = () => {\n    getProvider().setValue(\"todo-list\", JSON.stringify(this.state.entries));\n    this.props.setupTooltip();\n  };\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = \"\";\n\n      do {\n        id =\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter((entry) => entry.id === id).length !== 0\n      );\n\n      const { entries } = this.state;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries }, this.saveToDoList);\n      (e.target as any).value = \"\";\n    }\n  };\n\n  handleDelete = (id: string) => {\n    ($('[data-toggle=\"tooltip\"]') as any).tooltip(\"dispose\");\n    let { entries } = this.state;\n    entries = entries.filter((value) => value.id !== id);\n    this.setState({ entries }, this.saveToDoList);\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.done = done;\n\n      return newValue;\n    });\n    this.setState({ entries }, this.saveToDoList);\n  };\n\n  handleEdit = async (id: string, newText: string) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.text = newText;\n\n      return newValue;\n    });\n    this.setState({ entries }, this.saveToDoList);\n  };\n\n  getEntries = () => {\n    if (!this.state.loaded) return null;\n    if (this.state.entries.length === 0) {\n      return (\n        <div className=\"d-flex flex-column  align-items-center\">\n          <FadeIn className=\"trello-status-container\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{\n                animationData: checked,\n                loop: false,\n                autoplay: true,\n              }}\n            />\n            <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n          </FadeIn>\n        </div>\n      );\n    }\n\n    return this.state.entries.map((entry) => (\n      <ToDoEntry\n        onDelete={this.handleDelete}\n        onDoneToggle={this.handleDoneToggle}\n        onEdit={this.handleEdit}\n        text={entry.text}\n        done={entry.done}\n        id={entry.id}\n        key={entry.id}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>To Do:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"text-input\"\n          type=\"text\"\n          placeholder=\"Add new things to your To Do\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>{this.getEntries()}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoBox;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloSettings.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TrelloClient, { Trello } from \"react-trello-client\";\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  loadedApiKey: string;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: \"\",\n    loadedApiKey: \"\",\n    loginState: 0,\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    this.setState((prevState) => ({\n      loadedApiKey: prevState.apiKey,\n      loginState,\n    }));\n    this.props.onSave(this.state.apiKey);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      loadedApiKey: this.props.apiKey,\n    });\n  };\n\n  handleLogin = () => {\n    this.props.onReady(Trello);\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0)\n      return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist\n        authorizeInteractive\n        authorizeScopeRead // boolean: {true} | {false}\n        authorizeScopeWrite // boolean: {true} | {false}\n        authorizeScopeAccount // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log(\"Login error!\")} // function: {() => console.log('Login error!')}\n        autoAuthorize // boolean: {true} | {false}\n        authorizeButton // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>\n                Login into your Trello Account and get an API key in{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n                . Then add the homepage URL to the Allowed Origins.\n              </p>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? \"hidden\" : \"\"}\n              >\n                {this.getTrelloClient()}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                data-dismiss=\"modal\"\n                className=\"btn btn-primary\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n  while (str.length < size) str = `0${str}`;\n  return str;\n}\n\nexport function formatDate(date: Date): string {\n  const year = date.getFullYear();\n  const month = withLeadingZeroes(date.getMonth() + 1, 2);\n  const day = withLeadingZeroes(date.getDate(), 2);\n  return `${year}-${month}-${day}`;\n}\n\nexport function formatTime(date: Date, showSeconds = false): string {\n  const hours = withLeadingZeroes(date.getHours(), 2);\n  const minutes = withLeadingZeroes(date.getMinutes(), 2);\n  if (showSeconds) {\n    const seconds = withLeadingZeroes(date.getSeconds(), 2);\n    return `${hours}:${minutes}:${seconds}`;\n  } \n    return `${hours}:${minutes}`;\n  \n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShareSquare,\n  faCheckSquare,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { formatDate } from \"../utils/Formater\";\n\nconst TrelloLabelColors = {\n  green: \"#59C059\",\n  yellow: \"#C0C059\",\n  orange: \"#C08C59\",\n  red: \"#C05959\",\n  purple: \"#8C59C0\",\n  blue: \"#597BC0\",\n  sky: \"#59C0C0\",\n  lime: \"#8CC059\",\n  pink: \"#C0598C\",\n  black: \"#344563\",\n};\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return formatDate(date);\n  };\n\n  getDueDate = (card: any) => {\n    if (card.due === null) return null;\n\n    return <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>;\n  };\n\n  getChecklists = (card: any) => {\n    if (card.checklists === undefined) return null;\n\n    return (\n      <div className=\"trello-card-checklists\">\n        {card.checklists.map((list: any) => {\n          const items = list.checkItems;\n          const completedItems = items.filter(\n            (item: any) => item.state === \"complete\"\n          );\n          return (\n            <div\n              key={list.id}\n              className={`trello-card-checklist ${\n                items.length === completedItems.length ? \"completed\" : \"\"\n              }`}\n            >\n              <FontAwesomeIcon className=\"icon\" icon={faCheckSquare} />\n              {`${completedItems.length}/${items.length}`}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  getLabels = (card: any) => {\n    const labels = card.labels as Array<any>;\n    if (labels.length === 0) return null;\n\n    return (\n      <div className=\"trello-card-labels\">\n        {labels.map((label) => (\n          <div\n            key={label.id}\n            className=\"trello-card-label\"\n            style={{\n              color: \"white\",\n              backgroundColor: (TrelloLabelColors as any)[label.color],\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        {this.getLabels(card)}\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={card.shortUrl}\n              className=\"trello-card-action-anchor\"\n              data-toggle=\"tooltip\"\n              data-placement=\"left\"\n              title=\"Open card on Trello\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {this.getDueDate(card)}\n        {this.getChecklists(card)}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from \"react\";\nimport {\n  faCog,\n  faTimes,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport TrelloSettings from \"./TrelloSettings\";\nimport TrelloCard from \"./TrelloCard\";\nimport loader from \"../assets/loader.json\";\nimport checked from \"../assets/checked.json\";\nimport \"../styles/TrelloIntegration.scss\";\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  onReady: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  trello: any;\n  cards?: Array<any>;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedList: any;\n  selectedBoard: any;\n  /*\n  -1 = refreshing\n  0 = loading\n  1 = done\n  */\n  status: number;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = {\n    logged: false,\n    trello: {} as any,\n    status: 0,\n    selectedList: {} as any,\n    selectedBoard: {} as any,\n    cards: new Array<any>(),\n    boards: new Array<any>(),\n    lists: new Array<any>(),\n  };\n\n  saveHistory = () => {\n    localStorage.setItem(\n      \"trello-history\",\n      JSON.stringify({\n        selectedList: this.state.selectedList.id,\n        selectedBoard: this.state.selectedBoard.id,\n      })\n    );\n  };\n\n  loadBoards = async (trello: any) => {\n    trello.get(\n      \"members/me/boards\",\n      async (res: any) => {\n        console.log(\"get boards\");\n        await this.setState({ boards: res });\n        this.loadLists(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadLists = (trello: any) => {\n    let boardId = this.state.selectedBoard.id;\n    if (boardId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedBoard === undefined) {\n          boardId = this.state.boards[0].id;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards[0],\n          }));\n        } else {\n          boardId = json.selectedBoard;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards.find(\n              (board) => board.id === json.selectedBoard\n            ),\n          }));\n        }\n      } else {\n        boardId = this.state.boards[0].id;\n        this.setState((prevState) => ({ selectedBoard: prevState.boards[0] }));\n      }\n    }\n    trello.get(\n      `boards/${boardId}/lists`,\n      async (res: any) => {\n        console.log(\"get lists\");\n        await this.setState({ lists: res });\n        this.loadCards(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadCards = (trello: any) => {\n    let listId = this.state.selectedList.id;\n    if (listId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedList === undefined) {\n          listId = this.state.lists[0].id;\n          this.setState((prevState) => ({ selectedList: prevState.lists[0] }));\n        } else {\n          listId = json.selectedList;\n          this.setState((prevState) => ({\n            selectedList: prevState.lists.find(\n              (list) => list.id === json.selectedList\n            ),\n          }));\n        }\n      } else {\n        listId = this.state.lists[0].id;\n        this.setState(prevState => ({ selectedList: prevState.lists[0] }));\n      }\n    }\n    trello.get(\n      `lists/${listId}/cards`,\n      async (res: any) => {\n        console.log(\"get cards\");\n        const cardsPromise = res.map(async (card: any) => {\n          if (card.idChecklists.length === 0) return card;\n\n          console.log(\"get checklists\");\n          const checklistPromise = card.idChecklists.map(\n            async (checklist: any) =>\n              new Promise((resolve) => {\n                trello.get(\n                  `checklists/${checklist}`,\n                  (checklistRes: any) => resolve(checklistRes),\n                  () => {\n                    resolve(undefined);\n                  }\n                );\n              })\n          );\n\n          const checklists = await Promise.all(checklistPromise);\n          card.checklists = checklists;\n          return card;\n        });\n        const cards = await Promise.all(cardsPromise);\n        this.setState({ cards, status: 1 });\n        this.props.onReady();\n      },\n      (err: any) => {\n        console.log(\"ERROR:\", err);\n        this.setState({ cards: undefined, status: 1 });\n        this.props.onReady();\n      }\n    );\n  };\n\n  handleListChange = async (changeBy: number) => {\n    const index = this.state.lists.indexOf(this.state.selectedList);\n    const maxIndex = this.state.lists.length - 1;\n    let newIndex = index + changeBy;\n    if (newIndex <= -1) newIndex = maxIndex;\n    if (newIndex > maxIndex) newIndex = 0;\n\n    await this.setState(prevState => ({\n      selectedList: prevState.lists[newIndex],\n      status: 0,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleListSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedList: prevState.lists.find((list) => list.id === id),\n      status: -1,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleBoardSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedBoard: prevState.boards.find((board) => board.id === id),\n      selectedList: {} as any,\n      status: -1,\n    }));\n    this.loadBoards(this.state.trello);\n    this.saveHistory();\n  };\n\n  getNavigator = () => (\n    <>\n      <div className=\"trello-board-navigator trello-navigator\">\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-boards-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h6 className=\"text-center\">{this.state.selectedBoard.name}</h6>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-boards-dropdown\"\n          >\n            {this.state.boards.map((board) => (\n              <div\n                onClick={() => this.handleBoardSelect(board.id)}\n                key={board.id}\n                className=\"dropdown-item\"\n              >\n                {board.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"trello-list-navigator trello-navigator\">\n        <div onClick={() => this.handleListChange(-1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </div>\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-lists-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h3 className=\"text-center\">{this.state.selectedList.name}</h3>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-lists-dropdown\"\n          >\n            {this.state.lists.map((list) => (\n              <div\n                onClick={() => this.handleListSelect(list.id)}\n                key={list.id}\n                className=\"dropdown-item\"\n              >\n                {list.name}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div onClick={() => this.handleListChange(+1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>\n    </>\n  );\n\n  showTrelloInfo = () => {\n    if (this.props.apiKey.trim().length === 0)\n      return <h4>Configure Trello to sync your cards</h4>;\n\n    if (this.state.logged && this.state.status === 1) {\n      if (this.state.cards === undefined) {\n        return (\n          <div className=\"d-flex flex-column align-items-center\">\n            <FadeIn className=\"trello-status-container\">\n              <FontAwesomeIcon icon={faTimes} className=\"trello-status error\" />\n              <h5 className=\"trello-status-text\">\n                Cannot get Trello.\n                <br />\n                Check the config\n              </h5>\n            </FadeIn>\n          </div>\n        );\n      }\n\n      if (this.state.cards.length === 0) {\n        return (\n          <>\n            {this.getNavigator()}\n            <div className=\"d-flex flex-column  align-items-center\">\n              <FadeIn className=\"trello-status-container\">\n                <Lottie\n                  height=\"120px\"\n                  width=\"120px\"\n                  config={{\n                    animationData: checked,\n                    loop: false,\n                    autoplay: true,\n                  }}\n                />\n                <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n              </FadeIn>\n            </div>\n          </>\n        );\n      }\n\n      return (\n        <>\n          {this.getNavigator()}\n          <div id=\"trello-cards-container\">\n            {this.state.cards.map((card) => (\n              <FadeIn key={card.id}>\n                <TrelloCard card={card} />\n              </FadeIn>\n            ))}\n          </div>\n        </>\n      );\n    }\n    return (\n      <FadeIn>\n        <div className=\"d-flex flex-column  align-items-center\">\n          <Lottie\n            height=\"120px\"\n            width=\"120px\"\n            config={{ animationData: loader, loop: true, autoplay: true }}\n          />\n          <h5 className=\"trello-status-text\">Fetching Trello...</h5>\n        </div>\n      </FadeIn>\n    );\n  };\n\n  handleSave = (apiKey: string) => {\n    localStorage.setItem(\n      \"trello-config\",\n      JSON.stringify({ apiKey: apiKey.trim() })\n    );\n  };\n\n  handleReady = (trello: any) => {\n    if (this.state.logged) return;\n    this.loadBoards(trello);\n    this.setState({ logged: true, trello });\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Trello\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#trello-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          onSave={this.handleSave}\n          onReady={this.handleReady}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst gapiconfig = { apiKey: \"\", clientId: \"\" };\n\nexport interface GCalendarSettingsProps {\n  onLoginStatusChange: Function;\n  showWeather: boolean;\n  onSave: Function;\n}\n\nexport interface GCalendarSettingsState {\n  isSignedIn?: boolean;\n  isClientReady: boolean;\n  showWeather: boolean;\n}\n\nclass GCalendarSettings extends Component<\n  GCalendarSettingsProps,\n  GCalendarSettingsState\n> {\n  state = {\n    isSignedIn: undefined,\n    isClientReady: false,\n    showWeather: true,\n  };\n\n  async componentDidMount() {\n    this.setState({showWeather: this.props.showWeather});\n    try {\n      // eslint-disable-next-line\n      const config = require(\"../config/gapi.json\");\n      if (config !== undefined) {\n        gapiconfig.clientId = config.clientId;\n        gapiconfig.apiKey = config.apiKey;\n      }\n    } catch (e) {\n      console.log(\"Cannot find credentials file at src/config/gapi.json\");\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    script.onload = () => {\n      const { gapi } = window as any;\n      gapi.load(\"client:auth2\", this.initClient);\n    };\n\n    document.body.appendChild(script);\n  }\n\n  initClient = () => {\n    const { gapi } = window as any;\n\n    gapi.client\n      .init({\n        apiKey: gapiconfig.apiKey,\n        clientId: gapiconfig.clientId,\n        discoveryDocs: [\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n        ],\n        scope: \"https://www.googleapis.com/auth/calendar.readonly\",\n      })\n      .catch(() => {\n        console.log(\"Cannot init the Calendar client.\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n        }\n      })\n      .then(() => {\n        console.log(\"Calendar client loaded\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n\n        this.setState({ isClientReady: true });\n\n        gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    console.log(\"The login status was chagned to\", isSignedIn);\n    this.setState({ isSignedIn });\n    this.props.onLoginStatusChange(isSignedIn);\n  };\n\n  getActionButton = (gapi: any) => {\n    if (gapiconfig.clientId === \"\" || gapiconfig.apiKey === \"\")\n      return \"No credentials provided (see ./config/gapi.json)\";\n    if (!this.state.isClientReady) return null;\n    if (this.state.isSignedIn) {\n      return (\n        <button\n          type=\"button\"\n          onClick={() => gapi.auth2.getAuthInstance().signOut()}\n          className=\"btn btn-secondary\"\n        >\n          Sign out\n        </button>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={() => gapi.auth2.getAuthInstance().signIn()}\n        className=\"btn btn-primary\"\n      >\n        Sign in with Google Account\n      </button>\n    );\n  };\n\n  handleSave = () => {\n    localStorage.setItem(\"show-weather\", JSON.stringify({showWeather: this.state.showWeather}));\n    this.props.onSave({showWeather: this.state.showWeather});\n  }\n\n  handleShowWeather = (e: React.ChangeEvent<any>) => {\n    this.setState({showWeather: e.target.checked});\n  }\n\n  render() {\n    if (this.state.isSignedIn === undefined) return null;\n\n    const { gapi } = window as any;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"gcalendar-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"gcalendar-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"gcalendar-settings-modal-label\">\n                Google Calendar settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {this.getActionButton(gapi)}\n              <hr />\n              <div className=\"checkbox-input\">\n                <input type=\"checkbox\" defaultChecked={this.props.showWeather} onChange={this.handleShowWeather} />\n                <span>Show weather</span>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button \n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n                data-dismiss=\"modal\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GCalendarSettings;\n","import React, { Component } from \"react\";\nimport { formatDate, withLeadingZeroes as pad } from \"../utils/Formater\";\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hours = pad(date.getHours(), 2);\n    const minutes = pad(date.getMinutes(), 2);\n    const seconds = pad(date.getSeconds(), 2);\n    return (\n      <>\n        <h6 id=\"calendar-today\">{formatDate(date)}</h6>\n        <h3 id=\"calendar-clock\">{`${hours}:${minutes}:${seconds}`}</h3>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Weather() {\n  const [weather, setWeather] = useState(undefined as string | undefined);\n  useEffect(() => {\n    const weatherCache = localStorage.getItem(\"weather-cache\");\n    const now = new Date().getTime() / 1000;\n    \n    if(weatherCache !== null) {\n      console.log(\"Weather cache found...\");\n      const {date, data} = JSON.parse(weatherCache);\n      if(now < date + (60 * 30)) {\n        setWeather(data);\n        return;\n      }\n      console.log(\"Weather cache is too old.\")\n    }\n\n    console.log(\"Fetching weather...\");\n    fetch(\"https://wttr.in/?view=3\")\n      .then(res => res.text())\n      .then(text => {\n        localStorage.setItem(\"weather-cache\", JSON.stringify({date: now, data: text}));\n        setWeather(text);\n      });\n  }, [setWeather])\n  \n  return (<h6 id=\"weather\">{weather || \"Fetching weather\"}</h6>);\n}\n\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport { formatTime } from '../utils/Formater';\nimport GCalendarSettings from \"./GCalendarSettings\";\nimport Clock from \"./Clock\";\nimport Weather from \"./Weather\";\nimport loader from \"../assets/loader.json\";\nimport \"../styles/CalendarIntegration.scss\";\n\ninterface GCalendarIntegrationState {\n  /*\n  -1 = not logged\n  0 = loading\n  1 = logged\n  */\n  loginState: number;\n  events: Array<any>;\n  showWeather: boolean;\n  cache: any;\n}\n\nconst weekDays = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nclass GCalendarIntegration extends Component<any, GCalendarIntegrationState> {\n  state = { loginState: 0, events: new Array<any>(), showWeather: true, cache: undefined };\n\n  colors: any = {};\n\n  componentDidMount() {\n    const showWeather = localStorage.getItem(\"show-weather\");\n    if (showWeather !== null) {\n      this.setState(JSON.parse(showWeather));\n    }\n    this.loadEvents(new Date());\n  }\n  \n  loadEvents = async (now: Date) => {\n    const cachedInfo = localStorage.getItem(\"gcalendar-cached\");\n    if(cachedInfo === null) {\n      console.log(\"No calendar cache found\");\n      return;\n    }\n\n    // eslint-disable-next-line\n    let {date, events, colors} = JSON.parse(cachedInfo);\n\n    events = events.filter((event: any) => {\n      const {end} = event;\n      let endDate: Date | undefined;\n\n      if (end.date !== undefined) {\n        endDate = new Date(`${end.date}T00:00:00`);\n      } else {\n        endDate = new Date(end.dateTime);\n      }\n      return endDate.getTime() > now.getTime();\n    });\n\n    let old = false;\n\n    if(now.getTime() - date >= 15 * 60 * 1000) {\n      console.log(\"Calendar cache too old...\");\n      old = true;\n    }\n\n    this.colors = colors;\n    this.setState({ events, cache: {date, old} });\n  }\n\n  loadEventsFromGoogle = async (timeMin: Date) => {\n    const { gapi } = window as any;\n\n    const timeMax = new Date(timeMin.getTime() + 7 * 24 * 60 * 60 * 1000);\n\n    const events = new Array<any>();\n\n    // resolve colors\n    this.colors = (await gapi.client.calendar.colors.get()).result.calendar;\n\n    // resolve the calendars\n    const calendarsRes = await gapi.client.calendar.calendarList.list();\n    // resolve the events for each calendar\n    const promises = (calendarsRes.result.items as Array<any>).map(\n      async (calendar) => {\n        const res = await gapi.client.calendar.events.list({\n          calendarId: calendar.id,\n          timeMin: timeMin.toISOString(),\n          timeMax: timeMax.toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: 50,\n          orderBy: \"startTime\",\n        });\n        events.push(\n          ...res.result.items.map((event: any) => {\n            let displayTime = \"All day\";\n            if (event.start.date === undefined) {\n              const eventStart = event.start.dateTime\n                .split(\"T\")[1]\n                .substring(0, 5);\n              const eventEnd = event.end.dateTime.split(\"T\")[1].substring(0, 5);\n              displayTime = `${eventStart} - ${ eventEnd}`;\n            }\n            const {id, start, end, summary} = event;\n            return {id, displayTime, start, end, summary, colorId: calendar.colorId};\n          })\n        );\n      }\n    );\n\n    await Promise.all(promises);\n\n    localStorage.setItem(\"gcalendar-cached\", JSON.stringify({date: new Date().getTime(), events, colors: this.colors}));\n    this.setState({ events, cache: undefined });\n  };\n\n  getStatus = () => {\n    if (this.state.loginState === -1)\n      return <h4>Configure Google Calendar to see future events</h4>;\n    return null;\n  };\n\n  handleLoginStatusChange = async (isSignedIn: boolean) => {\n    const cache = this.state.cache as unknown as undefined | any;\n    if (isSignedIn && (cache === undefined || cache.old)) {\n      await this.loadEventsFromGoogle(new Date());\n    }\n    this.setState({ loginState: isSignedIn ? 1 : -1 });\n  };\n\n  forceUpdate = () => {\n    if (this.state.loginState === 1) {\n      this.setState((prev) => ({cache: {date: prev.cache.date, old: true }}), () => {\n        this.loadEventsFromGoogle(new Date());\n      });\n    }\n  }\n\n  listEvents = () => {\n    if (this.state.loginState === -1) return null;\n    if (this.state.loginState === 0 && !this.state.cache) {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Google Calendar...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n\n    const eventsByDay = new Map<string, Array<any>>();\n\n    this.state.events.forEach((event) => {\n      let when = event.start.date;\n      // eslint-disable-next-line\n      if (when === undefined) when = event.start.dateTime.split(\"T\")[0];\n\n      let events = new Array<any>();\n      if (eventsByDay.has(when)) {\n        events = eventsByDay.get(when)!;\n      }\n      events.push(event);\n      eventsByDay.set(when, events);\n    });\n\n    // sort days\n    const sorted = Array.from(eventsByDay.entries()).sort();\n\n    const content = new Array<any>();\n    content.push(<h5 key=\"header\">Future events:</h5>);\n\n    if (this.state.cache !== undefined) {\n      const cache = this.state.cache as unknown as any; \n      const display = formatTime(new Date(cache.date));\n\n      content.push(\n        <div id=\"cache-status-container\" key=\"cache-status\">\n          <h6>Updated at {display}. {cache.old ? 'Updating...' : ''}</h6>\n          {cache.old || this.state.loginState !== 1 ? null : (\n            <div title=\"Update now\" id=\"refresh-cache-button\" onClick={this.forceUpdate}>\n              <FontAwesomeIcon icon={faSync} />\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    sorted.forEach((entry: Array<any>) => {\n      const when = entry[0] as string;\n      const weekDay = weekDays[new Date(when).getUTCDay()];\n      let events = entry[1] as Array<any>;\n\n      // sort events\n      events = events.sort((a, b) => {\n        if (a.displayTime === \"All day\") return -1;\n        if (b.displayTime === \"All day\") return 1;\n\n        if (a.displayTime < b.displayTime) return -1;\n        if (a.displayTime > b.displayTime) return 1;\n        return 0;\n      });\n\n      content.push(\n        <FadeIn key={when}>\n          <div className=\"gcalendar-events\">\n            <h6>{`${when} - ${weekDay}`}</h6>\n            {events.map((event) => {\n              const color = this.colors[event.colorId];\n              return (\n                <div\n                  key={event.id}\n                  style={{\n                    backgroundColor: color.background,\n                    color: color.foreground,\n                  }}\n                >\n                  {`${event.displayTime}: ${event.summary}`}\n                </div>\n              );\n            })}\n          </div>\n        </FadeIn>\n      );\n    });\n\n    return content;\n  };\n\n  handleSave = (config: any) => {\n    this.setState(config);\n  }\n\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Calendar:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Google Calendar\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#gcalendar-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.showWeather ? <Weather /> : null}\n        <Clock />\n        {this.getStatus()}\n        {this.listEvents()}\n        <GCalendarSettings \n          showWeather={this.state.showWeather} \n          onSave={this.handleSave}\n          onLoginStatusChange={this.handleLoginStatusChange} \n        />\n      </div>\n    );\n  }\n}\n\nexport default GCalendarIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/GeneralSettings.scss\";\n\ninterface GeneralSettingsProps {\n  onSave: Function;\n}\n\ninterface GeneralSettingsState {\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n}\n\nclass GeneralSettings extends Component<\n  GeneralSettingsProps,\n  GeneralSettingsState\n> {\n  state = { engineType: \"\", engineUrl: \"\", showToDo: true, showCalendar: true, showTrello: true, expandBookmarks: false};\n\n  async componentDidMount() {\n    const layoutConfig = localStorage.getItem(\"layout\");\n    if (layoutConfig !== null) {\n      const { showToDo, showCalendar, showTrello, expandBookmarks} = JSON.parse(layoutConfig);\n      this.setState({showToDo, showCalendar, showTrello, expandBookmarks});\n    }\n\n    const searchEngineConfig = localStorage.getItem(\"search-engine\");\n    if (searchEngineConfig === null) {\n      this.setState({ engineType: \"duckduckgo\" }, () => {\n        this.saveEngine();\n        this.props.onSave(this.state);\n      });\n    } else {\n      const json = JSON.parse(searchEngineConfig);\n      this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl,\n      }, () => {\n        this.props.onSave(this.state);\n      });\n    }\n  }\n\n  saveEngine = () => {\n    localStorage.setItem(\"search-engine\", JSON.stringify(this.state));\n  };\n\n  saveLayout = () => {\n    localStorage.setItem(\"layout\", JSON.stringify(\n      {showToDo: this.state.showToDo, showCalendar: this.state.showCalendar, showTrello: this.state.showTrello, expandBookmarks: this.state.expandBookmarks}\n    ));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleCheckboxChange = (e: React.ChangeEvent<any>, keyName: string) => {\n    const newState = {} as any;\n    newState[keyName] = e.target.checked;\n    this.setState(newState);\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith(\"https://\") &&\n      !this.state.engineUrl.startsWith(\"http://\")\n    ) {\n      await this.setState((prevState) => ({\n        engineUrl: `https://${prevState.engineUrl}`,\n      }));\n    }\n    this.saveEngine();\n    this.saveLayout();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    \n    const cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b)\n      .length;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"general-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"general-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"general-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <span>Search engine</span>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === \"custom\" ? \"\" : \"hidden\"\n                  }`}\n                />\n              </div>\n              <hr />\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showToDo} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showToDo\")} />\n                <span>Show To Do card</span>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showTrello} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showTrello\")} />\n                <span>Show Trello card</span>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showCalendar} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showCalendar\")} />\n                <span>Show Calendar card</span>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.expandBookmarks} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"expandBookmarks\")} disabled={cardsCount === 3} />\n                <span>Expand bookmarks (requires 2 cards or less)</span>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                data-dismiss=\"modal\"\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GeneralSettings;\n","import React, { useState, useCallback } from 'react';\nimport \"../styles/ThemeSelector.scss\";\n\ninterface Theme {\n  name: string;\n  author: string;\n  authorUrl: string;\n  dayUrl: string;\n  nightUrl: string;\n}\n\nconst themes = [\n  {\n    name: \"Pixelart city\",\n    author: \"Unknown\", \n    authorUrl: \"https://imgur.com/a/WmmsFbs\",\n    dayUrl: \"https://i.imgur.com/fxoldSH.jpg\",\n    nightUrl: \"https://i.imgur.com/KccUkyq.jpg\",\n  },\n  {\n    name: \"Forest\",\n    author: \"sebastianinman\",\n    authorUrl: \"https://dynamicwallpaper.club/u/sebastianinman\",\n    dayUrl: \"https://i.imgur.com/CdaQWae.jpg\",\n    nightUrl: \"https://i.imgur.com/eSK3Xdd.jpg\",\n  },\n  {\n    name: \"Anime city\",\n    author: \"dasalejo\",\n    authorUrl: \"https://dynamicwallpaper.club/u/dasalejo\",\n    dayUrl: \"https://i.imgur.com/CvRvFOB.jpg\",\n    nightUrl: \"https://i.imgur.com/u8WqVCf.jpg\",\n  },\n] as Array<Theme>;\ninterface ThemeOptionProps {\n  theme: Theme;\n  setId: Function;\n  id: number;\n  selected: number;\n}\n\nfunction ThemeOption(props: ThemeOptionProps) {\n  return (\n    <div\n      className={`theme-option ${props.selected === props.id ? \"theme-option-selected\" : \"\"}`}\n      onClick={() => props.setId(props.id)}\n    >\n      <img src={props.theme.dayUrl} alt={props.theme.name} />\n    </div>\n  );\n}\n\ninterface ThemeSelectorProps {\n  updateBackgrounds: Function;\n  selectedTheme: number;\n}\n\nexport default function ThemeSelector(props: ThemeSelectorProps) {\n  const [theme, setTheme] = useState(props.selectedTheme);\n\n  const handleThemeChange = useCallback((index: number) => {\n    setTheme(index);\n    const t = themes[index];\n    localStorage.setItem(\"backgrounds\", JSON.stringify({\n      dayBackground: {\n          url: t.dayUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n        nightBackground: {\n          url: t.nightUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n    }));\n    props.updateBackgrounds();\n  }, [setTheme, props]);\n\n  return (\n    <div id=\"theme-selector\">\n      <span>\n        Select your favorite background theme:\n      </span>\n      <div id=\"theme-selector-options\">\n        <ThemeOption \n          id={0}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[0]}\n        />\n        <ThemeOption \n          id={1}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[1]}\n        />\n        <ThemeOption \n          id={2}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[2]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ThemeSelector from './ThemeSelector';\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  updateBackgrounds: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    \"day-url\": \"\",\n    \"day-author\": \"\",\n    \"day-authorUrl\": \"\",\n    \"night-url\": \"\",\n    \"night-author\": \"\",\n    \"night-authorUrl\": \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      \"day-url\": this.props.day.url,\n      \"day-author\": this.props.day.author,\n      \"day-authorUrl\": this.props.day.authorUrl,\n      \"night-url\": this.props.night.url,\n      \"night-author\": this.props.night.author,\n      \"night-authorUrl\": this.props.night.authorUrl,\n    });\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const { name } = e.target as any;\n    const { value } = e.target as any;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state[\"day-url\"],\n        author: this.state[\"day-author\"],\n        authorUrl: this.state[\"day-authorUrl\"],\n      },\n      {\n        url: this.state[\"night-url\"],\n        author: this.state[\"night-author\"],\n        authorUrl: this.state[\"night-authorUrl\"],\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div id=\"theme-accordion\" className=\"accordion\">\n                <button\n                  type=\"button\"\n                  id=\"theme-select-heading\"\n                  className=\"btn btn-info m-1\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#theme-select\"\n                  aria-expanded=\"true\"\n                  aria-controls=\"theme-select\"\n                >\n                  Select background\n                </button>\n                <div\n                  id=\"theme-select\" \n                  className=\"collapse show\"\n                  aria-labelledby=\"theme-select-heading\"\n                  data-parent=\"#theme-accordion\"\n                >\n                  <ThemeSelector selectedTheme={-1} updateBackgrounds={this.props.updateBackgrounds} />\n                </div>\n                <br />\n                <button \n                  type=\"button\"\n                  id=\"theme-custom-heading\"\n                  className=\"btn btn-info m-1\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#theme-custom\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"theme-custom\"\n                >\n                  Custom background\n                </button>\n                <div \n                  id=\"theme-custom\"\n                  className=\"collapse\"\n                  aria-labelledby=\"theme-custom-heading\"\n                  data-parent=\"#theme-accordion\"\n                >\n                  <p>Day background</p>\n                  <input\n                    id=\"day-url\"\n                    name=\"day-url\"\n                    placeholder=\"Image URL\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"day-url\"]}\n                  />\n                  <input\n                    name=\"day-author\"\n                    placeholder=\"Author name\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"day-author\"]}\n                  />\n                  <input\n                    name=\"day-authorUrl\"\n                    placeholder=\"Author page URL\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"day-authorUrl\"]}\n                  />\n                  <p>Night background</p>\n                  <input\n                    name=\"night-url\"\n                    placeholder=\"Image URL\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"night-url\"]}\n                  />\n                  <input\n                    name=\"night-author\"\n                    placeholder=\"Author name\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"night-author\"]}\n                  />\n                  <input\n                    name=\"night-authorUrl\"\n                    placeholder=\"Author page URL\"\n                    onChange={this.handleChange}\n                    defaultValue={this.state[\"night-authorUrl\"]}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={this.handleSave}\n                  >\n                    Apply custom\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ProjectInfoProps {\n  version: string;\n}\n\nclass ProjectInfo extends Component<ProjectInfoProps, any>  {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div data-toggle=\"tooltip\" title=\"Open general settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#general-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Homepage v{this.props.version}\n        </a>{\" \"}\n        under \n        <a\n          href=\"https://github.com/Pauloo27/homepage/blob/master/LICENSE\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GPL-2 license\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faAdjust } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n  toggleBackground: Function;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        <div\n          data-toggle=\"tooltip\"\n          title=\"Toggle background\"\n          onClick={() => this.props.toggleBackground()}\n          className=\"homepage-toggle-background\"\n        >\n          <div>\n            <FontAwesomeIcon icon={faAdjust} />\n          </div>\n        </div>\n        Image by{\" \"}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n        <div data-toggle=\"tooltip\" title=\"Open background settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#background-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { useEffect, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport ThemeSelector from './ThemeSelector';\n\ninterface WelcomeModalProps {\n  updateBackgrounds: Function;\n}\n\nexport default function WelcomeModal(props: WelcomeModalProps) {\n  const handleSave = useCallback(() => {\n    ($(\"#welcome-modal\") as any).modal(\"hide\");\n    ($(\"#general-settings-modal\") as any).modal(\"show\");\n  }, []);\n\n  useEffect(() => {\n    ($(\"#welcome-modal\") as any).modal(\"show\");\n  }, []);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"welcome-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"welcome-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"welcome-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>Hello!</h4>\n            <p>\n              It&rsquo;s your first time using this homepage! Now this page is cached in your browser \n              so you can use it without internet (with limitations)!\n            </p>\n            <hr />\n            <ThemeSelector selectedTheme={1} updateBackgrounds={props.updateBackgrounds} />\n            <hr />\n            <div id=\"licese-notice\">\n              <p>\n                This program is free software; you can redistribute it and/or modify it under the \n                terms of the GNU General Public License.\n              </p>\n              <p>\n                This program is distributed in the hope that it will be useful, but WITHOUT ANY \n                WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \n                PARTICULAR PURPOSE.\n              </p>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Pauloo27/homepage/blob/master/LICENSE\">See the license for more details</a>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSave}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport \"../styles/UpdateModal.scss\";\n\ninterface UpdateModalProps {\n  currentVersion: string;\n  lastVersion: string;\n}\n\nexport default function UpdateModal(props: UpdateModalProps) {\n  const [changelog, setChangelog] = useState(\"Loading changelog...\");\n\n  useEffect(() => {\n    ($(\"#update-modal\") as any).modal(\"show\");\n\n    const githubUrl = `https://api.github.com/repos/Pauloo27/homepage/releases/tags/v${props.currentVersion}`;\n\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(githubUrl)}`)\n      // eslint-disable-next-line\n      .then(response => {\n        if (response.ok) return response.json();\n        setChangelog(\"Cannot load changelog.\");\n      })\n      .then(data => { \n        setChangelog(JSON.parse(data.contents).body);\n      });\n  }, [setChangelog, props.currentVersion]);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"update-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"update-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"update-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>{`Version ${props.currentVersion} installed!`}</h4>\n            <p>\n              {`Homepage updated from version ${props.lastVersion} to ${props.currentVersion}.`}\n            </p>\n            <div id=\"changelog-container\">\n              <pre id=\"changelog\">\n                {changelog}\n              </pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SearchBar from \"./components/SearchBar\";\nimport BookmarkBar from \"./components/BookmarkBar\";\nimport ToDoBox from \"./components/ToDoBox\";\nimport TrelloIntegration from \"./components/TrelloIntegration\";\nimport GCalendarIntegration from \"./components/GCalendarIntegration\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport BackgroundSettings from \"./components/BackgroundSettings\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport BackgroundInfo from \"./components/BackgroundInfo\";\nimport WelcomeModal from \"./components/WelcomeModal\";\nimport UpdateModal from \"./components/UpdateModal\";\nimport \"./styles/App.scss\";\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  backgroundToggled: boolean;\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n  firstStartup: boolean;\n  currentVersion: string;\n  lastVersion: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    nightBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    currentBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    backgroundToggled: false,\n    engineType: \"\",\n    engineUrl: undefined,\n    showToDo: false,\n    showTrello: false,\n    showCalendar: false,\n    expandBookmarks: false,\n    firstStartup: false,\n    currentVersion: \"\",\n    lastVersion: \"\",\n  };\n\n  timerId: any;\n\n  async componentDidMount() {\n    await this.loadBackgrounds();\n\n    this.checkBackground();\n\n    this.checkVersion();\n\n    this.timerId = setInterval(() => this.checkBackground(), 10 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  loadBackgrounds = async () => {\n    const backgrounds = localStorage.getItem(\"backgrounds\");\n    if (backgrounds === null) {\n      this.setState({\n        dayBackground: {\n          url: \"https://i.imgur.com/CdaQWae.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n        nightBackground: {\n          url: \"https://i.imgur.com/eSK3Xdd.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n      }, () => this.saveBackgrounds());\n    } else {\n      this.setState(JSON.parse(backgrounds));\n    }\n  }\n\n  checkVersion = () => {\n    // eslint-disable-next-line\n    const packageInfo = require(\"../package.json\");\n    let version = localStorage.getItem(\"version\");\n\n    if (version === null) this.setState({firstStartup: true});\n\n    localStorage.setItem(\"version\", packageInfo.version);\n    if (version === null) version = packageInfo.version;\n    this.setState({currentVersion: packageInfo.version, lastVersion: version!});\n  }\n\n  setBackground = (background: Background) => {\n    if (this.state.currentBackground === background) return;\n\n    this.setState({ currentBackground: background });\n    document.getElementsByTagName(\"body\")[0].background = background.url;\n  };\n\n  toggleBackground = () => {\n    let newBackground: Background;\n\n    if (this.state.currentBackground === this.state.dayBackground) {\n      newBackground = this.state.nightBackground;\n    } else {\n      newBackground = this.state.dayBackground;\n    }\n\n    this.setState({ backgroundToggled: true });\n    this.setBackground(newBackground);\n  };\n\n  \n  updateBackground = () => {\n    const now = new Date();\n    let newBackground: Background;\n\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      newBackground = this.state.dayBackground;\n    } else {\n      newBackground = this.state.nightBackground;\n    }\n    this.setBackground(newBackground);\n  }\n\n\n  checkBackground = () => {\n    if (this.state.backgroundToggled) return;\n    \n    this.updateBackground();\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      \"backgrounds\",\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground,\n      })\n    );\n  };\n\n  setupTooltip = () => {\n    ($('[data-toggle=\"tooltip\"]') as any).tooltip();\n  };\n\n  handleTrelloReady = () => {\n    this.setupTooltip();\n  };\n\n  handleGeneralSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background\n  ) => {\n    this.setState({ dayBackground, nightBackground, backgroundToggled: false }, () => {\n      this.saveBackgrounds();\n      this.checkBackground();\n    });\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem(\"trello-config\");\n    if (configEncoded === null) {\n      return <TrelloIntegration apiKey=\"\" onReady={this.handleTrelloReady} />;\n    }\n    const config = JSON.parse(configEncoded);\n    return (\n      <TrelloIntegration\n        apiKey={config.apiKey}\n        onReady={this.handleTrelloReady}\n      />\n    );\n  };\n\n  handleBackgroundChange = () => {\n    this.loadBackgrounds().then(this.updateBackground);\n  };\n\n  render() {\n    if (this.state.currentBackground.url === \"\") return null;\n\n    let cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b).length;\n\n    const bookmarksExpanded = cardsCount !== 3 && this.state.expandBookmarks;\n\n    if (bookmarksExpanded) {\n      cardsCount+=1;\n    }\n\n    this.setupTooltip();\n\n    return (\n      <>\n        <link rel=\"preload\" href={this.state.dayBackground.url} as=\"image\" />\n        <link rel=\"preload\" href={this.state.nightBackground.url} as=\"image\" />\n        {this.state.firstStartup ? <WelcomeModal updateBackgrounds={this.handleBackgroundChange} /> : null}\n        {this.state.currentVersion !== this.state.lastVersion ? \n          <UpdateModal currentVersion={this.state.currentVersion} lastVersion={this.state.lastVersion} /> \n        : null}\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n            expand={bookmarksExpanded}\n          />\n          {bookmarksExpanded ? null : <BookmarkBar setupTooltip={this.setupTooltip} expand={false} /> }\n        </div>\n        <div id=\"middle-container\" className={`card-count-${cardsCount}`}>\n          {this.state.showToDo ? <ToDoBox setupTooltip={this.setupTooltip} /> : null}\n          {this.state.showCalendar ? <GCalendarIntegration /> : null}\n          {this.state.showTrello ? this.loadTrelloIntegration() : null}\n          {bookmarksExpanded ? <BookmarkBar setupTooltip={this.setupTooltip} expand /> : null}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo version={this.state.currentVersion} />\n          <BackgroundInfo\n            toggleBackground={this.toggleBackground}\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <div id=\"footer-dropdown\">\n          <div className=\"dropdown\">\n            <button\n              className=\"footer-dropdown-button\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <FontAwesomeIcon icon={faInfo} />\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <ProjectInfo version={this.state.currentVersion} />\n              </div>\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <BackgroundInfo\n                  toggleBackground={this.toggleBackground}\n                  backgroundAuthor={this.state.currentBackground.author}\n                  backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n                />\n                {\" \"}\n              </div>\n            </div>\n          </div>\n        </div>\n        <GeneralSettings onSave={this.handleGeneralSave} />\n        <BackgroundSettings\n          updateBackgrounds={this.handleBackgroundChange}\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./styles/Global.scss\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// eslint-disable-next-line\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}