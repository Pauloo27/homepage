{"version":3,"sources":["utils/ProviderManager.ts","components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","provider/LocalStorageProvider.ts","components/BookmarkBar.tsx","components/ToDoEntry.tsx","components/ToDoBox.tsx","components/TrelloSettings.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloIntegration.tsx","components/GCalendarSettings.tsx","components/Clock.tsx","components/Weather.tsx","components/GCalendarIntegration.tsx","components/GeneralSettings.tsx","components/ThemeSelector.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","components/WelcomeModal.tsx","components/UpdateModal.tsx","App.tsx","serviceWorker.js","index.js"],"names":["currentProvider","SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","expand","autoFocus","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","BookmarkEntry","entry","onUpdate","onDelete","data-toggle","data-boundary","title","href","data-target","faPen","defaultProvider","key","localStorage","getItem","removeItem","setItem","getProvider","undefined","BookmarkBar","editable","entries","Array","saveBookmarks","setValue","JSON","stringify","handleEditToggle","prevState","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","window","location","reload","getEntries","map","bookmarks","getValue","parse","faCheck","faPlus","ToDoEntry","done","edit","newText","handleDone","finishEdit","onDoneToggle","toggleEditMode","handleEditSave","preventDefault","handleFormEscape","keyCode","text","onEdit","getTextComponent","onDoubleClick","onSubmit","onKeyUp","onFocus","select","getIcon","faSave","faCheckCircle","faCircle","faTrash","ToDoBox","loaded","saveToDoList","setupTooltip","handleInputKey","$","tooltip","setTimeout","handleDoneToggle","newValue","handleEdit","height","width","config","animationData","checked","loop","autoplay","todo","TrelloSettings","apiKey","loadedApiKey","loginState","handleKeyChange","componentDidMount","handleLogin","onReady","Trello","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","console","log","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","rel","withLeadingZeroes","number","size","str","formatDate","date","year","getFullYear","month","getMonth","day","getDate","formatTime","showSeconds","hours","getHours","minutes","getMinutes","seconds","getSeconds","TrelloLabelColors","green","yellow","orange","red","purple","blue","sky","lime","pink","black","TrelloCard","parseDate","dateString","Date","getDueDate","card","due","getChecklists","checklists","list","items","checkItems","completedItems","item","faCheckSquare","getLabels","labels","label","style","color","backgroundColor","shortUrl","data-placement","faShareSquare","TrelloIntegration","logged","trello","status","selectedList","selectedBoard","cards","boards","lists","saveHistory","loadBoards","get","res","loadLists","err","boardId","history","json","find","board","loadCards","listId","cardsPromise","idChecklists","checklistPromise","checklist","Promise","resolve","checklistRes","all","handleListChange","changeBy","index","indexOf","maxIndex","newIndex","handleListSelect","handleBoardSelect","getNavigator","aria-haspopup","aria-expanded","faAngleLeft","faAngleRight","showTrelloInfo","loader","handleReady","faCog","gapiconfig","clientId","GCalendarSettings","isSignedIn","isClientReady","showWeather","initClient","gapi","client","init","discoveryDocs","scope","catch","auth2","getAuthInstance","updateSigninStatus","then","listen","onLoginStatusChange","getActionButton","signOut","signIn","handleShowWeather","require","script","document","createElement","onload","load","body","appendChild","defaultChecked","Clock","timerId","setInterval","clearInterval","pad","Weather","useState","weather","setWeather","useEffect","weatherCache","now","getTime","data","fetch","weekDays","GCalendarIntegration","events","cache","colors","loadEvents","cachedInfo","event","end","dateTime","old","loadEventsFromGoogle","start","calendar","result","calendarList","calendarsRes","promises","calendarId","timeMin","toISOString","timeMax","showDeleted","singleEvents","maxResults","orderBy","displayTime","eventStart","eventEnd","summary","colorId","getStatus","handleLoginStatusChange","forceUpdate","prev","listEvents","eventsByDay","Map","forEach","when","has","set","sorted","from","sort","content","display","faSync","weekDay","getUTCDay","b","background","foreground","GeneralSettings","showToDo","showCalendar","showTrello","expandBookmarks","saveEngine","saveLayout","handleChange","handleUrlChange","handleCheckboxChange","keyName","newState","layoutConfig","searchEngineConfig","cardsCount","disabled","themes","author","authorUrl","dayUrl","nightUrl","ThemeOption","selected","setId","theme","ThemeSelector","selectedTheme","setTheme","handleThemeChange","useCallback","t","dayBackground","nightBackground","updateBackgrounds","BackgroundSettings","night","ProjectInfo","BackgroundInfo","toggleBackground","faAdjust","backgroundAuthorUrl","backgroundAuthor","WelcomeModal","modal","UpdateModal","changelog","setChangelog","githubUrl","currentVersion","encodeURIComponent","response","ok","contents","lastVersion","App","currentBackground","backgroundToggled","firstStartup","loadBackgrounds","backgrounds","saveBackgrounds","setBackground","getElementsByTagName","newBackground","updateBackground","checkBackground","handleTrelloReady","handleGeneralSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","handleBackgroundChange","packageInfo","version","checkVersion","bookmarksExpanded","as","faInfo","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bc17aa8.chunk.js","sourcesContent":["import LocalStorageProvider from \"../provider/LocalStorageProvider\";\nimport AbstractProvider from \"../provider/AbstractProvider\";\n\nconst defaultProvider = new LocalStorageProvider();\nlet currentProvider: AbstractProvider;\n\nexport function setProvider(provider: AbstractProvider) {\n  currentProvider = provider;\n}\n\nexport function getProvider(): AbstractProvider {\n  if (currentProvider === undefined) setProvider(defaultProvider);\n  return currentProvider;\n}\n","import React, { Component } from \"react\";\nimport \"../styles/SearchBar.scss\";\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n  expand: boolean;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = \"\";\n    let action = \"\";\n\n    if (this.props.engineType === \"duckduckgo\") {\n      name = \"DuckDuckGO\";\n      action = \"https://duckduckgo.com\";\n    }\n\n    if (this.props.engineType === \"google\") {\n      name = \"Google\";\n      action = \"https://google.com/search\";\n    }\n\n    if (this.props.engineType === \"custom\") {\n      name = this.props.engineUrl!.split(\"//\")[1].split(\"/\")[0];\n      action = this.props.engineUrl!;\n    }\n\n    const icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split(\"://\")[1].split(\"/\")[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className={`homepage-card ${this.props.expand ? \"expanded\" : \"\"}`}>\n        <input\n          autoFocus\n          className=\"text-input\"\n          name=\"q\"\n          placeholder={`Search at ${name}`}\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon,\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0 ||\n      this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let { url } = this.state;\n    if (!url.startsWith(\"http\")) {\n      url = `https://${url}`;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              {this.props.url === \"\" ? null : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={this.handleDelete}\n                >\n                  Delete\n                </button>\n            )}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                {this.props.url === \"\" ? \"Create\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    let { icon, name } = this.props;\n\n    if (icon === \"\") {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split(\"://\")[1].split(\"/\")[0]\n      }.ico`;\n    }\n\n    return (\n      <div\n        className=\"bookmark-entry\"\n        data-toggle=\"tooltip\"\n        data-boundary=\"window\"\n        title={name}\n      >\n        <a href={this.props.url}>\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import AbstractProvider from \"./AbstractProvider\";\n\nexport default class LocalStorageProvider extends AbstractProvider {\n  hasValue(key: string): boolean {\n    return localStorage.getItem(key) !== null;\n  }\n\n  unsetValue(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getValue(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setValue(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/BookmarkBar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEntry from \"./BookmarkEntry\";\nimport BookmarkEditor from \"./BookmarkEditor\";\nimport { getProvider } from \"../utils/ProviderManager\";\n\ninterface BookmarkBarProps {\n  expand: boolean;\n}\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<BookmarkBarProps, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  componentDidMount() {\n    const bookmarks = getProvider().getValue(\"bookmarks\");\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  saveBookmarks = () => {\n    getProvider().setValue(\"bookmarks\", JSON.stringify(this.state.entries));\n  };\n\n  handleEditToggle = () => {\n    this.setState(prevState => ({ editable: !prevState.editable }));\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = \"\";\n    do {\n      id =\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter((entry) => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const { entries } = this.state;\n    entries.push(entry);\n    this.setState({ entries });\n    this.saveBookmarks();\n    window.location.reload();\n  };\n\n  getEntries = () => {\n    const { entries } = this.state;\n\n    return entries.map((bookmark) => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className={`homepage-card ${this.props.expand ? \"expand\" : \"\"}`}>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n            data-toggle=\"tooltip\"\n            title=\"Toggle bookmark edit mode\"\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          {this.props.expand ? <h4>Bookmarks:</h4> : null}\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Add new bookmark\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#bookmark-add-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          className={`bookmark-list ${this.state.editable ? \"editable\" : \"\"}`}\n        >\n          {this.getEntries()}\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          onSave={this.handleNewBookmark}\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faCircle,\n  faSave,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ToDoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n  onEdit: Function;\n}\n\ninterface ToDoEntryState {\n  done: boolean;\n  edit: boolean;\n  newText: string;\n}\n\nclass ToDoEntry extends Component<ToDoEntryProps, ToDoEntryState> {\n  state = { done: false, edit: false, newText: \"\" };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    if (this.state.edit) {\n      this.finishEdit();\n      return;\n    }\n    this.setState(\n      (prevState) => ({ done: !prevState.done }),\n      () => this.props.onDoneToggle(this.props.id, this.state.done)\n    );\n\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  toggleEditMode = () => {\n    this.setState(prevState => ({ edit: !prevState.edit }));\n  };\n\n  handleEditSave = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.finishEdit();\n  };\n\n  handleFormEscape = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 27) this.toggleEditMode();\n  };\n\n  finishEdit = () => {\n    this.toggleEditMode();\n    let text = this.state.newText;\n    if (text.trim() === \"\") text = this.props.text;\n    this.props.onEdit(this.props.id, text);\n  };\n\n  getTextComponent = () => {\n    if (this.state.edit) {\n      return (\n        <div\n          className={\n            this.state.edit ? \"todo-entry-text edit\" : \"todo-entry-text\"\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          <form onSubmit={this.handleEditSave} onKeyUp={this.handleFormEscape}>\n            <input\n              autoFocus\n              onChange={(e) => this.setState({ newText: e.target.value })}\n              onFocus={(e) => e.target.select()}\n              defaultValue={this.props.text}\n            />\n          </form>\n        </div>\n      );\n    }\n    return (\n      <div\n        className={\n          this.state.done ? \"todo-entry-text checked\" : \"todo-entry-text\"\n        }\n        onDoubleClick={this.toggleEditMode}\n      >\n        {this.props.text}\n      </div>\n    );\n  };\n\n  getIcon = () => {\n    if (this.state.edit) return faSave;\n    return this.state.done ? faCheckCircle : faCircle;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div\n            className=\"todo-checkbox\"\n            data-toggle=\"tooltip\"\n            title=\"Toggle done state\"\n            onClick={this.handleDone}\n          >\n            <FontAwesomeIcon\n              className={\n                this.state.done && !this.state.edit ? \"icon-checked\" : \"\"\n              }\n              icon={this.getIcon()}\n            />\n          </div>\n          {this.getTextComponent()}\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div\n            className=\"todo-entry-action\"\n            data-toggle=\"tooltip\"\n            title=\"Delete entry\"\n            onClick={this.handleDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoEntry;\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport { getProvider } from \"../utils/ProviderManager\";\nimport checked from \"../assets/checked.json\";\nimport ToDoEntry from \"./ToDoEntry\";\nimport \"../styles/ToDoBox.scss\";\n\ninterface ToDoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface ToDoBoxProps {\n  setupTooltip: Function;\n}\n\ninterface ToDoBoxState {\n  entries: Array<ToDoEntryState>;\n  loaded: boolean;\n}\n\nclass ToDoBox extends Component<ToDoBoxProps, ToDoBoxState> {\n  state = { entries: new Array<ToDoEntryState>(), loaded: false };\n\n  componentDidMount() {\n    const todo = getProvider().getValue(\"todo-list\");\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries, loaded: true });\n    } else {\n      this.setState({ loaded: true }, this.saveToDoList);\n    }\n  }\n\n  saveToDoList = () => {\n    getProvider().setValue(\"todo-list\", JSON.stringify(this.state.entries));\n    this.props.setupTooltip();\n  };\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = \"\";\n\n      do {\n        id =\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter((entry) => entry.id === id).length !== 0\n      );\n\n      const { entries } = this.state;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries }, this.saveToDoList);\n      (e.target as any).value = \"\";\n    }\n  };\n\n  handleDelete = (id: string) => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip(\"dispose\");\n    });\n    setTimeout(async () => {\n      let { entries } = this.state;\n      entries = entries.filter((value) => value.id !== id);\n      this.setState({ entries }, this.saveToDoList);\n    }, 200);\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.done = done;\n\n      return newValue;\n    });\n    this.setState({ entries }, this.saveToDoList);\n  };\n\n  handleEdit = async (id: string, newText: string) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.text = newText;\n\n      return newValue;\n    });\n    this.setState({ entries }, this.saveToDoList);\n  };\n\n  getEntries = () => {\n    if (!this.state.loaded) return null;\n    if (this.state.entries.length === 0) {\n      return (\n        <div className=\"d-flex flex-column  align-items-center\">\n          <FadeIn className=\"trello-status-container\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{\n                animationData: checked,\n                loop: false,\n                autoplay: true,\n              }}\n            />\n            <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n          </FadeIn>\n        </div>\n      );\n    }\n\n    return this.state.entries.map((entry) => (\n      <ToDoEntry\n        onDelete={this.handleDelete}\n        onDoneToggle={this.handleDoneToggle}\n        onEdit={this.handleEdit}\n        text={entry.text}\n        done={entry.done}\n        id={entry.id}\n        key={entry.id}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>To Do:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"text-input\"\n          type=\"text\"\n          placeholder=\"Add new things to your To Do\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>{this.getEntries()}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoBox;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloSettings.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TrelloClient, { Trello } from \"react-trello-client\";\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  loadedApiKey: string;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: \"\",\n    loadedApiKey: \"\",\n    loginState: 0,\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    this.setState((prevState) => ({\n      loadedApiKey: prevState.apiKey,\n      loginState,\n    }));\n    this.props.onSave(this.state.apiKey);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      loadedApiKey: this.props.apiKey,\n    });\n  };\n\n  handleLogin = () => {\n    this.props.onReady(Trello);\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0)\n      return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist\n        authorizeInteractive\n        authorizeScopeRead // boolean: {true} | {false}\n        authorizeScopeWrite // boolean: {true} | {false}\n        authorizeScopeAccount // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log(\"Login error!\")} // function: {() => console.log('Login error!')}\n        autoAuthorize // boolean: {true} | {false}\n        authorizeButton // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>\n                Login into your Trello Account and get an API key in{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n                . Then add the homepage URL to the Allowed Origins.\n              </p>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? \"hidden\" : \"\"}\n              >\n                {this.getTrelloClient()}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n  while (str.length < size) str = `0${str}`;\n  return str;\n}\n\nexport function formatDate(date: Date): string {\n  const year = date.getFullYear();\n  const month = withLeadingZeroes(date.getMonth() + 1, 2);\n  const day = withLeadingZeroes(date.getDate(), 2);\n  return `${year}-${month}-${day}`;\n}\n\nexport function formatTime(date: Date, showSeconds = false): string {\n  const hours = withLeadingZeroes(date.getHours(), 2);\n  const minutes = withLeadingZeroes(date.getMinutes(), 2);\n  if (showSeconds) {\n    const seconds = withLeadingZeroes(date.getSeconds(), 2);\n    return `${hours}:${minutes}:${seconds}`;\n  } \n    return `${hours}:${minutes}`;\n  \n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShareSquare,\n  faCheckSquare,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { formatDate } from \"../utils/Formater\";\n\nconst TrelloLabelColors = {\n  green: \"#59C059\",\n  yellow: \"#C0C059\",\n  orange: \"#C08C59\",\n  red: \"#C05959\",\n  purple: \"#8C59C0\",\n  blue: \"#597BC0\",\n  sky: \"#59C0C0\",\n  lime: \"#8CC059\",\n  pink: \"#C0598C\",\n  black: \"#344563\",\n};\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return formatDate(date);\n  };\n\n  getDueDate = (card: any) => {\n    if (card.due === null) return null;\n\n    return <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>;\n  };\n\n  getChecklists = (card: any) => {\n    if (card.checklists === undefined) return null;\n\n    return (\n      <div className=\"trello-card-checklists\">\n        {card.checklists.map((list: any) => {\n          const items = list.checkItems;\n          const completedItems = items.filter(\n            (item: any) => item.state === \"complete\"\n          );\n          return (\n            <div\n              key={list.id}\n              className={`trello-card-checklist ${\n                items.length === completedItems.length ? \"completed\" : \"\"\n              }`}\n            >\n              <FontAwesomeIcon className=\"icon\" icon={faCheckSquare} />\n              {`${completedItems.length}/${items.length}`}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  getLabels = (card: any) => {\n    const labels = card.labels as Array<any>;\n    if (labels.length === 0) return null;\n\n    return (\n      <div className=\"trello-card-labels\">\n        {labels.map((label) => (\n          <div\n            key={label.id}\n            className=\"trello-card-label\"\n            style={{\n              color: \"white\",\n              backgroundColor: (TrelloLabelColors as any)[label.color],\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        {this.getLabels(card)}\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={card.shortUrl}\n              className=\"trello-card-action-anchor\"\n              data-toggle=\"tooltip\"\n              data-placement=\"left\"\n              title=\"Open card on Trello\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {this.getDueDate(card)}\n        {this.getChecklists(card)}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from \"react\";\nimport {\n  faCog,\n  faTimes,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport TrelloSettings from \"./TrelloSettings\";\nimport TrelloCard from \"./TrelloCard\";\nimport loader from \"../assets/loader.json\";\nimport checked from \"../assets/checked.json\";\nimport \"../styles/TrelloIntegration.scss\";\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  onReady: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  trello: any;\n  cards?: Array<any>;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedList: any;\n  selectedBoard: any;\n  /*\n  -1 = refreshing\n  0 = loading\n  1 = done\n  */\n  status: number;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = {\n    logged: false,\n    trello: {} as any,\n    status: 0,\n    selectedList: {} as any,\n    selectedBoard: {} as any,\n    cards: new Array<any>(),\n    boards: new Array<any>(),\n    lists: new Array<any>(),\n  };\n\n  saveHistory = () => {\n    localStorage.setItem(\n      \"trello-history\",\n      JSON.stringify({\n        selectedList: this.state.selectedList.id,\n        selectedBoard: this.state.selectedBoard.id,\n      })\n    );\n  };\n\n  loadBoards = async (trello: any) => {\n    trello.get(\n      \"members/me/boards\",\n      async (res: any) => {\n        console.log(\"get boards\");\n        await this.setState({ boards: res });\n        this.loadLists(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadLists = (trello: any) => {\n    let boardId = this.state.selectedBoard.id;\n    if (boardId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedBoard === undefined) {\n          boardId = this.state.boards[0].id;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards[0],\n          }));\n        } else {\n          boardId = json.selectedBoard;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards.find(\n              (board) => board.id === json.selectedBoard\n            ),\n          }));\n        }\n      } else {\n        boardId = this.state.boards[0].id;\n        this.setState((prevState) => ({ selectedBoard: prevState.boards[0] }));\n      }\n    }\n    trello.get(\n      `boards/${boardId}/lists`,\n      async (res: any) => {\n        console.log(\"get lists\");\n        await this.setState({ lists: res });\n        this.loadCards(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadCards = (trello: any) => {\n    let listId = this.state.selectedList.id;\n    if (listId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedList === undefined) {\n          listId = this.state.lists[0].id;\n          this.setState((prevState) => ({ selectedList: prevState.lists[0] }));\n        } else {\n          listId = json.selectedList;\n          this.setState((prevState) => ({\n            selectedList: prevState.lists.find(\n              (list) => list.id === json.selectedList\n            ),\n          }));\n        }\n      } else {\n        listId = this.state.lists[0].id;\n        this.setState(prevState => ({ selectedList: prevState.lists[0] }));\n      }\n    }\n    trello.get(\n      `lists/${listId}/cards`,\n      async (res: any) => {\n        console.log(\"get cards\");\n        const cardsPromise = res.map(async (card: any) => {\n          if (card.idChecklists.length === 0) return card;\n\n          console.log(\"get checklists\");\n          const checklistPromise = card.idChecklists.map(\n            async (checklist: any) =>\n              new Promise((resolve) => {\n                trello.get(\n                  `checklists/${checklist}`,\n                  (checklistRes: any) => resolve(checklistRes),\n                  () => {\n                    resolve(undefined);\n                  }\n                );\n              })\n          );\n\n          const checklists = await Promise.all(checklistPromise);\n          card.checklists = checklists;\n          return card;\n        });\n        const cards = await Promise.all(cardsPromise);\n        this.setState({ cards, status: 1 });\n        this.props.onReady();\n      },\n      (err: any) => {\n        console.log(\"ERROR:\", err);\n        this.setState({ cards: undefined, status: 1 });\n        this.props.onReady();\n      }\n    );\n  };\n\n  handleListChange = async (changeBy: number) => {\n    const index = this.state.lists.indexOf(this.state.selectedList);\n    const maxIndex = this.state.lists.length - 1;\n    let newIndex = index + changeBy;\n    if (newIndex <= -1) newIndex = maxIndex;\n    if (newIndex > maxIndex) newIndex = 0;\n\n    await this.setState(prevState => ({\n      selectedList: prevState.lists[newIndex],\n      status: 0,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleListSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedList: prevState.lists.find((list) => list.id === id),\n      status: -1,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleBoardSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedBoard: prevState.boards.find((board) => board.id === id),\n      selectedList: {} as any,\n      status: -1,\n    }));\n    this.loadBoards(this.state.trello);\n    this.saveHistory();\n  };\n\n  getNavigator = () => (\n    <>\n      <div className=\"trello-board-navigator trello-navigator\">\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-boards-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h6 className=\"text-center\">{this.state.selectedBoard.name}</h6>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-boards-dropdown\"\n          >\n            {this.state.boards.map((board) => (\n              <div\n                onClick={() => this.handleBoardSelect(board.id)}\n                key={board.id}\n                className=\"dropdown-item\"\n              >\n                {board.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"trello-list-navigator trello-navigator\">\n        <div onClick={() => this.handleListChange(-1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </div>\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-lists-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h3 className=\"text-center\">{this.state.selectedList.name}</h3>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-lists-dropdown\"\n          >\n            {this.state.lists.map((list) => (\n              <div\n                onClick={() => this.handleListSelect(list.id)}\n                key={list.id}\n                className=\"dropdown-item\"\n              >\n                {list.name}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div onClick={() => this.handleListChange(+1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>\n    </>\n  );\n\n  showTrelloInfo = () => {\n    if (this.props.apiKey.trim().length === 0)\n      return <h4>Configure Trello to sync your cards</h4>;\n\n    if (this.state.logged && this.state.status === 1) {\n      if (this.state.cards === undefined) {\n        return (\n          <div className=\"d-flex flex-column align-items-center\">\n            <FadeIn className=\"trello-status-container\">\n              <FontAwesomeIcon icon={faTimes} className=\"trello-status error\" />\n              <h5 className=\"trello-status-text\">\n                Cannot get Trello.\n                <br />\n                Check the config\n              </h5>\n            </FadeIn>\n          </div>\n        );\n      }\n\n      if (this.state.cards.length === 0) {\n        return (\n          <>\n            {this.getNavigator()}\n            <div className=\"d-flex flex-column  align-items-center\">\n              <FadeIn className=\"trello-status-container\">\n                <Lottie\n                  height=\"120px\"\n                  width=\"120px\"\n                  config={{\n                    animationData: checked,\n                    loop: false,\n                    autoplay: true,\n                  }}\n                />\n                <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n              </FadeIn>\n            </div>\n          </>\n        );\n      }\n\n      return (\n        <>\n          {this.getNavigator()}\n          <div id=\"trello-cards-container\">\n            {this.state.cards.map((card) => (\n              <FadeIn key={card.id}>\n                <TrelloCard card={card} />\n              </FadeIn>\n            ))}\n          </div>\n        </>\n      );\n    }\n    return (\n      <FadeIn>\n        <div className=\"d-flex flex-column  align-items-center\">\n          <Lottie\n            height=\"120px\"\n            width=\"120px\"\n            config={{ animationData: loader, loop: true, autoplay: true }}\n          />\n          <h5 className=\"trello-status-text\">Fetching Trello...</h5>\n        </div>\n      </FadeIn>\n    );\n  };\n\n  handleSave = (apiKey: string) => {\n    localStorage.setItem(\n      \"trello-config\",\n      JSON.stringify({ apiKey: apiKey.trim() })\n    );\n  };\n\n  handleReady = (trello: any) => {\n    if (this.state.logged) return;\n    this.loadBoards(trello);\n    this.setState({ logged: true, trello });\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Trello\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#trello-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          onSave={this.handleSave}\n          onReady={this.handleReady}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst gapiconfig = { apiKey: \"\", clientId: \"\" };\n\nexport interface GCalendarSettingsProps {\n  onLoginStatusChange: Function;\n  showWeather: boolean;\n  onSave: Function;\n}\n\nexport interface GCalendarSettingsState {\n  isSignedIn?: boolean;\n  isClientReady: boolean;\n  showWeather: boolean;\n}\n\nclass GCalendarSettings extends Component<\n  GCalendarSettingsProps,\n  GCalendarSettingsState\n> {\n  state = {\n    isSignedIn: undefined,\n    isClientReady: false,\n    showWeather: true,\n  };\n\n  async componentDidMount() {\n    this.setState({showWeather: this.props.showWeather});\n    try {\n      const config = require(\"../config/gapi.json\");\n      if (config !== undefined) {\n        gapiconfig.clientId = config.clientId;\n        gapiconfig.apiKey = config.apiKey;\n      }\n    } catch (e) {\n      console.log(\"Cannot find credentials file at src/config/gapi.json\");\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    script.onload = () => {\n      const { gapi } = window as any;\n      gapi.load(\"client:auth2\", this.initClient);\n    };\n\n    document.body.appendChild(script);\n  }\n\n  initClient = () => {\n    const { gapi } = window as any;\n\n    gapi.client\n      .init({\n        apiKey: gapiconfig.apiKey,\n        clientId: gapiconfig.clientId,\n        discoveryDocs: [\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n        ],\n        scope: \"https://www.googleapis.com/auth/calendar.readonly\",\n      })\n      .catch(() => {\n        console.log(\"Cannot init the Calendar client.\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n        }\n      })\n      .then(() => {\n        console.log(\"Calendar client loaded\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n\n        this.setState({ isClientReady: true });\n\n        gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    console.log(\"The login status was chagned to\", isSignedIn);\n    this.setState({ isSignedIn });\n    this.props.onLoginStatusChange(isSignedIn);\n  };\n\n  getActionButton = (gapi: any) => {\n    if (gapiconfig.clientId === \"\" || gapiconfig.apiKey === \"\")\n      return \"No credentials provided (see ./config/gapi.json)\";\n    if (!this.state.isClientReady) return null;\n    if (this.state.isSignedIn) {\n      return (\n        <button\n          type=\"button\"\n          onClick={() => gapi.auth2.getAuthInstance().signOut()}\n          className=\"btn btn-secondary\"\n        >\n          Sign out\n        </button>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={() => gapi.auth2.getAuthInstance().signIn()}\n        className=\"btn btn-primary\"\n      >\n        Sign in with Google Account\n      </button>\n    );\n  };\n\n  handleSave = () => {\n    localStorage.setItem(\"show-weather\", JSON.stringify({showWeather: this.state.showWeather}));\n    this.props.onSave({showWeather: this.state.showWeather});\n  }\n\n  handleShowWeather = (e: React.ChangeEvent<any>) => {\n    this.setState({showWeather: e.target.checked});\n  }\n\n  render() {\n    if (this.state.isSignedIn === undefined) return null;\n\n    const { gapi } = window as any;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"gcalendar-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"gcalendar-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"gcalendar-settings-modal-label\">\n                Google Calendar settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {this.getActionButton(gapi)}\n              <hr />\n              <div className=\"checkbox-input\">\n                <input type=\"checkbox\" defaultChecked={this.props.showWeather} onChange={this.handleShowWeather} />\n                <label>Show weather</label>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GCalendarSettings;\n","import React, { Component } from \"react\";\nimport { formatDate, withLeadingZeroes as pad } from \"../utils/Formater\";\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hours = pad(date.getHours(), 2);\n    const minutes = pad(date.getMinutes(), 2);\n    const seconds = pad(date.getSeconds(), 2);\n    return (\n      <>\n        <h6 id=\"calendar-today\">{formatDate(date)}</h6>\n        <h3 id=\"calendar-clock\">{`${hours}:${minutes}:${seconds}`}</h3>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Weather() {\n  const [weather, setWeather] = useState(undefined as string | undefined);\n  useEffect(() => {\n    const weatherCache = localStorage.getItem(\"weather-cache\");\n    const now = new Date().getTime() / 1000;\n    \n    if(weatherCache !== null) {\n      console.log(\"Weather cache found...\");\n      const {date, data} = JSON.parse(weatherCache);\n      if(now < date + (60 * 30)) {\n        setWeather(data);\n        return;\n      }\n      console.log(\"Weather cache is too old.\")\n    }\n\n    console.log(\"Fetching weather...\");\n    fetch(\"https://wttr.in/?view=3\")\n      .then(res => res.text())\n      .then(text => {\n        localStorage.setItem(\"weather-cache\", JSON.stringify({date: now, data: text}));\n        setWeather(text);\n      });\n  }, [setWeather])\n  \n  return (<h6 id=\"weather\">{weather || \"Fetching weather\"}</h6>);\n}\n\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport { formatTime } from '../utils/Formater';\nimport GCalendarSettings from \"./GCalendarSettings\";\nimport Clock from \"./Clock\";\nimport Weather from \"./Weather\";\nimport loader from \"../assets/loader.json\";\nimport \"../styles/CalendarIntegration.scss\";\n\ninterface GCalendarIntegrationState {\n  /*\n  -1 = not logged\n  0 = loading\n  1 = logged\n  */\n  loginState: number;\n  events: Array<any>;\n  showWeather: boolean;\n  cache: any;\n}\n\nconst weekDays = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nclass GCalendarIntegration extends Component<any, GCalendarIntegrationState> {\n  state = { loginState: 0, events: new Array<any>(), showWeather: true, cache: undefined };\n\n  colors: any = {};\n\n  componentDidMount() {\n    const showWeather = localStorage.getItem(\"show-weather\");\n    if (showWeather !== null) {\n      this.setState(JSON.parse(showWeather));\n    }\n    this.loadEvents(new Date());\n  }\n  \n  loadEvents = async (now: Date) => {\n    const cachedInfo = localStorage.getItem(\"gcalendar-cached\");\n    if(cachedInfo === null) {\n      console.log(\"No calendar cache found\");\n      return;\n    }\n\n    let {date, events, colors} = JSON.parse(cachedInfo);\n\n    events = events.filter((event: any) => {\n      const {end} = event;\n      let endDate: Date | undefined;\n\n      if (end.date !== undefined) {\n        endDate = new Date(`${end.date}T00:00:00`);\n      } else {\n        endDate = new Date(end.dateTime);\n      }\n      return endDate.getTime() > now.getTime();\n    });\n\n    let old = false;\n\n    if(now.getTime() - date >= 15 * 60 * 1000) {\n      console.log(\"Calendar cache too old...\");\n      old = true;\n    }\n\n    this.colors = colors;\n    this.setState({ events, cache: {date, old} });\n  }\n\n  loadEventsFromGoogle = async (start: Date) => {\n    const { gapi } = window as any;\n\n    const end = new Date(start.getTime() + 7 * 24 * 60 * 60 * 1000);\n\n    const events = new Array<any>();\n\n    // resolve colors\n    this.colors = (await gapi.client.calendar.colors.get()).result.calendar;\n\n    // resolve the calendars\n    const calendarsRes = await gapi.client.calendar.calendarList.list();\n    // resolve the events for each calendar\n    const promises = (calendarsRes.result.items as Array<any>).map(\n      async (calendar) => {\n        const res = await gapi.client.calendar.events.list({\n          calendarId: calendar.id,\n          timeMin: start.toISOString(),\n          timeMax: end.toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: 50,\n          orderBy: \"startTime\",\n        });\n        events.push(\n          ...res.result.items.map((event: any) => {\n            let displayTime = \"All day\";\n            if (event.start.date === undefined) {\n              const eventStart = event.start.dateTime\n                .split(\"T\")[1]\n                .substring(0, 5);\n              const eventEnd = event.end.dateTime.split(\"T\")[1].substring(0, 5);\n              displayTime = `${eventStart} - ${ eventEnd}`;\n            }\n            const {id, start, end, summary} = event;\n            return {id, displayTime, start, end, summary, colorId: calendar.colorId};\n          })\n        );\n      }\n    );\n\n    await Promise.all(promises);\n\n    localStorage.setItem(\"gcalendar-cached\", JSON.stringify({date: new Date().getTime(), events, colors: this.colors}));\n    this.setState({ events, cache: undefined });\n  };\n\n  getStatus = () => {\n    if (this.state.loginState === -1)\n      return <h4>Configure Google Calendar to see future events</h4>;\n    return null;\n  };\n\n  handleLoginStatusChange = async (isSignedIn: boolean) => {\n    const cache = this.state.cache as unknown as undefined | any;\n    if (isSignedIn && (cache === undefined || cache.old)) {\n      await this.loadEventsFromGoogle(new Date());\n    }\n    this.setState({ loginState: isSignedIn ? 1 : -1 });\n  };\n\n  forceUpdate = () => {\n    if (this.state.loginState === 1) {\n      this.setState((prev) => ({cache: {date: prev.cache.date, old: true }}), () => {\n        this.loadEventsFromGoogle(new Date());\n      });\n    }\n  }\n\n  listEvents = () => {\n    if (this.state.loginState === -1) return null;\n    if (this.state.loginState === 0 && !this.state.cache) {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Google Calendar...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n\n    const eventsByDay = new Map<string, Array<any>>();\n\n    this.state.events.forEach((event) => {\n      let when = event.start.date;\n      if (when === undefined) when = event.start.dateTime.split(\"T\")[0];\n\n      let events = new Array<any>();\n      if (eventsByDay.has(when)) {\n        events = eventsByDay.get(when)!;\n      }\n      events.push(event);\n      eventsByDay.set(when, events);\n    });\n\n    // sort days\n    const sorted = Array.from(eventsByDay.entries()).sort();\n\n    const content = new Array<any>();\n    content.push(<h5 key=\"header\">Future events:</h5>);\n\n    if (this.state.cache !== undefined) {\n      const cache = this.state.cache as unknown as any; \n      const display = formatTime(new Date(cache.date));\n\n      content.push(\n        <div id=\"cache-status-container\" key=\"cache-status\">\n          <h6>Updated at {display}. {cache.old ? 'Updating...' : ''}</h6>\n          {cache.old || this.state.loginState !== 1 ? null : (\n            <div title=\"Update now\" id=\"refresh-cache-button\" onClick={this.forceUpdate}>\n              <FontAwesomeIcon icon={faSync} />\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    sorted.forEach((entry: Array<any>) => {\n      const when = entry[0] as string;\n      const weekDay = weekDays[new Date(when).getUTCDay()];\n      let events = entry[1] as Array<any>;\n\n      // sort events\n      events = events.sort((a, b) => {\n        if (a.displayTime === \"All day\") return -1;\n        if (b.displayTime === \"All day\") return 1;\n\n        if (a.displayTime < b.displayTime) return -1;\n        if (a.displayTime > b.displayTime) return 1;\n        return 0;\n      });\n\n      content.push(\n        <FadeIn key={when}>\n          <div className=\"gcalendar-events\">\n            <h6>{`${when} - ${weekDay}`}</h6>\n            {events.map((event) => {\n              const color = this.colors[event.colorId];\n              return (\n                <div\n                  key={event.id}\n                  style={{\n                    backgroundColor: color.background,\n                    color: color.foreground,\n                  }}\n                >\n                  {`${event.displayTime}: ${event.summary}`}\n                </div>\n              );\n            })}\n          </div>\n        </FadeIn>\n      );\n    });\n\n    return content;\n  };\n\n  handleSave = (config: any) => {\n    this.setState(config);\n  }\n\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Calendar:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Google Calendar\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#gcalendar-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.showWeather ? <Weather /> : null}\n        <Clock />\n        {this.getStatus()}\n        {this.listEvents()}\n        <GCalendarSettings \n          showWeather={this.state.showWeather} \n          onSave={this.handleSave}\n          onLoginStatusChange={this.handleLoginStatusChange} \n        />\n      </div>\n    );\n  }\n}\n\nexport default GCalendarIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/GeneralSettings.scss\";\n\ninterface GeneralSettingsProps {\n  onSave: Function;\n}\n\ninterface GeneralSettingsState {\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n}\n\nclass GeneralSettings extends Component<\n  GeneralSettingsProps,\n  GeneralSettingsState\n> {\n  state = { engineType: \"\", engineUrl: \"\", showToDo: true, showCalendar: true, showTrello: true, expandBookmarks: false};\n\n  async componentDidMount() {\n    const layoutConfig = localStorage.getItem(\"layout\");\n    if (layoutConfig !== null) {\n      const { showToDo, showCalendar, showTrello, expandBookmarks} = JSON.parse(layoutConfig);\n      this.setState({showToDo, showCalendar, showTrello, expandBookmarks});\n    }\n\n    const searchEngineConfig = localStorage.getItem(\"search-engine\");\n    if (searchEngineConfig === null) {\n      await this.setState({ engineType: \"duckduckgo\" });\n      this.saveEngine();\n    } else {\n      const json = JSON.parse(searchEngineConfig);\n      await this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl,\n      });\n    }\n    this.props.onSave(this.state);\n  }\n\n  saveEngine = () => {\n    localStorage.setItem(\"search-engine\", JSON.stringify(this.state));\n  };\n\n  saveLayout = () => {\n    localStorage.setItem(\"layout\", JSON.stringify(\n      {showToDo: this.state.showToDo, showCalendar: this.state.showCalendar, showTrello: this.state.showTrello, expandBookmarks: this.state.expandBookmarks}\n    ));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleCheckboxChange = (e: React.ChangeEvent<any>, keyName: string) => {\n    const newState = {} as any;\n    newState[keyName] = e.target.checked;\n    this.setState(newState);\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith(\"https://\") &&\n      !this.state.engineUrl.startsWith(\"http://\")\n    ) {\n      await this.setState((prevState) => ({\n        engineUrl: `https://${prevState.engineUrl}`,\n      }));\n    }\n    this.saveEngine();\n    this.saveLayout();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    \n    const cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b)\n      .length;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"general-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"general-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"general-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <label>Search engine</label>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === \"custom\" ? \"\" : \"hidden\"\n                  }`}\n                />\n              </div>\n              <hr />\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showToDo} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showToDo\")} />\n                <label>Show To Do card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showTrello} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showTrello\")} />\n                <label>Show Trello card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showCalendar} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showCalendar\")} />\n                <label>Show Calendar card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.expandBookmarks} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"expandBookmarks\")} disabled={cardsCount === 3} />\n                <label>Expand bookmarks (requires 2 cards or less)</label>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GeneralSettings;\n","import React, { useState, useCallback } from 'react';\nimport \"../styles/ThemeSelector.scss\";\n\ninterface Theme {\n  name: string;\n  author: string;\n  authorUrl: string;\n  dayUrl: string;\n  nightUrl: string;\n}\n\nconst themes = [\n  {\n    name: \"Pixelart city\",\n    author: \"Unknown\", \n    authorUrl: \"https://imgur.com/a/WmmsFbs\",\n    dayUrl: \"https://i.imgur.com/fxoldSH.jpg\",\n    nightUrl: \"https://i.imgur.com/KccUkyq.jpg\",\n  },\n  {\n    name: \"Forest\",\n    author: \"sebastianinman\",\n    authorUrl: \"https://dynamicwallpaper.club/u/sebastianinman\",\n    dayUrl: \"https://i.imgur.com/CdaQWae.jpg\",\n    nightUrl: \"https://i.imgur.com/eSK3Xdd.jpg\",\n  },\n  {\n    name: \"Anime city\",\n    author: \"dasalejo\",\n    authorUrl: \"https://dynamicwallpaper.club/u/dasalejo\",\n    dayUrl: \"https://i.imgur.com/CvRvFOB.jpg\",\n    nightUrl: \"https://i.imgur.com/u8WqVCf.jpg\",\n  },\n] as Array<Theme>;\ninterface ThemeOptionProps {\n  theme: Theme;\n  setId: Function;\n  id: number;\n  selected: number;\n}\n\nfunction ThemeOption(props: ThemeOptionProps) {\n  return (\n    <div\n      className={`theme-option ${props.selected === props.id ? \"theme-option-selected\" : \"\"}`}\n      onClick={() => props.setId(props.id)}\n    >\n      <img src={props.theme.dayUrl} alt={props.theme.name} />\n    </div>\n  );\n}\n\ninterface ThemeSelectorProps {\n  updateBackgrounds: Function;\n  selectedTheme: number;\n}\n\nexport default function ThemeSelector(props: ThemeSelectorProps) {\n  const [theme, setTheme] = useState(props.selectedTheme);\n\n  const handleThemeChange = useCallback((index: number) => {\n    setTheme(index);\n    const t = themes[index];\n    localStorage.setItem(\"backgrounds\", JSON.stringify({\n      dayBackground: {\n          url: t.dayUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n        nightBackground: {\n          url: t.nightUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n    }));\n    props.updateBackgrounds();\n  }, [setTheme, props]);\n\n  return (\n    <div id=\"theme-selector\">\n      <label>\n        Select your favorite background theme:\n      </label>\n      <div id=\"theme-selector-options\">\n        <ThemeOption \n          id={0}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[0]}\n        />\n        <ThemeOption \n          id={1}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[1]}\n        />\n        <ThemeOption \n          id={2}\n          selected={theme}\n          setId={handleThemeChange}\n          theme={themes[2]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ThemeSelector from './ThemeSelector';\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  updateBackgrounds: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    \"day-url\": \"\",\n    \"day-author\": \"\",\n    \"day-authorUrl\": \"\",\n    \"night-url\": \"\",\n    \"night-author\": \"\",\n    \"night-authorUrl\": \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      \"day-url\": this.props.day.url,\n      \"day-author\": this.props.day.author,\n      \"day-authorUrl\": this.props.day.authorUrl,\n      \"night-url\": this.props.night.url,\n      \"night-author\": this.props.night.author,\n      \"night-authorUrl\": this.props.night.authorUrl,\n    });\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const { name } = e.target as any;\n    const { value } = e.target as any;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state[\"day-url\"],\n        author: this.state[\"day-author\"],\n        authorUrl: this.state[\"day-authorUrl\"],\n      },\n      {\n        url: this.state[\"night-url\"],\n        author: this.state[\"night-author\"],\n        authorUrl: this.state[\"night-authorUrl\"],\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <ThemeSelector selectedTheme={-1} updateBackgrounds={this.props.updateBackgrounds} />\n              <hr />\n              <h5>Custom background</h5>\n              <p>Day background</p>\n              <input\n                id=\"day-url\"\n                name=\"day-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-url\"]}\n              />\n              <input\n                name=\"day-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-author\"]}\n              />\n              <input\n                name=\"day-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-authorUrl\"]}\n              />\n              <p>Night background</p>\n              <input\n                name=\"night-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-url\"]}\n              />\n              <input\n                name=\"night-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-author\"]}\n              />\n              <input\n                name=\"night-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-authorUrl\"]}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Apply custom\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div data-toggle=\"tooltip\" title=\"Open general settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#general-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        Homepage made by{\" \"}\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pauloo27\n        </a>{\" \"}\n        under GPL-2 license\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faAdjust } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n  toggleBackground: Function;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        <div\n          data-toggle=\"tooltip\"\n          title=\"Toggle background\"\n          onClick={() => this.props.toggleBackground()}\n          className=\"homepage-toggle-background\"\n        >\n          <div>\n            <FontAwesomeIcon icon={faAdjust} />\n          </div>\n        </div>\n        Image by{\" \"}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n        <div data-toggle=\"tooltip\" title=\"Open background settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#background-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { useEffect, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport ThemeSelector from './ThemeSelector';\n\ninterface WelcomeModalProps {\n  updateBackgrounds: Function;\n}\n\nexport default function WelcomeModal(props: WelcomeModalProps) {\n  const handleSave = useCallback(() => {\n    ($(\"#welcome-modal\") as any).modal(\"hide\");\n    ($(\"#general-settings-modal\") as any).modal(\"show\");\n  }, []);\n\n  useEffect(() => {\n    ($(\"#welcome-modal\") as any).modal(\"show\");\n  }, []);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"welcome-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"welcome-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"welcome-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>Hello!</h4>\n            <p>\n              That's your first time using this homepage! Now this page is cached in your browser \n              so you can use it without internet (with limitations)!\n            </p>\n            <hr />\n            <ThemeSelector selectedTheme={1} updateBackgrounds={props.updateBackgrounds} />\n            <hr />\n            <div id=\"licese-notice\">\n              <p>\n                This program is free software; you can redistribute it and/or modify it under the \n                terms of the GNU General Public License.\n              </p>\n              <p>\n                This program is distributed in the hope that it will be useful, but WITHOUT ANY \n                WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \n                PARTICULAR PURPOSE.\n              </p>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Pauloo27/homepage/blob/master/LICENSE\">See the license for more details</a>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSave}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport \"../styles/UpdateModal.scss\";\n\ninterface UpdateModalProps {\n  currentVersion: string;\n  lastVersion: string;\n}\n\nexport default function UpdateModal(props: UpdateModalProps) {\n  const [changelog, setChangelog] = useState(\"Loading changelog...\");\n\n  useEffect(() => {\n    ($(\"#update-modal\") as any).modal(\"show\");\n\n    const githubUrl = `https://api.github.com/repos/Pauloo27/homepage/releases/tags/v${props.currentVersion}`;\n\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(githubUrl)}`)\n      .then(response => {\n        if (response.ok) return response.json();\n        setChangelog(\"Cannot load changelog.\");\n      })\n      .then(data => { \n        setChangelog(JSON.parse(data.contents).body);\n      });\n  }, [setChangelog, props.currentVersion]);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"update-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"update-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"update-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>{`Version ${props.currentVersion} installed!`}</h4>\n            <p>\n              {`Homepage updated from version ${props.lastVersion} to ${props.currentVersion}.`}\n            </p>\n            <div id=\"changelog-container\">\n              <pre id=\"changelog\">\n                {changelog}\n              </pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SearchBar from \"./components/SearchBar\";\nimport BookmarkBar from \"./components/BookmarkBar\";\nimport ToDoBox from \"./components/ToDoBox\";\nimport TrelloIntegration from \"./components/TrelloIntegration\";\nimport GCalendarIntegration from \"./components/GCalendarIntegration\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport BackgroundSettings from \"./components/BackgroundSettings\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport BackgroundInfo from \"./components/BackgroundInfo\";\nimport WelcomeModal from \"./components/WelcomeModal\";\nimport UpdateModal from \"./components/UpdateModal\";\nimport \"./styles/App.scss\";\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  backgroundToggled: boolean;\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n  firstStartup: boolean;\n  currentVersion: string;\n  lastVersion: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    nightBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    currentBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    backgroundToggled: false,\n    engineType: \"\",\n    engineUrl: undefined,\n    showToDo: true,\n    showTrello: true,\n    showCalendar: true,\n    expandBookmarks: false,\n    firstStartup: false,\n    currentVersion: \"\",\n    lastVersion: \"\",\n  };\n\n  timerId: any;\n\n  loadBackgrounds = async () => {\n    const backgrounds = localStorage.getItem(\"backgrounds\");\n    if (backgrounds === null) {\n      this.setState({\n        dayBackground: {\n          url: \"https://i.imgur.com/CdaQWae.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n        nightBackground: {\n          url: \"https://i.imgur.com/eSK3Xdd.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n      }, () => this.saveBackgrounds());\n    } else {\n      this.setState(JSON.parse(backgrounds));\n    }\n  }\n\n  checkVersion() {\n    const packageInfo = require(\"../package.json\");\n    let version = localStorage.getItem(\"version\");\n    if (version !== null)  {\n      if (version !== packageInfo.version) {\n        console.log(\"Updated to version\", version);\n      }\n    } else {\n      this.setState({firstStartup: true});\n    }\n    localStorage.setItem(\"version\", packageInfo.version);\n    if (version === null) version = packageInfo.version;\n    this.setState({currentVersion: packageInfo.version, lastVersion: version!});\n  }\n\n  async componentDidMount() {\n    await this.loadBackgrounds();\n\n    this.checkBackground();\n\n    this.checkVersion();\n\n    this.timerId = setInterval(() => this.checkBackground(), 10 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  setBackground = (background: Background) => {\n    if (this.state.currentBackground === background) return;\n\n    this.setState({ currentBackground: background });\n    document.getElementsByTagName(\"body\")[0].background = background.url;\n  };\n\n  toggleBackground = () => {\n    let newBackground: Background;\n\n    if (this.state.currentBackground === this.state.dayBackground) {\n      newBackground = this.state.nightBackground;\n    } else {\n      newBackground = this.state.dayBackground;\n    }\n\n    this.setState({ backgroundToggled: true });\n    this.setBackground(newBackground);\n  };\n\n  \n  updateBackground = () => {\n    const now = new Date();\n    let newBackground: Background;\n\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      newBackground = this.state.dayBackground;\n    } else {\n      newBackground = this.state.nightBackground;\n    }\n    this.setBackground(newBackground);\n  }\n\n\n  checkBackground = () => {\n    if (this.state.backgroundToggled) return;\n    \n    this.updateBackground();\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      \"backgrounds\",\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground,\n      })\n    );\n  };\n\n  setupTooltip = () => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip();\n    });\n  };\n\n  handleTrelloReady = () => {\n    this.setupTooltip();\n  };\n\n  handleGeneralSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background\n  ) => {\n    this.setState({ dayBackground, nightBackground, backgroundToggled: false }, () => {\n      this.saveBackgrounds();\n      this.checkBackground();\n    });\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem(\"trello-config\");\n    if (configEncoded === null) {\n      return <TrelloIntegration apiKey=\"\" onReady={this.handleTrelloReady} />;\n    }\n    const config = JSON.parse(configEncoded);\n    return (\n      <TrelloIntegration\n        apiKey={config.apiKey}\n        onReady={this.handleTrelloReady}\n      />\n    );\n  };\n\n  handleBackgroundChange = () => {\n    this.loadBackgrounds().then(this.updateBackground);\n  };\n\n  render() {\n    if (this.state.currentBackground.url === \"\") return null;\n\n    let cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b).length;\n\n    const bookmarksExpanded = cardsCount !== 3 && this.state.expandBookmarks;\n\n    if (bookmarksExpanded) {\n      cardsCount++;\n    }\n\n    this.setupTooltip();\n\n    return (\n      <>\n        <link rel=\"preload\" href={this.state.dayBackground.url} as=\"image\" />\n        <link rel=\"preload\" href={this.state.nightBackground.url} as=\"image\" />\n        {this.state.firstStartup ? <WelcomeModal updateBackgrounds={this.handleBackgroundChange} /> : null}\n        {this.state.currentVersion !== this.state.lastVersion ? \n          <UpdateModal currentVersion={this.state.currentVersion} lastVersion={this.state.lastVersion} /> \n        : null}\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n            expand={bookmarksExpanded}\n          />\n          {bookmarksExpanded ? null : <BookmarkBar expand={false} /> }\n        </div>\n        <div id=\"middle-container\" className={`card-count-${cardsCount}`}>\n          {this.state.showToDo ? <ToDoBox setupTooltip={this.setupTooltip} /> : null}\n          {this.state.showCalendar ? <GCalendarIntegration /> : null}\n          {this.state.showTrello ? this.loadTrelloIntegration() : null}\n          {bookmarksExpanded ? <BookmarkBar expand /> : null}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo />\n          <BackgroundInfo\n            toggleBackground={this.toggleBackground}\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <div id=\"footer-dropdown\">\n          <div className=\"dropdown\">\n            <button\n              className=\"footer-dropdown-button\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <FontAwesomeIcon icon={faInfo} />\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <ProjectInfo />\n              </div>\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <BackgroundInfo\n                  toggleBackground={this.toggleBackground}\n                  backgroundAuthor={this.state.currentBackground.author}\n                  backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n                />\n                {\" \"}\n              </div>\n            </div>\n          </div>\n        </div>\n        <GeneralSettings onSave={this.handleGeneralSave} />\n        <BackgroundSettings\n          updateBackgrounds={this.handleBackgroundChange}\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./styles/Global.scss\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}