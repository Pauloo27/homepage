{"version":3,"sources":["utils/ProviderManager.ts","components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","provider/LocalStorageProvider.ts","components/BookmarkBar.tsx","components/ToDoEntry.tsx","components/ToDoBox.tsx","components/TrelloSettings.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloIntegration.tsx","components/GCalendarSettings.tsx","components/Clock.tsx","components/Weather.tsx","components/GCalendarIntegration.tsx","components/GeneralSettings.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","components/WelcomeModal.tsx","components/UpdateModal.tsx","App.tsx","serviceWorker.js","index.js"],"names":["currentProvider","SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","expand","autoFocus","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","BookmarkEntry","entry","onUpdate","onDelete","href","data-toggle","data-target","faPen","defaultProvider","key","localStorage","getItem","removeItem","setItem","getProvider","undefined","BookmarkBar","editable","entries","Array","saveBookmarks","setValue","JSON","stringify","handleEditToggle","prevState","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","window","location","reload","getEntries","map","bookmarks","getValue","parse","title","faCheck","faPlus","ToDoEntry","done","edit","newText","handleDone","finishEdit","onDoneToggle","toggleEditMode","handleEditSave","preventDefault","handleFormEscape","keyCode","text","onEdit","getTextComponent","onDoubleClick","onSubmit","onKeyUp","onFocus","select","getIcon","faSave","faCheckCircle","faCircle","faTrash","ToDoBox","loaded","saveTodoList","setupTooltip","handleInputKey","$","tooltip","setTimeout","handleDoneToggle","newValue","handleEdit","height","width","config","animationData","checked","loop","autoplay","todo","TrelloSettings","apiKey","loadedApiKey","loginState","handleKeyChange","componentDidMount","handleLogin","onReady","Trello","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","console","log","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","rel","withLeadingZeroes","number","size","str","formatDate","date","year","getFullYear","month","getMonth","day","getDate","TrelloLabelColors","green","yellow","orange","red","purple","blue","sky","lime","pink","black","TrelloCard","parseDate","dateString","Date","getDueDate","card","due","getChecklists","checklists","list","items","checkItems","completedItems","item","faCheckSquare","getLabels","labels","label","style","color","backgroundColor","shortUrl","data-placement","faShareSquare","TrelloIntegration","logged","trello","status","selectedList","selectedBoard","cards","boards","lists","saveHistory","loadBoards","get","res","loadLists","err","boardId","history","json","find","board","loadCards","listId","cardsPromise","idChecklists","checklistPromise","checklist","Promise","resolve","checklistRes","all","handleListChange","changeBy","index","indexOf","maxIndex","newIndex","handleListSelect","handleBoardSelect","getNavigator","aria-haspopup","aria-expanded","faAngleLeft","faAngleRight","showTrelloInfo","loader","handleReady","faCog","gapiconfig","clientId","GCalendarSettings","isSignedIn","isClientReady","showWeather","initClient","gapi","client","init","discoveryDocs","scope","catch","auth2","getAuthInstance","updateSigninStatus","then","listen","onLoginStatusChange","getActionButton","signOut","signIn","handleShowWeather","require","script","document","createElement","onload","load","body","appendChild","defaultChecked","Clock","timerId","setInterval","clearInterval","hours","pad","getHours","minutes","getMinutes","seconds","getSeconds","Weather","useState","weather","setWeather","useEffect","weatherCache","now","getTime","data","fetch","weekDays","GCalendarIntegration","events","colors","loadEvents","start","end","calendar","result","calendarList","calendarsRes","calendarId","timeMin","toISOString","timeMax","showDeleted","singleEvents","maxResults","orderBy","event","colorId","displayTime","eventStart","dateTime","eventEnd","promises","getStatus","handleLoginStatusChange","listEvents","eventsByDay","Map","forEach","when","has","set","sorted","from","sort","content","weekDay","getUTCDay","b","background","foreground","summary","GeneralSettings","showToDo","showCalendar","showTrello","expandBookmarks","saveEngine","saveLayout","handleChange","handleUrlChange","handleCheckboxChange","keyName","newState","layoutConfig","searchEngineConfig","cardsCount","disabled","BackgroundSettings","author","authorUrl","night","ProjectInfo","BackgroundInfo","toggleBackground","faAdjust","backgroundAuthorUrl","backgroundAuthor","themes","dayUrl","nightUrl","ThemeOption","selected","setId","theme","WelcomeModal","setTheme","handleThemeChange","useCallback","t","dayBackground","nightBackground","updateBackgrounds","modal","UpdateModal","changelog","setChangelog","githubUrl","currentVersion","encodeURIComponent","response","ok","contents","lastVersion","App","currentBackground","backgroundToggled","firstStartup","loadBackgrounds","backgrounds","saveBackgrounds","setBackground","getElementsByTagName","newBackground","checkBackground","handleTrelloReady","handleGeneralSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","handleBackgroundChange","packageInfo","version","checkVersion","bookmarksExpanded","as","faInfo","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d16f565.chunk.js","sourcesContent":["import LocalStorageProvider from \"../provider/LocalStorageProvider\";\nimport AbstractProvider from \"../provider/AbstractProvider\";\n\nconst defaultProvider = new LocalStorageProvider();\nlet currentProvider: AbstractProvider;\n\nexport function setProvider(provider: AbstractProvider) {\n  currentProvider = provider;\n}\n\nexport function getProvider(): AbstractProvider {\n  if (currentProvider === undefined) setProvider(defaultProvider);\n  return currentProvider;\n}\n","import React, { Component } from \"react\";\nimport \"../styles/SearchBar.scss\";\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n  expand: boolean;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = \"\";\n    let action = \"\";\n\n    if (this.props.engineType === \"duckduckgo\") {\n      name = \"DuckDuckGO\";\n      action = \"https://duckduckgo.com\";\n    }\n\n    if (this.props.engineType === \"google\") {\n      name = \"Google\";\n      action = \"https://google.com/search\";\n    }\n\n    if (this.props.engineType === \"custom\") {\n      name = this.props.engineUrl!.split(\"//\")[1].split(\"/\")[0];\n      action = this.props.engineUrl!;\n    }\n\n    const icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split(\"://\")[1].split(\"/\")[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className={`homepage-card ${this.props.expand ? \"expanded\" : \"\"}`}>\n        <input\n          autoFocus\n          name=\"q\"\n          placeholder={`Search at ${name}`}\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon,\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0 ||\n      this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let { url } = this.state;\n    if (!url.startsWith(\"http\")) {\n      url = `https://${url}`;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              {this.props.url === \"\" ? null : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={this.handleDelete}\n                >\n                  Delete\n                </button>\n            )}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                {this.props.url === \"\" ? \"Create\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    let { icon } = this.props;\n\n    if (icon === \"\") {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split(\"://\")[1].split(\"/\")[0]\n      }.ico`;\n    }\n\n    return (\n      <div\n        className=\"bookmark-entry\"\n      >\n        <a href={this.props.url}>\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import AbstractProvider from \"./AbstractProvider\";\n\nexport default class LocalStorageProvider extends AbstractProvider {\n  hasValue(key: string): boolean {\n    return localStorage.getItem(key) !== null;\n  }\n\n  unsetValue(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getValue(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setValue(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../styles/BookmarkBar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEntry from \"./BookmarkEntry\";\nimport BookmarkEditor from \"./BookmarkEditor\";\nimport { getProvider } from \"../utils/ProviderManager\";\n\ninterface BookmarkBarProps {\n  expand: boolean;\n}\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<BookmarkBarProps, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  componentDidMount() {\n    const bookmarks = getProvider().getValue(\"bookmarks\");\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  saveBookmarks = () => {\n    getProvider().setValue(\"bookmarks\", JSON.stringify(this.state.entries));\n  };\n\n  handleEditToggle = () => {\n    this.setState(prevState => ({ editable: !prevState.editable }));\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = \"\";\n    do {\n      id =\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12) +\n        Math.random().toString(36).substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter((entry) => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const { entries } = this.state;\n    entries.push(entry);\n    this.setState({ entries });\n    this.saveBookmarks();\n    window.location.reload();\n  };\n\n  getEntries = () => {\n    const { entries } = this.state;\n\n    return entries.map((bookmark) => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className={`homepage-card ${this.props.expand ? \"expand\" : \"\"}`}>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n            data-toggle=\"tooltip\"\n            title=\"Toggle bookmark edit mode\"\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          {this.props.expand ? <h4>Bookmarks:</h4> : null}\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Add new bookmark\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#bookmark-add-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          className={`bookmark-list ${this.state.editable ? \"editable\" : \"\"}`}\n        >\n          {this.getEntries()}\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          onSave={this.handleNewBookmark}\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faCircle,\n  faSave,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ToDoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n  onEdit: Function;\n}\n\ninterface ToDoEntryState {\n  done: boolean;\n  edit: boolean;\n  newText: string;\n}\n\nclass ToDoEntry extends Component<ToDoEntryProps, ToDoEntryState> {\n  state = { done: false, edit: false, newText: \"\" };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    if (this.state.edit) {\n      this.finishEdit();\n      return;\n    }\n    await this.setState((prevState) => ({ done: !prevState.done }));\n\n    this.props.onDoneToggle(this.props.id, this.state.done);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  toggleEditMode = () => {\n    this.setState(prevState => ({ edit: !prevState.edit }));\n  };\n\n  handleEditSave = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.finishEdit();\n  };\n\n  handleFormEscape = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 27) this.toggleEditMode();\n  };\n\n  finishEdit = () => {\n    this.toggleEditMode();\n    let text = this.state.newText;\n    if (text.trim() === \"\") text = this.props.text;\n    this.props.onEdit(this.props.id, text);\n  };\n\n  getTextComponent = () => {\n    if (this.state.edit) {\n      return (\n        <div\n          className={\n            this.state.edit ? \"todo-entry-text edit\" : \"todo-entry-text\"\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          <form onSubmit={this.handleEditSave} onKeyUp={this.handleFormEscape}>\n            <input\n              autoFocus\n              onChange={(e) => this.setState({ newText: e.target.value })}\n              onFocus={(e) => e.target.select()}\n              defaultValue={this.props.text}\n            />\n          </form>\n        </div>\n      );\n    }\n    return (\n      <div\n        className={\n          this.state.done ? \"todo-entry-text checked\" : \"todo-entry-text\"\n        }\n        onDoubleClick={this.toggleEditMode}\n      >\n        {this.props.text}\n      </div>\n    );\n  };\n\n  getIcon = () => {\n    if (this.state.edit) return faSave;\n    return this.state.done ? faCheckCircle : faCircle;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div\n            className=\"todo-checkbox\"\n            data-toggle=\"tooltip\"\n            title=\"Toggle done state\"\n            onClick={this.handleDone}\n          >\n            <FontAwesomeIcon\n              className={\n                this.state.done && !this.state.edit ? \"icon-checked\" : \"\"\n              }\n              icon={this.getIcon()}\n            />\n          </div>\n          {this.getTextComponent()}\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div\n            className=\"todo-entry-action\"\n            data-toggle=\"tooltip\"\n            title=\"Delete entry\"\n            onClick={this.handleDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoEntry;\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport { getProvider } from \"../utils/ProviderManager\";\nimport checked from \"../assets/checked.json\";\nimport ToDoEntry from \"./ToDoEntry\";\nimport \"../styles/ToDoBox.scss\";\n\ninterface ToDoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface ToDoBoxProps {\n  setupTooltip: Function;\n}\n\ninterface ToDoBoxState {\n  entries: Array<ToDoEntryState>;\n  loaded: boolean;\n}\n\nclass ToDoBox extends Component<ToDoBoxProps, ToDoBoxState> {\n  state = { entries: new Array<ToDoEntryState>(), loaded: false };\n\n  componentDidMount() {\n    const todo = getProvider().getValue(\"todo-list\");\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries, loaded: true });\n    } else {\n      this.setState({ loaded: true });\n      this.saveTodoList();\n    }\n  }\n\n  saveTodoList = () => {\n    getProvider().setValue(\"todo-list\", JSON.stringify(this.state.entries));\n    this.props.setupTooltip();\n  };\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = \"\";\n\n      do {\n        id =\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12) +\n          Math.random().toString(36).substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter((entry) => entry.id === id).length !== 0\n      );\n\n      const { entries } = this.state;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries });\n      this.saveTodoList();\n      (e.target as any).value = \"\";\n    }\n  };\n\n  handleDelete = (id: string) => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip(\"dispose\");\n    });\n    setTimeout(async () => {\n      let { entries } = this.state;\n      entries = entries.filter((value) => value.id !== id);\n      await this.setState({ entries });\n      this.saveTodoList();\n    }, 200);\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.done = done;\n\n      return newValue;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  handleEdit = async (id: string, newText: string) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      const newValue = value;\n      if (value.id === id) newValue.text = newText;\n\n      return newValue;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  getEntries = () => {\n    if (!this.state.loaded) return null;\n    if (this.state.entries.length === 0) {\n      return (\n        <div className=\"d-flex flex-column  align-items-center\">\n          <FadeIn className=\"trello-status-container\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{\n                animationData: checked,\n                loop: false,\n                autoplay: true,\n              }}\n            />\n            <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n          </FadeIn>\n        </div>\n      );\n    }\n\n    return this.state.entries.map((entry) => (\n      <ToDoEntry\n        onDelete={this.handleDelete}\n        onDoneToggle={this.handleDoneToggle}\n        onEdit={this.handleEdit}\n        text={entry.text}\n        done={entry.done}\n        id={entry.id}\n        key={entry.id}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>To Do:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"\"\n          type=\"text\"\n          placeholder=\"Add new things to your To Do\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>{this.getEntries()}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoBox;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloSettings.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TrelloClient, { Trello } from \"react-trello-client\";\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  loadedApiKey: string;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: \"\",\n    loadedApiKey: \"\",\n    loginState: 0,\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    this.setState((prevState) => ({\n      loadedApiKey: prevState.apiKey,\n      loginState,\n    }));\n    this.props.onSave(this.state.apiKey);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem(\"trello_token\") === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      loadedApiKey: this.props.apiKey,\n    });\n  };\n\n  handleLogin = () => {\n    this.props.onReady(Trello);\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0)\n      return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist\n        authorizeInteractive\n        authorizeScopeRead // boolean: {true} | {false}\n        authorizeScopeWrite // boolean: {true} | {false}\n        authorizeScopeAccount // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log(\"Login error!\")} // function: {() => console.log('Login error!')}\n        autoAuthorize // boolean: {true} | {false}\n        authorizeButton // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>\n                Login into your Trello Account and get an API key in{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n                . Then add the homepage URL to the Allowed Origins.\n              </p>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? \"hidden\" : \"\"}\n              >\n                {this.getTrelloClient()}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n  while (str.length < size) str = `0${str}`;\n  return str;\n}\n\nexport function formatDate(date: Date): string {\n  const year = date.getFullYear();\n  const month = withLeadingZeroes(date.getMonth() + 1, 2);\n  const day = withLeadingZeroes(date.getDate(), 2);\n  return `${year}-${month}-${day}`;\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShareSquare,\n  faCheckSquare,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { formatDate } from \"../utils/Formater\";\n\nconst TrelloLabelColors = {\n  green: \"#59C059\",\n  yellow: \"#C0C059\",\n  orange: \"#C08C59\",\n  red: \"#C05959\",\n  purple: \"#8C59C0\",\n  blue: \"#597BC0\",\n  sky: \"#59C0C0\",\n  lime: \"#8CC059\",\n  pink: \"#C0598C\",\n  black: \"#344563\",\n};\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return formatDate(date);\n  };\n\n  getDueDate = (card: any) => {\n    if (card.due === null) return null;\n\n    return <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>;\n  };\n\n  getChecklists = (card: any) => {\n    if (card.checklists === undefined) return null;\n\n    return (\n      <div className=\"trello-card-checklists\">\n        {card.checklists.map((list: any) => {\n          const items = list.checkItems;\n          const completedItems = items.filter(\n            (item: any) => item.state === \"complete\"\n          );\n          return (\n            <div\n              key={list.id}\n              className={`trello-card-checklist ${\n                items.length === completedItems.length ? \"completed\" : \"\"\n              }`}\n            >\n              <FontAwesomeIcon className=\"icon\" icon={faCheckSquare} />\n              {`${completedItems.length}/${items.length}`}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  getLabels = (card: any) => {\n    const labels = card.labels as Array<any>;\n    if (labels.length === 0) return null;\n\n    return (\n      <div className=\"trello-card-labels\">\n        {labels.map((label) => (\n          <div\n            key={label.id}\n            className=\"trello-card-label\"\n            style={{\n              color: \"white\",\n              backgroundColor: (TrelloLabelColors as any)[label.color],\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        {this.getLabels(card)}\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={card.shortUrl}\n              className=\"trello-card-action-anchor\"\n              data-toggle=\"tooltip\"\n              data-placement=\"left\"\n              title=\"Open card on Trello\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {this.getDueDate(card)}\n        {this.getChecklists(card)}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from \"react\";\nimport {\n  faCog,\n  faTimes,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport TrelloSettings from \"./TrelloSettings\";\nimport TrelloCard from \"./TrelloCard\";\nimport loader from \"../assets/loader.json\";\nimport checked from \"../assets/checked.json\";\nimport \"../styles/TrelloIntegration.scss\";\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  onReady: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  trello: any;\n  cards?: Array<any>;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedList: any;\n  selectedBoard: any;\n  /*\n  -1 = refreshing\n  0 = loading\n  1 = done\n  */\n  status: number;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = {\n    logged: false,\n    trello: {} as any,\n    status: 0,\n    selectedList: {} as any,\n    selectedBoard: {} as any,\n    cards: new Array<any>(),\n    boards: new Array<any>(),\n    lists: new Array<any>(),\n  };\n\n  saveHistory = () => {\n    localStorage.setItem(\n      \"trello-history\",\n      JSON.stringify({\n        selectedList: this.state.selectedList.id,\n        selectedBoard: this.state.selectedBoard.id,\n      })\n    );\n  };\n\n  loadBoards = async (trello: any) => {\n    trello.get(\n      \"members/me/boards\",\n      async (res: any) => {\n        console.log(\"get boards\");\n        await this.setState({ boards: res });\n        this.loadLists(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadLists = (trello: any) => {\n    let boardId = this.state.selectedBoard.id;\n    if (boardId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedBoard === undefined) {\n          boardId = this.state.boards[0].id;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards[0],\n          }));\n        } else {\n          boardId = json.selectedBoard;\n          this.setState((prevState) => ({\n            selectedBoard: prevState.boards.find(\n              (board) => board.id === json.selectedBoard\n            ),\n          }));\n        }\n      } else {\n        boardId = this.state.boards[0].id;\n        this.setState((prevState) => ({ selectedBoard: prevState.boards[0] }));\n      }\n    }\n    trello.get(\n      `boards/${boardId}/lists`,\n      async (res: any) => {\n        console.log(\"get lists\");\n        await this.setState({ lists: res });\n        this.loadCards(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadCards = (trello: any) => {\n    let listId = this.state.selectedList.id;\n    if (listId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedList === undefined) {\n          listId = this.state.lists[0].id;\n          this.setState((prevState) => ({ selectedList: prevState.lists[0] }));\n        } else {\n          listId = json.selectedList;\n          this.setState((prevState) => ({\n            selectedList: prevState.lists.find(\n              (list) => list.id === json.selectedList\n            ),\n          }));\n        }\n      } else {\n        listId = this.state.lists[0].id;\n        this.setState(prevState => ({ selectedList: prevState.lists[0] }));\n      }\n    }\n    trello.get(\n      `lists/${listId}/cards`,\n      async (res: any) => {\n        console.log(\"get cards\");\n        const cardsPromise = res.map(async (card: any) => {\n          if (card.idChecklists.length === 0) return card;\n\n          console.log(\"get checklists\");\n          const checklistPromise = card.idChecklists.map(\n            async (checklist: any) =>\n              new Promise((resolve) => {\n                trello.get(\n                  `checklists/${checklist}`,\n                  (checklistRes: any) => resolve(checklistRes),\n                  () => {\n                    resolve(undefined);\n                  }\n                );\n              })\n          );\n\n          const checklists = await Promise.all(checklistPromise);\n          card.checklists = checklists;\n          return card;\n        });\n        const cards = await Promise.all(cardsPromise);\n        this.setState({ cards, status: 1 });\n        this.props.onReady();\n      },\n      (err: any) => {\n        console.log(\"ERROR:\", err);\n        this.setState({ cards: undefined, status: 1 });\n        this.props.onReady();\n      }\n    );\n  };\n\n  handleListChange = async (changeBy: number) => {\n    const index = this.state.lists.indexOf(this.state.selectedList);\n    const maxIndex = this.state.lists.length - 1;\n    let newIndex = index + changeBy;\n    if (newIndex <= -1) newIndex = maxIndex;\n    if (newIndex > maxIndex) newIndex = 0;\n\n    await this.setState(prevState => ({\n      selectedList: prevState.lists[newIndex],\n      status: 0,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleListSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedList: prevState.lists.find((list) => list.id === id),\n      status: -1,\n    }));\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleBoardSelect = async (id: string) => {\n    await this.setState(prevState => ({\n      selectedBoard: prevState.boards.find((board) => board.id === id),\n      selectedList: {} as any,\n      status: -1,\n    }));\n    this.loadBoards(this.state.trello);\n    this.saveHistory();\n  };\n\n  getNavigator = () => (\n    <>\n      <div className=\"trello-board-navigator trello-navigator\">\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-boards-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h6 className=\"text-center\">{this.state.selectedBoard.name}</h6>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-boards-dropdown\"\n          >\n            {this.state.boards.map((board) => (\n              <div\n                onClick={() => this.handleBoardSelect(board.id)}\n                key={board.id}\n                className=\"dropdown-item\"\n              >\n                {board.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"trello-list-navigator trello-navigator\">\n        <div onClick={() => this.handleListChange(-1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </div>\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-lists-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h3 className=\"text-center\">{this.state.selectedList.name}</h3>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-lists-dropdown\"\n          >\n            {this.state.lists.map((list) => (\n              <div\n                onClick={() => this.handleListSelect(list.id)}\n                key={list.id}\n                className=\"dropdown-item\"\n              >\n                {list.name}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div onClick={() => this.handleListChange(+1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>\n    </>\n  );\n\n  showTrelloInfo = () => {\n    if (this.props.apiKey.trim().length === 0)\n      return <h4>Configure Trello to sync your cards</h4>;\n\n    if (this.state.logged && this.state.status === 1) {\n      if (this.state.cards === undefined) {\n        return (\n          <div className=\"d-flex flex-column align-items-center\">\n            <FadeIn className=\"trello-status-container\">\n              <FontAwesomeIcon icon={faTimes} className=\"trello-status error\" />\n              <h5 className=\"trello-status-text\">\n                Cannot get Trello.\n                <br />\n                Check the config\n              </h5>\n            </FadeIn>\n          </div>\n        );\n      }\n\n      if (this.state.cards.length === 0) {\n        return (\n          <>\n            {this.getNavigator()}\n            <div className=\"d-flex flex-column  align-items-center\">\n              <FadeIn className=\"trello-status-container\">\n                <Lottie\n                  height=\"120px\"\n                  width=\"120px\"\n                  config={{\n                    animationData: checked,\n                    loop: false,\n                    autoplay: true,\n                  }}\n                />\n                <h5 className=\"trello-status-text\">It&apos;s empty!</h5>\n              </FadeIn>\n            </div>\n          </>\n        );\n      }\n\n      return (\n        <>\n          {this.getNavigator()}\n          <div id=\"trello-cards-container\">\n            {this.state.cards.map((card) => (\n              <FadeIn key={card.id}>\n                <TrelloCard card={card} />\n              </FadeIn>\n            ))}\n          </div>\n        </>\n      );\n    }\n    return (\n      <FadeIn>\n        <div className=\"d-flex flex-column  align-items-center\">\n          <Lottie\n            height=\"120px\"\n            width=\"120px\"\n            config={{ animationData: loader, loop: true, autoplay: true }}\n          />\n          <h5 className=\"trello-status-text\">Fetching Trello...</h5>\n        </div>\n      </FadeIn>\n    );\n  };\n\n  handleSave = (apiKey: string) => {\n    localStorage.setItem(\n      \"trello-config\",\n      JSON.stringify({ apiKey: apiKey.trim() })\n    );\n  };\n\n  handleReady = (trello: any) => {\n    if (this.state.logged) return;\n    this.loadBoards(trello);\n    this.setState({ logged: true, trello });\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Trello\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#trello-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          onSave={this.handleSave}\n          onReady={this.handleReady}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst gapiconfig = { apiKey: \"\", clientId: \"\" };\n\nexport interface GCalendarSettingsProps {\n  onLoginStatusChange: Function;\n  showWeather: boolean;\n  onSave: Function;\n}\n\nexport interface GCalendarSettingsState {\n  isSignedIn?: boolean;\n  isClientReady: boolean;\n  showWeather: boolean;\n}\n\nclass GCalendarSettings extends Component<\n  GCalendarSettingsProps,\n  GCalendarSettingsState\n> {\n  state = {\n    isSignedIn: undefined,\n    isClientReady: false,\n    showWeather: true,\n  };\n\n  async componentDidMount() {\n    this.setState({showWeather: this.props.showWeather});\n    try {\n      const config = require(\"../config/gapi.json\");\n      if (config !== undefined) {\n        gapiconfig.clientId = config.clientId;\n        gapiconfig.apiKey = config.apiKey;\n      }\n    } catch (e) {\n      console.log(\"Cannot find credentials file at src/config/gapi.json\");\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    script.onload = () => {\n      const { gapi } = window as any;\n      gapi.load(\"client:auth2\", this.initClient);\n    };\n\n    document.body.appendChild(script);\n  }\n\n  initClient = () => {\n    const { gapi } = window as any;\n\n    gapi.client\n      .init({\n        apiKey: gapiconfig.apiKey,\n        clientId: gapiconfig.clientId,\n        discoveryDocs: [\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n        ],\n        scope: \"https://www.googleapis.com/auth/calendar.readonly\",\n      })\n      .catch(() => {\n        console.log(\"Cannot init the Calendar client.\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n        }\n      })\n      .then(() => {\n        console.log(\"Calendar client loaded\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n\n        this.setState({ isClientReady: true });\n\n        gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    console.log(\"The login status was chagned to\", isSignedIn);\n    this.setState({ isSignedIn });\n    this.props.onLoginStatusChange(isSignedIn);\n  };\n\n  getActionButton = (gapi: any) => {\n    if (gapiconfig.clientId === \"\" || gapiconfig.apiKey === \"\")\n      return \"No credentials provided (see ./config/gapi.json)\";\n    if (!this.state.isClientReady) return null;\n    if (this.state.isSignedIn) {\n      return (\n        <button\n          type=\"button\"\n          onClick={() => gapi.auth2.getAuthInstance().signOut()}\n          className=\"btn btn-secondary\"\n        >\n          Sign out\n        </button>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        onClick={() => gapi.auth2.getAuthInstance().signIn()}\n        className=\"btn btn-primary\"\n      >\n        Sign in with Google Account\n      </button>\n    );\n  };\n\n  handleSave = () => {\n    localStorage.setItem(\"show-weather\", JSON.stringify({showWeather: this.state.showWeather}));\n    this.props.onSave({showWeather: this.state.showWeather});\n  }\n\n  handleShowWeather = (e: React.ChangeEvent<any>) => {\n    this.setState({showWeather: e.target.checked});\n  }\n\n  render() {\n    if (this.state.isSignedIn === undefined) return null;\n\n    const { gapi } = window as any;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"gcalendar-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"gcalendar-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"gcalendar-settings-modal-label\">\n                Google Calendar settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {this.getActionButton(gapi)}\n              <hr />\n              <div className=\"checkbox-input\">\n                <input type=\"checkbox\" defaultChecked={this.props.showWeather} onChange={this.handleShowWeather} />\n                <label>Show weather</label>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSave}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GCalendarSettings;\n","import React, { Component } from \"react\";\nimport { formatDate, withLeadingZeroes as pad } from \"../utils/Formater\";\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hours = pad(date.getHours(), 2);\n    const minutes = pad(date.getMinutes(), 2);\n    const seconds = pad(date.getSeconds(), 2);\n    return (\n      <>\n        <h6 id=\"calendar-today\">{formatDate(date)}</h6>\n        <h3 id=\"calendar-clock\">{`${hours}:${minutes}:${seconds}`}</h3>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Weather() {\n  const [weather, setWeather] = useState(undefined as string | undefined);\n  useEffect(() => {\n    const weatherCache = localStorage.getItem(\"weather-cache\");\n    const now = new Date().getTime() / 1000;\n    \n    if(weatherCache !== null) {\n      console.log(\"Weather cache found...\");\n      const {date, data} = JSON.parse(weatherCache);\n      if(now < date + (60 * 30)) {\n        setWeather(data);\n        return;\n      }\n      console.log(\"Weather cache is too old.\")\n    }\n\n    console.log(\"Fetching weather...\");\n    fetch(\"https://wttr.in/?view=3\")\n      .then(res => res.text())\n      .then(text => {\n        localStorage.setItem(\"weather-cache\", JSON.stringify({date: now, data: text}));\n        setWeather(text);\n      });\n  }, [setWeather])\n  \n  return (<h6 id=\"weather\">{weather || \"Fetching weather\"}</h6>);\n}\n\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport GCalendarSettings from \"./GCalendarSettings\";\nimport Clock from \"./Clock\";\nimport Weather from \"./Weather\";\nimport loader from \"../assets/loader.json\";\nimport \"../styles/CalendarIntegration.scss\";\n\ninterface GCalendarIntegrationState {\n  /*\n  -1 = not logged\n  0 = loading\n  1 = logged\n  */\n  loginState: number;\n  events: Array<any>;\n  showWeather: boolean;\n}\n\nconst weekDays = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nclass GCalendarIntegration extends Component<any, GCalendarIntegrationState> {\n  state = { loginState: 0, events: new Array<any>(), showWeather: true };\n\n  colors: any = {};\n\n  componentDidMount() {\n    const showWeather = localStorage.getItem(\"show-weather\");\n    if (showWeather !== null) {\n      this.setState(JSON.parse(showWeather));\n    }\n  }\n\n  loadEvents = async (start: Date) => {\n    const { gapi } = window as any;\n\n    const end = new Date(start.getTime() + 30 * 24 * 60 * 60 * 1000);\n\n    const events = new Array<any>();\n\n    // resolve colors\n    this.colors = (await gapi.client.calendar.colors.get()).result.calendar;\n\n    // resolve the calendars\n    const calendarsRes = await gapi.client.calendar.calendarList.list();\n    // resolve the events for each calendar\n    const promises = await (calendarsRes.result.items as Array<any>).map(\n      async (calendar) => {\n        const res = await gapi.client.calendar.events.list({\n          calendarId: calendar.id,\n          timeMin: start.toISOString(),\n          timeMax: end.toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: 50,\n          orderBy: \"startTime\",\n        });\n        events.push(\n          ...res.result.items.map((event: any) => {\n            event.calendar = calendar;\n            event.colorId = calendar.colorId;\n            let displayTime = \"All day\";\n            if (event.start.date === undefined) {\n              const eventStart = event.start.dateTime\n                .split(\"T\")[1]\n                .substring(0, 5);\n              const eventEnd = event.end.dateTime.split(\"T\")[1].substring(0, 5);\n              displayTime = `${eventStart} - ${eventEnd}`;\n            }\n            event.displayTime = displayTime;\n            return event;\n          })\n        );\n      }\n    );\n\n    await Promise.all(promises);\n\n    await this.setState({ events });\n  };\n\n  getStatus = () => {\n    if (this.state.loginState === -1)\n      return <h4>Configure Google Calendar to see future events</h4>;\n    return null;\n  };\n\n  handleLoginStatusChange = async (isSignedIn: boolean) => {\n    if (isSignedIn) {\n      await this.loadEvents(new Date());\n    }\n    this.setState({ loginState: isSignedIn ? 1 : -1 });\n  };\n\n  listEvents = () => {\n    if (this.state.loginState === -1) return null;\n    if (this.state.loginState === 0) {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Google Calendar...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n\n    const eventsByDay = new Map<string, Array<any>>();\n\n    this.state.events.forEach((event) => {\n      let when = event.start.date;\n      if (when === undefined) when = event.start.dateTime.split(\"T\")[0];\n\n      let events = new Array<any>();\n      if (eventsByDay.has(when)) {\n        events = eventsByDay.get(when)!;\n      }\n      events.push(event);\n      eventsByDay.set(when, events);\n    });\n\n    // sort days\n    const sorted = Array.from(eventsByDay.entries()).sort();\n\n    const content = new Array<any>();\n    content.push(<h5 key=\"header\">Future events:</h5>);\n\n    sorted.forEach((entry: Array<any>) => {\n      const when = entry[0] as string;\n      const weekDay = weekDays[new Date(when).getUTCDay()];\n      let events = entry[1] as Array<any>;\n\n      // sort events\n      events = events.sort((a, b) => {\n        if (a.displayTime === \"All day\") return -1;\n        if (b.displayTime === \"All day\") return 1;\n\n        if (a.displayTime < b.displayTime) return -1;\n        if (a.displayTime > b.displayTime) return 1;\n        return 0;\n      });\n\n      content.push(\n        <FadeIn key={when}>\n          <div className=\"gcalendar-events\">\n            <h6>{`${when} - ${weekDay}`}</h6>\n            {events.map((event) => {\n              const color = this.colors[event.colorId];\n              return (\n                <div\n                  key={event.id}\n                  style={{\n                    backgroundColor: color.background,\n                    color: color.foreground,\n                  }}\n                >\n                  {`${event.displayTime}: ${event.summary}`}\n                </div>\n              );\n            })}\n          </div>\n        </FadeIn>\n      );\n    });\n\n    return content;\n  };\n\n  handleSave = (config: any) => {\n    this.setState(config);\n  }\n\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Calendar:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Google Calendar\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#gcalendar-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.showWeather ? <Weather /> : null}\n        <Clock />\n        {this.getStatus()}\n        {this.listEvents()}\n        <GCalendarSettings \n          showWeather={this.state.showWeather} \n          onSave={this.handleSave}\n          onLoginStatusChange={this.handleLoginStatusChange} \n        />\n      </div>\n    );\n  }\n}\n\nexport default GCalendarIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/GeneralSettings.scss\";\n\ninterface GeneralSettingsProps {\n  onSave: Function;\n}\n\ninterface GeneralSettingsState {\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n}\n\nclass GeneralSettings extends Component<\n  GeneralSettingsProps,\n  GeneralSettingsState\n> {\n  state = { engineType: \"\", engineUrl: \"\", showToDo: true, showCalendar: true, showTrello: true, expandBookmarks: false};\n\n  async componentDidMount() {\n    const layoutConfig = localStorage.getItem(\"layout\");\n    if (layoutConfig !== null) {\n      const { showToDo, showCalendar, showTrello, expandBookmarks} = JSON.parse(layoutConfig);\n      this.setState({showToDo, showCalendar, showTrello, expandBookmarks});\n    }\n\n    const searchEngineConfig = localStorage.getItem(\"search-engine\");\n    if (searchEngineConfig === null) {\n      await this.setState({ engineType: \"duckduckgo\" });\n      this.saveEngine();\n    } else {\n      const json = JSON.parse(searchEngineConfig);\n      await this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl,\n      });\n    }\n    this.props.onSave(this.state);\n  }\n\n  saveEngine = () => {\n    localStorage.setItem(\"search-engine\", JSON.stringify(this.state));\n  };\n\n  saveLayout = () => {\n    localStorage.setItem(\"layout\", JSON.stringify(\n      {showToDo: this.state.showToDo, showCalendar: this.state.showCalendar, showTrello: this.state.showTrello, expandBookmarks: this.state.expandBookmarks}\n    ));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleCheckboxChange = (e: React.ChangeEvent<any>, keyName: string) => {\n    const newState = {} as any;\n    newState[keyName] = e.target.checked;\n    this.setState(newState);\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith(\"https://\") &&\n      !this.state.engineUrl.startsWith(\"http://\")\n    ) {\n      await this.setState((prevState) => ({\n        engineUrl: `https://${prevState.engineUrl}`,\n      }));\n    }\n    this.saveEngine();\n    this.saveLayout();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    \n    const cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b)\n      .length;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"general-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"general-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"general-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <label>Search engine</label>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === \"custom\" ? \"\" : \"hidden\"\n                  }`}\n                />\n              </div>\n              <hr />\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showToDo} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showToDo\")} />\n                <label>Show To Do card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showTrello} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showTrello\")} />\n                <label>Show Trello card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.showCalendar} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"showCalendar\")} />\n                <label>Show Calendar card</label>\n              </div>\n              <div className=\"checkbox-input\">\n                <input defaultChecked={this.state.expandBookmarks} type=\"checkbox\" onChange={(e) => this.handleCheckboxChange(e, \"expandBookmarks\")} disabled={cardsCount === 3} />\n                <label>Expand bookmarks (requires 2 cards or less)</label>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GeneralSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    \"day-url\": \"\",\n    \"day-author\": \"\",\n    \"day-authorUrl\": \"\",\n    \"night-url\": \"\",\n    \"night-author\": \"\",\n    \"night-authorUrl\": \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      \"day-url\": this.props.day.url,\n      \"day-author\": this.props.day.author,\n      \"day-authorUrl\": this.props.day.authorUrl,\n      \"night-url\": this.props.night.url,\n      \"night-author\": this.props.night.author,\n      \"night-authorUrl\": this.props.night.authorUrl,\n    });\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const { name } = e.target as any;\n    const { value } = e.target as any;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state[\"day-url\"],\n        author: this.state[\"day-author\"],\n        authorUrl: this.state[\"day-authorUrl\"],\n      },\n      {\n        url: this.state[\"night-url\"],\n        author: this.state[\"night-author\"],\n        authorUrl: this.state[\"night-authorUrl\"],\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Day background</p>\n              <input\n                id=\"day-url\"\n                name=\"day-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-url\"]}\n              />\n              <input\n                name=\"day-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-author\"]}\n              />\n              <input\n                name=\"day-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-authorUrl\"]}\n              />\n              <p>Night background</p>\n              <input\n                name=\"night-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-url\"]}\n              />\n              <input\n                name=\"night-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-author\"]}\n              />\n              <input\n                name=\"night-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-authorUrl\"]}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div data-toggle=\"tooltip\" title=\"Open general settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#general-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        Homepage made by{\" \"}\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pauloo27\n        </a>{\" \"}\n        under GPL-2 license\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faAdjust } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n  toggleBackground: Function;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        <div\n          data-toggle=\"tooltip\"\n          title=\"Toggle background\"\n          onClick={() => this.props.toggleBackground()}\n          className=\"homepage-toggle-background\"\n        >\n          <div>\n            <FontAwesomeIcon icon={faAdjust} />\n          </div>\n        </div>\n        Image by{\" \"}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n        <div data-toggle=\"tooltip\" title=\"Open background settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#background-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport \"../styles/WelcomeModal.scss\";\n\ninterface Theme {\n  name: string;\n  author: string;\n  authorUrl: string;\n  dayUrl: string;\n  nightUrl: string;\n}\n\nconst themes = [\n  {\n    name: \"Pixelart city\",\n    author: \"Unknown\", \n    authorUrl: \"https://imgur.com/a/WmmsFbs\",\n    dayUrl: \"https://i.imgur.com/fxoldSH.jpg\",\n    nightUrl: \"https://i.imgur.com/KccUkyq.jpg\",\n  },\n  {\n    name: \"Forest\",\n    author: \"sebastianinman\",\n    authorUrl: \"https://dynamicwallpaper.club/u/sebastianinman\",\n    dayUrl: \"https://i.imgur.com/CdaQWae.jpg\",\n    nightUrl: \"https://i.imgur.com/eSK3Xdd.jpg\",\n  },\n  {\n    name: \"Anime city\",\n    author: \"dasalejo\",\n    authorUrl: \"https://dynamicwallpaper.club/u/dasalejo\",\n    dayUrl: \"https://i.imgur.com/CvRvFOB.jpg\",\n    nightUrl: \"https://i.imgur.com/u8WqVCf.jpg\",\n  },\n] as Array<Theme>;\ninterface ThemeOptionProps {\n  theme: Theme;\n  setId: Function;\n  id: number;\n  selected: number;\n}\n\nfunction ThemeOption(props: ThemeOptionProps) {\n  return (\n    <div\n      className={`theme-option ${props.selected === props.id ? \"theme-option-selected\" : \"\"}`}\n      onClick={() => props.setId(props.id)}\n    >\n      <img src={props.theme.dayUrl} alt={props.theme.name} />\n    </div>\n  );\n}\n\n\ninterface WelcomeModalProps {\n  updateBackgrounds: Function;\n}\n\nexport default function WelcomeModal(props: WelcomeModalProps) {\n  const [theme, setTheme] = useState(1);\n\n  const handleThemeChange = useCallback((index: number) => {\n    setTheme(index);\n    const t = themes[index];\n    localStorage.setItem(\"backgrounds\", JSON.stringify({\n      dayBackground: {\n          url: t.dayUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n        nightBackground: {\n          url: t.nightUrl,\n          author: t.author,\n          authorUrl: t.authorUrl,\n        },\n    }));\n    props.updateBackgrounds();\n  }, [setTheme, props]);\n\n  const handleSave = useCallback(() => {\n    ($(\"#welcome-modal\") as any).modal(\"hide\");\n    ($(\"#general-settings-modal\") as any).modal(\"show\");\n  }, []);\n\n  useEffect(() => {\n    ($(\"#welcome-modal\") as any).modal(\"show\");\n  }, []);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"welcome-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"welcome-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"welcome-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>Hello!</h4>\n            <p>\n              That's your first time using this homepage! Now this page is cached in your browser \n              so you can use it without internet (with limitations)!\n            </p>\n            <hr />\n            <div id=\"theme-selector\">\n              <label>\n                Select your favorite background theme:\n              </label>\n              <div id=\"theme-selector-options\">\n                <ThemeOption \n                  id={0}\n                  selected={theme}\n                  setId={handleThemeChange}\n                  theme={themes[0]}\n                />\n                <ThemeOption \n                  id={1}\n                  selected={theme}\n                  setId={handleThemeChange}\n                  theme={themes[1]}\n                />\n                <ThemeOption \n                  id={2}\n                  selected={theme}\n                  setId={handleThemeChange}\n                  theme={themes[2]}\n                />\n              </div>\n              <hr/>\n              <div id=\"licese-notice\">\n                <p>\n                  This program is free software; you can redistribute it and/or modify it under the \n                  terms of the GNU General Public License.\n                </p>\n                <p>\n                  This program is distributed in the hope that it will be useful, but WITHOUT ANY \n                  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \n                  PARTICULAR PURPOSE.\n                </p>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Pauloo27/homepage/blob/master/LICENSE\">See the license for more details</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSave}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport \"../styles/UpdateModal.scss\";\n\ninterface UpdateModalProps {\n  currentVersion: string;\n  lastVersion: string;\n}\n\nexport default function UpdateModal(props: UpdateModalProps) {\n  const [changelog, setChangelog] = useState(\"Loading changelog...\");\n\n  useEffect(() => {\n    ($(\"#update-modal\") as any).modal(\"show\");\n\n    const githubUrl = `https://api.github.com/repos/Pauloo27/homepage/releases/tags/v${props.currentVersion}`;\n\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(githubUrl)}`)\n      .then(response => {\n        if (response.ok) return response.json();\n        setChangelog(\"Cannot load changelog.\");\n      })\n      .then(data => { \n        setChangelog(JSON.parse(data.contents).body);\n      });\n  }, [setChangelog, props.currentVersion]);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"update-modal\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"update-modal-label\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"update-modal-label\">\n              Welcome\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">\n                <FontAwesomeIcon icon={faTimes} />\n              </span>{\" \"}\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <h4>{`Version ${props.currentVersion} installed!`}</h4>\n            <p>\n              {`Homepage updated from version ${props.lastVersion} to ${props.currentVersion}.`}\n            </p>\n            <div id=\"changelog-container\">\n              <pre id=\"changelog\">\n                {changelog}\n              </pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SearchBar from \"./components/SearchBar\";\nimport BookmarkBar from \"./components/BookmarkBar\";\nimport ToDoBox from \"./components/ToDoBox\";\nimport TrelloIntegration from \"./components/TrelloIntegration\";\nimport GCalendarIntegration from \"./components/GCalendarIntegration\";\nimport GeneralSettings from \"./components/GeneralSettings\";\nimport BackgroundSettings from \"./components/BackgroundSettings\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport BackgroundInfo from \"./components/BackgroundInfo\";\nimport WelcomeModal from \"./components/WelcomeModal\";\nimport UpdateModal from \"./components/UpdateModal\";\nimport \"./styles/App.scss\";\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  backgroundToggled: boolean;\n  engineType: string;\n  engineUrl?: string;\n  showToDo: boolean;\n  showCalendar: boolean;\n  showTrello: boolean;\n  expandBookmarks: boolean;\n  firstStartup: boolean;\n  currentVersion: string;\n  lastVersion: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    nightBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    currentBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    backgroundToggled: false,\n    engineType: \"\",\n    engineUrl: undefined,\n    showToDo: true,\n    showTrello: true,\n    showCalendar: true,\n    expandBookmarks: false,\n    firstStartup: false,\n    currentVersion: \"\",\n    lastVersion: \"\",\n  };\n\n  timerId: any;\n\n  loadBackgrounds = async () => {\n    const backgrounds = localStorage.getItem(\"backgrounds\");\n    if (backgrounds === null) {\n      await this.setState({\n        dayBackground: {\n          url: \"https://i.imgur.com/CdaQWae.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n        nightBackground: {\n          url: \"https://i.imgur.com/eSK3Xdd.jpg\",\n          author: \"sebastianinman\",\n          authorUrl: \"https://dynamicwallpaper.club/wallpaper/ci7xe3twgfv\",\n        },\n      });\n      this.saveBackgrounds();\n    } else {\n      await this.setState(JSON.parse(backgrounds));\n    }\n  }\n\n  checkVersion() {\n    const packageInfo = require(\"../package.json\");\n    let version = localStorage.getItem(\"version\");\n    if (version !== null)  {\n      if (version !== packageInfo.version) {\n        console.log(\"Updated to version\", version);\n      }\n    } else {\n      this.setState({firstStartup: true});\n    }\n    localStorage.setItem(\"version\", packageInfo.version);\n    if (version === null) version = packageInfo.version;\n    this.setState({currentVersion: packageInfo.version, lastVersion: version!});\n  }\n\n  async componentDidMount() {\n    await this.loadBackgrounds();\n\n    this.checkBackground();\n\n    this.checkVersion();\n\n    this.timerId = setInterval(() => this.checkBackground(), 10 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  setBackground = (background: Background) => {\n    if (this.state.currentBackground === background) return;\n\n    this.setState({ currentBackground: background });\n    document.getElementsByTagName(\"body\")[0].background = background.url;\n  };\n\n  toggleBackground = () => {\n    let newBackground: Background;\n\n    if (this.state.currentBackground === this.state.dayBackground) {\n      newBackground = this.state.nightBackground;\n    } else {\n      newBackground = this.state.dayBackground;\n    }\n\n    this.setState({ backgroundToggled: true });\n    this.setBackground(newBackground);\n  };\n\n  checkBackground = () => {\n    if (this.state.backgroundToggled) return;\n\n    const now = new Date();\n    let newBackground: Background;\n\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      newBackground = this.state.dayBackground;\n    } else {\n      newBackground = this.state.nightBackground;\n    }\n\n    this.setBackground(newBackground);\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      \"backgrounds\",\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground,\n      })\n    );\n  };\n\n  setupTooltip = () => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip();\n    });\n  };\n\n  handleTrelloReady = () => {\n    this.setupTooltip();\n  };\n\n  handleGeneralSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background\n  ) => {\n    await this.setState({ dayBackground, nightBackground });\n    await this.saveBackgrounds();\n    this.setState({ backgroundToggled: false });\n    this.checkBackground();\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem(\"trello-config\");\n    if (configEncoded === null) {\n      return <TrelloIntegration apiKey=\"\" onReady={this.handleTrelloReady} />;\n    }\n    const config = JSON.parse(configEncoded);\n    return (\n      <TrelloIntegration\n        apiKey={config.apiKey}\n        onReady={this.handleTrelloReady}\n      />\n    );\n  };\n\n  handleBackgroundChange = () => {\n    this.loadBackgrounds().then(this.checkBackground);\n  };\n\n  render() {\n    if (this.state.currentBackground.url === \"\") return null;\n\n    let cardsCount = [this.state.showToDo, this.state.showCalendar, this.state.showTrello]\n      .filter(b => b).length;\n\n    const bookmarksExpanded = cardsCount !== 3 && this.state.expandBookmarks;\n\n    if (bookmarksExpanded) {\n      cardsCount++;\n    }\n\n    this.setupTooltip();\n\n    return (\n      <>\n        <link rel=\"preload\" href={this.state.dayBackground.url} as=\"image\" />\n        <link rel=\"preload\" href={this.state.nightBackground.url} as=\"image\" />\n        {this.state.firstStartup ? <WelcomeModal updateBackgrounds={this.handleBackgroundChange} /> : null}\n        {this.state.currentVersion !== this.state.lastVersion ? \n          <UpdateModal currentVersion={this.state.currentVersion} lastVersion={this.state.lastVersion} /> \n        : null}\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n            expand={bookmarksExpanded}\n          />\n          {bookmarksExpanded ? null : <BookmarkBar expand={false} /> }\n        </div>\n        <div id=\"middle-container\" className={`card-count-${cardsCount}`}>\n          {this.state.showToDo ? <ToDoBox setupTooltip={this.setupTooltip} /> : null}\n          {this.state.showCalendar ? <GCalendarIntegration /> : null}\n          {this.state.showTrello ? this.loadTrelloIntegration() : null}\n          {bookmarksExpanded ? <BookmarkBar expand /> : null}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo />\n          <BackgroundInfo\n            toggleBackground={this.toggleBackground}\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <div id=\"footer-dropdown\">\n          <div className=\"dropdown\">\n            <button\n              className=\"footer-dropdown-button\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <FontAwesomeIcon icon={faInfo} />\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <ProjectInfo />\n              </div>\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <BackgroundInfo\n                  toggleBackground={this.toggleBackground}\n                  backgroundAuthor={this.state.currentBackground.author}\n                  backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n                />\n                {\" \"}\n              </div>\n            </div>\n          </div>\n        </div>\n        <GeneralSettings onSave={this.handleGeneralSave} />\n        <BackgroundSettings\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./styles/Global.scss\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}